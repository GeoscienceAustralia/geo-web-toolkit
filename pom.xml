<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>au.gov.ga.framework</groupId>
        <artifactId>ga-maven-parent</artifactId>
        <version>1.0.5</version>
    </parent>

    <groupId>au.gov.ga</groupId>
	<artifactId>geo-web-toolkit</artifactId>
	<version>0.2.1-SNAPSHOT</version>
	<packaging>jar</packaging>
    <name>geo-web-toolkit</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <js.src.versionToken>GEO-WEB-TOOLKIT-VERSION</js.src.versionToken>
        <js.src.dir>src/main/js/${project.artifactId}/${js.src.versionToken}</js.src.dir>
        <js.dest.dir>${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${project.version}</js.dest.dir>
    </properties>

	<dependencies>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery-ui</artifactId>
			<version>1.10.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>1.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>openlayers</artifactId>
			<version>2.13.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angularjs</artifactId>
			<version>1.2.8</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angular-ui-bootstrap</artifactId>
			<version>0.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>modernizr</artifactId>
			<version>2.6.2-1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webshim</artifactId>
			<version>1.12.1</version>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angular-ui-utils</artifactId>
			<version>0.1.0</version>
		</dependency>
		<dependency>
			<groupId>au.gov.ga</groupId>
			<artifactId>ga-web-resource-assets</artifactId>
			<version>0.0.4-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>geo-web-toolkit</finalName>
		<plugins>
            <plugin>
                <!--
                    Disable resource formatting.
                    This is causing more problems than it solves in this project
                -->
                <groupId>com.marvinformatics.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>1.2.0</version>
                <executions>
                    <execution>
                        <id>auto-code-format.format</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <!--
                Unpack webjar dependencies for use during unit test execution
            -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includes>**/*.js</includes>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>

            <!--
                Copy resources from source location to output location during build
            -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${js.dest.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${js.src.dir}</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Configure jetty so the project can be run using jetty:run
                Note: Using this version as the eclipse version (9+) requires Java 1.7+ and we want to
                continue supporting Java 1.6 during builds
            -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.9.v20130131</version>
                <configuration>
                    <webAppSourceDirectory>${basedir}/src/main/js</webAppSourceDirectory>
                </configuration>
            </plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>0.0.15</version>

				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v0.10.18</nodeVersion>
							<npmVersion>1.3.8</npmVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- Optional configuration which provides for running any npm command -->
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

                    <!-- Run JS tests using Karma during test phase -->
					<execution>
						<id>javascript tests</id>
						<phase>test</phase>
						<goals>
							<goal>karma</goal>
						</goals>
						<configuration>
							<karmaConfPath>src/test/js/config/karma.ci.conf.js</karmaConfPath>
						</configuration>
					</execution>
				</executions>

			</plugin>

		</plugins>
	</build>

</project>