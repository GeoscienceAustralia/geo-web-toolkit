var angular=angular||{};var jQuery=jQuery||{};var console=console||{};var app=angular.module("gawebtoolkit.config",[]);app.directive("gaMapConfig",["$compile","$http","$q","$interpolate","$timeout","$parse","$log",function(c,h,a,g,b,d,f){return{restrict:"E",scope:true,controller:["$scope","$element","$attrs",function(k,j,i){k.loadConfigData=function(){var l;if(i.configValue!=null){k.configLocal=true}if(i.gaConfigPath!=null&&i.gaConfigPath.indexOf("{{")!==-1){l=k.$eval(g(i.gaConfigPath))}else{l=i.gaConfigPath}if(i.staticConfig==="true"){l=l+".json"}var n=function(p){f.info("config http request success");if(p){f.info("config http request data present")}if(i.preConfig){var q=d(i.preConfig);k.gaConfigTemp=q(k,{config:p})}else{k.gaConfigTemp=p}k.$emit("configDataLoaded",k.gaConfigTemp);k.$broadcast("configDataLoaded",k.gaConfigTemp);if(i.postConfig){var o=d(i.postConfig);o(k,{config:k.gaConfigTemp})}};f.info("config loading...");var m=function(q,o,r,p){f.error("Failed to load config - "+o)};if(l!=null&&l.length>0){h({method:"GET",url:l}).success(n).error(m)}if(k.configLocal){b(function(){n(k.$eval(i.configValue))},1000)}}}],compile:function e(n,l){var m;var j;if(l.templatePath!=null){var k=a.defer();h.get(l.templatePath).success(function(p){j=c(p);k.resolve(j)});m=k.promise}return{post:function i(r,q,p){},pre:function o(r,q,p){m.then(function(s){q.html(s(r));r.loadConfigData()})}}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.core.control-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMapControl",[function(){return{restrict:"E",require:"^gaMap",scope:{mapControlName:"@",mapControlId:"@",controlOptions:"=",containerElementId:"@",preOptionsLoaded:"&",controlEnabled:"@"},link:function(c,b,a,d){if(!c.mapControlName){return}var e=c.preOptionsLoaded({options:c.controlOptions});c.controlOptions=e===undefined?c.controlOptions:e;c.controlDto=d.addControl(c.mapControlName,c.controlOptions,c.containerElementId,c.mapControlId);if(a.controlEnabled!=null){a.$observe("controlEnabled",function(){if(c.controlEnabled==="true"){d.activateControl(c.controlDto.id)}else{d.deactivateControl(c.controlDto.id)}})}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var jQuery=jQuery||{};angular.module("gawebtoolkit.core",["gawebtoolkit.mapservices","gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-directives","gawebtoolkit.vendor-layers","gawebtoolkit.core.layer-services","gawebtoolkit.core.data-services","gawebtoolkit.core.control-directives","gawebtoolkit.core.feature-directives","gawebtoolkit.core.marker-directives","gawebtoolkit.core.map-config","gawebtoolkit.utils"]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.data-services",["gawebtoolkit.mapservices"]);app.service("GADataService",["$log","ga.config","dataServiceLocator",function(c,a,b){return{getLayersByWMSCapabilities:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.getLayersByWMSCapabilities(f)},getWMSFeatures:function(e,d,j,g,f,k,i){var l=i||"olv2";var h=b.getImplementation(l);return h.getWMSFeatures(e,d,j,g,f,k)},getWMSFeaturesByLayerId:function(h,i,g,e,f){var j=f||"olv2";var d=b.getImplementation(j);return d.getLayersByWMSCapabilities(h,i,g,e)}}}]);app.service("dataServiceLocator",["$injector",function(b){var a={olv2:"olv2DataService",olv3:"olv3DataService"};return{getImplementation:function(c){return b.get(a[c])}}}]);var angular=angular||{};var app=angular.module("gawebtoolkit.core.feature-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaFeatureLayer",["$timeout","$compile","$q","GALayerService",function(d,c,b,a){return{restrict:"E",require:"^gaMap",scope:{url:"@",layerName:"@",visibility:"@",projection:"@",controllerEmitEventName:"@",postAddLayer:"&",onLayerDestroy:"&"},controller:["$scope",function(f){f.layerControllerIsReady=false;f.gaFeatures=[];f.featurePromises=[];var e=this;e.hide=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,false);return e};e.show=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,true);return e};e.setOpacity=function(h){f.mapAPI.mapController.setOpacity(f.layerDto.id,h);return e};e.getFeatures=function(){return f.mapAPI.mapController.getLayerFeatures(f.layerDto.id)};e.addFeature=function(j){if(j.then!==null&&typeof j.then==="function"){if(f.layerControllerIsReady){j.then(function(k){f.mapAPI.mapController.addFeatureToLayer(f.layerDto.id,k)})}else{f.featurePromises.push(j)}return j}else{var i=b.defer();if(f.layerControllerIsReady){var h=f.mapAPI.mapController.addFeatureToLayer(f.layerDto.id,j);g(i,h)}else{f.featurePromises.push(i.promise);g(i,j)}return i.promise}};var g=function(h,i){d(function(){h.resolve(i)})};e.createFeatureAsync=function(j,h){var i=b.defer();f.gaFeatures.push({deferred:i,feature:j,isLonLatOrderValid:h});return i.promise};e.createFeature=function(h){return f.mapAPI.mapController.createFeature(h)};e.removeFeature=function(h){f.mapAPI.mapController.removeFeatureFromLayer(f.layerDto.id,h)};e.isLayerControllerReady=function(){return f.layerControllerIsReady};if(f.controllerEmitEventName){f.$emit(f.controllerEmitEventName,e)}return e}],transclude:false,link:function(e,h,f,j){e.mapAPI={};e.mapAPI.mapController=j;var i=a.defaultLayerOptions(f,j.getFrameworkVersion());i.datumProjection=e.projection||j.getProjection();i.postAddLayer=e.postAddLayer;var g=a.createFeatureLayer(i,j.getFrameworkVersion());j.addLayer(g).then(function(k){e.layerDto=k;e.layerControllerIsReady=true;b.all(e.featurePromises).then(function(l){for(var n=0;n<l.length;n++){var m=l[n];j.addFeatureToLayer(e.layerDto.id,m)}})});e.$on("$destroy",function(){if(e.layerDto.id!=null){e.onLayerDestroy({map:j.getMapInstance()})}d(function(){a.cleanupLayer(j.getMapInstance(),e.layerDto.id)})});f.$observe("visibility",function(k){if(e.layerDto!=null){j.setLayerVisibility(e.layerDto.id,k)}})}}}]);app.directive("gaFeature",[function(){return{restrict:"E",require:"^gaFeatureLayer",scope:{visibility:"@",geoJsonFeature:"=",inputFormat:"@",isLonLatOrderValid:"@"},transclude:false,link:function(a,d,c,b){var f=true;var e=function(h,g){if(!h&&g){b.removeFeature(a.featureDto.id)}if(h&&h!==g){if(a.featureDto!=null&&a.featureDto.id.length>0){b.removeFeature(a.featureDto.id)}f=false;var i=b.createFeature(a.geoJsonFeature);b.addFeature(i).then(function(k){a.featureDto=k})}if(h&&f){var j=b.createFeature(a.geoJsonFeature);f=false;b.addFeature(j).then(function(k){a.featureDto=k})}};a.$on("$destroy",function(){if(a.featureDto!=null){b.removeFeature(a.featureDto.id)}if(a.geoJsonFeatureWatch!=null){a.geoJsonFeatureWatch()}});a.geoJsonFeatureWatch=a.$watch("geoJsonFeature",e)}}}]);var angular=angular||{};var $=$||{};var app=angular.module("gawebtoolkit.core.layer-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.layer-services","gawebtoolkit.core.map-services"]);app.directive("gaMapLayer",["$timeout","$compile","GALayerService","$log",function(c,b,a,d){return{restrict:"E",require:"^gaMap",scope:{layerAttribution:"@",layerName:"@",layerUrl:"@",layers:"@",layerType:"@",wrapDateLine:"@",visibility:"@",isBaseLayer:"@",opacity:"@",controllerEmitEventName:"@",refreshLayer:"@",maxZoomLevel:"@",minZoomLevel:"@",onError:"&",format:"@"},transclude:false,controller:["$scope",function(f){var e=this;e.hide=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,false);return e};e.show=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,true);return e};e.setOpacity=function(g){f.mapAPI.mapController.setOpacity(f.layerDto.id,g);return e};if(f.controllerEmitEventName){f.$emit(f.controllerEmitEventName,e)}return e}],link:function(n,i,m,e){n.framework=e.getFrameworkVersion();m.$observe("refreshLayer",function(p,o){if(p!==o){d.info("refresh for - "+n.layerName);n.initialiseLayer()}});n.mapAPI={};n.mapAPI.mapController=e;var k,j;var l=function(){n.layerReady=true};function g(){if(m.layers==null){m.layers="0"}if(m.wrapDateLine==null){m.wrapDateLine=true}if(m.visibility==null){m.visibility=true}if(m.layerType==null||m.layerType.length===0){if(m.layerUrl.indexOf("WMSServer")>0){m.layerType="WMS"}}}var h=function(){g();n.constructionInProgress=true;k=a.defaultLayerOptions(m,n.framework);k.initialExtent=e.getInitialExtent();k.mapElementId=e.getMapElementId();k.format=n.format;d.info(k.layerName+" - constructing...");if(k.layerType.length===0){return}j=a.createLayer(k,n.framework);e.addLayer(j).then(function(o){n.layerDto=o;l();d.info("construction complete...");n.constructionInProgress=false},function(o){n.$emit(k.layerName+"_error",k);n.onError({message:o,layer:k});l();d.info("construction failed...");n.constructionInProgress=false})};m.$observe("visibility",function(){if(n.layerReady&&e&&n.layerDto!=null&&n.layerDto.id){e.setLayerVisibility(n.layerDto.id,n.visibility==="true")}});m.$observe("opacity",function(){if(n.layerReady&&e&&n.layerDto!=null&&n.layerDto.id){e.setOpacity(n.layerDto.id,n.opacity)}});n.initCount=0;function f(){d.info("reconstructing layer...");var o=e.getLayers();var q=null;for(var p=0;p<o.length;p++){if(o[p].id===n.layerDto.id){q=p;break}}if(q!=null){e.removeLayerById(n.layerDto.id);n.layerDto=null;g();k=a.defaultLayerOptions(m,n.framework);k.initialExtent=e.getInitialExtent();k.format=n.format;j=a.createLayer(k,n.framework);e.addLayer(j).then(function(r){n.layerDto=r;l();if(n.layerDto!=null){var s=q-e.getLayers().length+1;e.raiseLayerDrawOrder(n.layerDto.id,s)}})}}n.initialiseLayer=function(){d.info("initialising layer...");if(n.layerDto!=null){f()}else{if(n.layerReady&&n.constructionInProgress){d.info("...")}else{h()}}};n.$on("$destroy",function(){if(n.layerDto){e.removeLayerById(n.layerDto.id)}$(window).off("resize.Viewport")});if(m.refreshLayer==null&&n.layerType!=null&&n.layerType.length>0){n.initialiseLayer()}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.layer-services",["gawebtoolkit.mapservices"]);app.service("GALayerService",["ga.config","mapLayerServiceLocator",function(b,a){return{createLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createLayer(e)},createFeatureLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createFeatureLayer(e)},createGoogleLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createGoogleLayer(e)},createBingLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createBingLayer(e)},createOsmLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createOsmLayer(e)},createMarkerLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createMarkerLayer(e)},removeLayerByName:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayerByName(e,f)},removeLayersByName:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayersByName(e,f)},removeLayer:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayer(e,f)},removeLayerById:function(f,e,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayerById(f,e)},getMarkerCountForLayerName:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);return c.getMarkerCountForLayerName(e,f)},registerFeatureSelected:function(f,e,i,g,d){var h=d||"olv2";var c=a.getImplementation(h);return c.registerFeatureSelected(f,e,i,g)},defaultLayerOptions:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.defaultLayerOptions(e,new b())},createFeature:function(f,d,e){var g=e||"olv2";var c=a.getImplementation(g);return c.createFeature(f,d)},cleanupLayer:function(f,e,d){var g=d||"olv2";var c=a.getImplementation(g);return c.cleanupLayer(f,e)},registerLayerEvent:function(g,e,f,i,d){var h=d||"olv2";var c=a.getImplementation(h);c.registerLayerEvent(g,e,f,i)},unRegisterMapEvent:function(g,e,f,i,d){var h=d||"olv2";var c=a.getImplementation(h);c.unRegisterMapEvent(g,e,f,i)},addFeatureToLayer:function(f,e,g,d){var h=d||"olv2";var c=a.getImplementation(h);return c.addFeatureToLayer(f,e,g)},parselatLong:function(c){if(!c){return null}var e,d;e=c.split(",");d={lat:"",lon:""};d.lat=e[0];d.lon=e[1];return d},filterFeatureLayer:function(g,e,i,f,d){var h=d||"olv2";var c=a.getImplementation(h);c.filterFeatureLayer(g,e,i,f)},getLayerFeatures:function(f,e,d){var g=d||"olv2";var c=a.getImplementation(g);return c.getLayerFeatures(f,e)},removeFeatureFromLayer:function(f,e,g,d){var h=d||"olv2";var c=a.getImplementation(h);return c.removeFeatureFromLayer(f,e,g)},raiseLayerDrawOrder:function(f,e,h,d){var g=d||"olv2";var c=a.getImplementation(g);return c.raiseLayerDrawOrder(f,e,h)}}}]);app.service("mapLayerServiceLocator",["$injector",function(b){var a={olv2:"olv2LayerService",olv3:"olv3LayerService"};return{getImplementation:function(c){return b.get(a[c])}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var app=angular.module("gawebtoolkit.core.map-config",[]);app.value("ga.config",function(){var a={standardTileSize:256,largeTileSize:1024,veryLargeTileSize:2048,minMapWidth:900,minMapHeight:600,panIncrement:30,smallPanIncrement:5,transitionEffect:"resize",visibility:true,isBaseLayer:false,wrapDateLine:true,sphericalMercator:true,bingLayerType:"Road",opacity:1,layerAttribution:"",displayInLayerSwitcher:true,projection:"EPSG:102100",displayProjection:"EPSG:4326",numZoomLevels:15,transparent:true,format:"image/png",tileSize:function(c){var b;if(c){if(c==="large"){b=new OpenLayers.Size(a.largeTileSize,a.largeTileSize)}else{if(c==="vlarge"){b=new OpenLayers.Size(a.veryLargeTileSize,a.veryLargeTileSize)}}}else{b=new OpenLayers.Size(a.standardTileSize,a.standardTileSize)}return b},layerType:"WMS"};return{defaultOptions:a,olv2Options:a,cesiumOptions:{includeCustomTerrainProvider:false,customTerrainProviderUrl:null},olv3Options:{renderer:"canvas"}}});var angular=angular||{};var $=$||{};var app=angular.module("gawebtoolkit.core.map-directives",["gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMap",["$timeout","$compile","GAMapService","GALayerService","GADataService","$q","$log",function(d,c,g,a,f,b,e){return{restrict:"E",scope:{mapElementId:"@",datumProjection:"@",displayProjection:"@",centerPosition:"@",zoomLevel:"@",isStaticMap:"@",initialExtent:"=",framework:"@",existingMapInstance:"="},controller:["$scope",function(i){e.info("map creation started...");$("#"+i.mapElementId).empty();i.initialPositionSet=false;i.layerPromises=[];i.layerDtoPromises=[];var h=this;h.addLayer=function(l){var n=b.defer();var k=b.defer();if(l.then!==null&&typeof l.then==="function"){n=l;if(i.layersReady){l.then(function(o){if(o==null){e.info("failed to load layer")}else{var p=g.addLayer(i.mapInstance,o,i.framework);k.resolve(p);i.$emit("layerAdded",p)}})}else{i.layerPromises.push(n);i.layerDtoPromises.push(k)}}else{if(i.layersReady){var m=g.addLayer(i.mapInstance,l,i.framework);k.resolve(m);i.$emit("layerAdded",m)}else{i.layerPromises.push(n.promise);i.layerDtoPromises.push(k);n.resolve(l)}}return k.promise};var j=[];i.deferredMarkers=[];h.addMarkerLayer=function(n,q){if(!q){return h.addLayer(n)}else{j.push(q);var p=false;var l;for(var m=0;m<j.length;m++){l=j[m];if(l===q){p=true;break}}if(!p){return h.addLayer(n)}else{if(!i.layersReady){var o=b.defer();i.deferredMarkers.push(o);return o.promise}else{var k=b.defer();k.resolve();return k.promise}}}};h.getMapOptions=function(){return{mapElementId:i.mapElementId,datumProjection:i.datumProjection,displayProjection:i.displayProjection,centerPosition:i.centerPosition,zoomLevel:i.zoomLevel,initialExtent:i.initialExtent}};h.createLayer=function(k){var l=a.defaultLayerOptions(k,i.framework);return a.createLayer(l,i.framework)};h.zoomToMaxExtent=function(){g.zoomToMaxExtent(i.mapInstance,i.framework)};h.currentZoomLevel=function(){return g.currentZoomLevel(i.mapInstance,i.framework)};h.registerMapMouseMove=function(k){g.registerMapMouseMove(i.mapInstance,k,i.framework)};h.registerMapMouseMoveEnd=function(k){g.registerMapMouseMoveEnd(i.mapInstance,k,i.framework)};h.registerMapClick=function(k){g.registerMapClick(i.mapInstance,k,i.framework)};h.unRegisterMapClick=function(k){g.unRegisterMapClick(i.mapInstance,k,i.framework)};h.addControl=function(m,n,k,l){return g.addControl(i.mapInstance,m,n,k,l,h.getMapOptions(),i.framework)};h.getLonLatFromPixel=function(l,m,k){return g.getLonLatFromPixel(i.mapInstance,l,m,k,i.framework)};h.getPixelFromLonLat=function(l,k){return g.getPixelFromLonLat(i.mapInstance,l,k,i.framework)};h.getPointFromEvent=function(k){return g.getPointFromEvent(k,i.framework)};h.getLayers=function(){return g.getLayers(i.mapInstance,i.framework)};h.getLayersByName=function(k){return g.getLayersByName(i.mapInstance,k,i.framework)};h.zoomToLayer=function(k){g.zoomToLayer(i.mapInstance,k,i.framework)};h.getProjection=function(){return g.getProjection(i.mapInstance,h.getFrameworkVersion())};h.getDisplayProjection=function(){return g.getDisplayProjection(i.mapInstance,h.getFrameworkVersion())};h.setLayerVisibility=function(l,k){g.setLayerVisibility(i.mapInstance,l,k,i.framework)};h.createBoundingBox=function(k){return g.createBoundingBox(i.mapInstance,k,i.framework)};h.createBounds=function(l,k){return g.createBounds(i.mapInstance,l,k,i.framework)};h.zoomToExtent=function(k){g.zoomToExtent(i.mapInstance,k,i.framework)};h.zoomTo=function(k){g.zoomTo(i.mapInstance,k,i.framework)};h.setBaseLayer=function(k){g.setBaseLayer(i.mapInstance,k,i.framework)};h.setCenter=function(l,m,k){g.setCenter(i.mapInstance,l,m,k,i.framework)};h.getInitialExtent=function(){return i.initialExtent};h.setInitialPositionAndZoom=function(){var k={mapElementId:i.mapElementId,datumProjection:i.datumProjection,displayProjection:i.displayProjection,centerPosition:i.centerPosition,zoomLevel:i.zoomLevel,initialExtent:i.initialExtent};if(!i.centerPosition){i.centerPosition={lon:0,lat:0}}if(!i.initialPositionSet){g.setInitialPositionAndZoom(i.mapInstance,k,i.framework)}i.initialPositionSet=true};h.isBaseLayer=function(k){return g.isBaseLayer(i.mapInstance,k,i.framework)};h.getMapInstance=function(){return i.mapInstance};h.setOpacity=function(k,l){g.setOpacity(i.mapInstance,k,l,i.framework)};h.getMapElementId=function(){return g.getMapElementId(i.mapInstance,i.framework)};h.setMapMarker=function(k,n,m,l){return g.setMapMarker(i.mapInstance,k,n,m,l,i.framework)};h.removeMapMarker=function(k){g.removeMapMarker(i.mapInstance,k,i.framework)};h.removeLayerByName=function(k){a.removeLayerByName(i.mapInstance,k,i.framework)};h.removeLayersByName=function(k){a.removeLayersByName(i.mapInstance,k,i.framework)};h.removeLayer=function(k){a.removeLayer(i.mapInstance,k,i.framework)};h.removeLayerById=function(k){a.removeLayerById(i.mapInstance,k,i.framework)};h.getMarkerCountForLayerName=function(k){return a.getMarkerCountForLayerName(i.mapInstance,k,i.framework)};h.drawPolyLine=function(l,k){g.drawPolyLine(i.mapInstance,l,k,i.framework)};h.startRemoveSelectedFeature=function(k){return g.startRemoveSelectedFeature(i.mapInstance,k,i.framework)};h.stopRemoveSelectedFeature=function(){return g.stopRemoveSelectedFeature(i.mapInstance,i.framework)};h.removeFeature=function(k,l){return g.removeFeature(i.mapInstance,k,l,i.framework)};h.startDrawingOnLayer=function(l,k){return g.startDrawingOnLayer(i.mapInstance,l,k,i.framework)};h.stopDrawing=function(){return g.stopDrawing(i.mapInstance,i.framework)};h.drawLabel=function(l,k){return g.drawLabel(i.mapInstance,l,k,i.framework)};h.drawLabelWithPoint=function(l,k){return g.drawLabelWithPoint(i.mapInstance,l,k,i.framework)};h.isControlActive=function(k,l){return g.isControlActive(i.mapInstance,k,l,i.framework)};h.getLayersByWMSCapabilities=function(k){return f.getLayersByWMSCapabilities(k,i.framework)};h.getWMSFeatures=function(k,m,o,l,n){return f.getWMSFeatures(i.mapInstance,k,m,o,l,n,i.framework)};h.getWMSFeaturesByLayerId=function(l,k,m){return f.getWMSFeaturesByLayerId(i.mapInstance,l,k,m,i.framework)};h.registerFeatureSelected=function(k,m,l){return a.registerFeatureSelected(i.mapInstance,k,m,l,i.framework)};h.getFeatureInfo=function(q,m,o,n,p,k,l){return g.getFeatureInfo(i.mapInstance,q,m,o,n,p,k,l,i.framework)};h.getFeatureInfoFromLayer=function(n,l,k,m){return g.getFeatureInfoFromLayer(i.mapInstance,n,l,k,m,i.framework)};h.resetMapFired=function(){i.$emit("resetMapFired")};h.activateControl=function(k){g.activateControl(i.mapInstance,k,i.framework)};h.deactivateControl=function(k){g.deactivateControl(i.mapInstance,k,i.framework)};h.registerControlEvent=function(l,k,m){g.registerControlEvent(i.mapInstance,l,k,m,i.framework)};h.unRegisterControlEvent=function(l,k,m){g.unRegisterControlEvent(i.mapInstance,l,k,m,i.framework)};h.registerMapEvent=function(k,l){g.registerMapEvent(i.mapInstance,k,l,i.framework)};h.registerLayerEvent=function(k,l,m){a.registerLayerEvent(i.mapInstance,k,l,m,i.framework)};h.unRegisterLayerEvent=function(k,l,m){a.unRegisterLayerEvent(i.mapInstance,k,l,m,i.framework)};h.unRegisterMapEvent=function(k,l){g.unRegisterMapEvent(i.mapInstance,k,l,i.framework)};h.getCurrentMapExtent=function(){return g.getCurrentMapExtent(i.mapInstance,i.framework)};h.switch3d=function(){if(!g.is3dSupported(i.mapInstance,i.framework)){return}if(!g.is3d(i.mapInstance,i.framework)){g.switchTo3dView(i.mapInstance,i.framework)}else{g.switchTo2dView(i.mapInstance,i.framework)}};h.is3d=function(){if(!g.is3dSupported(i.mapInstance,i.framework)){return false}return g.is3d(i.mapInstance,i.framework)};h.filterFeatureLayer=function(k,m,l){a.filterFeatureLayer(i.mapInstance,k,m,l,i.framework)};h.getLayerFeatures=function(k){return a.getLayerFeatures(i.mapInstance,k,i.framework)};h.createFeature=function(k){return a.createFeature(i.mapInstance,k,i.framework)};h.addFeatureToLayer=function(k,l){return a.addFeatureToLayer(i.mapInstance,k,l,i.framework)};h.createWfsClient=function(m,p,o,l,q,n,k){return g.createWfsClient(m,p,o,l,q,n,k,i.framework)};h.addWfsClient=function(k){return g.addWfsClient(k,i.framework)};h.searchWfs=function(k,m,l){return g.searchWfs(i.mapInstance,k,m,l,i.framework)};h.getMeasureFromEvent=function(k){return g.getMeasureFromEvent(i.mapInstance,k,i.framework)};h.removeFeatureFromLayer=function(k,l){a.removeFeatureFromLayer(i.mapInstance,k,l,i.framework)};h.raiseLayerDrawOrder=function(k,l){a.raiseLayerDrawOrder(i.mapInstance,k,l,i.framework)};h.getFrameworkVersion=function(){if(OpenLayers!=null&&i.mapInstance instanceof OpenLayers.Map){return"olv2"}if(ol!=null&&i.mapInstance instanceof ol.Map){return"olv3"}};i.gaMap=h;$(window).bind("resize",function(){g.mapResized(i.mapInstance,i.framework)});if(i.existingMapInstance){i.mapInstance=i.existingMapInstance}else{i.mapInstance=g.initialiseMap({mapElementId:i.mapElementId,datumProjection:i.datumProjection,displayProjection:i.displayProjection,initialExtent:i.initialExtent,centerPosition:i.centerPosition,zoomLevel:i.zoomLevel,isStaticMap:i.isStaticMap},i.framework)}i.$emit("mapInstanceReady",i.mapInstance);i.$emit("mapControllerReady",h);i.$broadcast("mapControllerReady",h);i.$on("$destroy",function(){e.info("map destruction started...");$(window).off("resize.Viewport");d(function(){e.info("map destruction finishing...");e.info("removing "+i.gaMap.getLayers().length+" layers...");var m=i.gaMap.getLayers();for(var l=0;l<m.length;l++){var k=m[l];i.gaMap.removeLayerById(k.id)}})})}],link:function(k,j,i){d(function(){b.allSettled(k.layerPromises).then(function(l){h(l)},function(l){h(l)})});function h(q){e.info("resolving all layers");var l=[];for(var n=0;n<q.length;n++){var m=q[n];if(typeof m==="string"){k.layerDtoPromises[n].reject(m)}else{var p=g.addLayer(k.mapInstance,m,k.framework);k.layerDtoPromises[n].resolve(p);l.push(p)}}for(var o=0;o<k.deferredMarkers.length;o++){k.deferredMarkers[o].resolve()}k.$emit("layersReady",l);k.$broadcast("layersReady",l);k.layersReady=true;if(!k.existingMapInstance){k.gaMap.setInitialPositionAndZoom()}}},transclude:false}}]);app.config(["$provide",function(a){a.decorator("$q",["$delegate",function(c){var b=c;b.allSettled=b.allSettled||function(h){var f=b.defer();if(angular.isArray(h)){var e=[];var g=[];var d=false;angular.forEach(h,function(k,j){e[j]=false});var i=function(l,m,k,j){var n=true;angular.forEach(l,function(o){if(!o){n=false}});if(n){if(j){k.reject(m)}else{k.resolve(m)}}};angular.forEach(h,function(k,j){b.when(k).then(function(l){e[j]=true;g[j]=l;i(e,g,f,d)},function(l){e[j]=true;g[j]=l;d=true;i(e,g,f,d)})})}else{throw"allSettled can only handle an array of promises (for now)"}return f.promise};return b}])}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.map-services",["gawebtoolkit.mapservices"]);app.service("GAMapService",["$log","ga.config","mapServiceLocator",function(c,a,b){return{initialiseMap:function(g,f){var i=f||"olv2";var d=b.getImplementation(i);try{return d.initialiseMap(g,new a())}catch(h){c.error("Failed to initialise map");throw h}},zoomToMaxExtent:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);d.zoomToMaxExtent(f)},zoomTo:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.zoomTo(f,g)},getMapElementId:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.getMapElementId(f)},getProjection:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.getProjection(f)},getDisplayProjection:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.getDisplayProjection(f)},currentZoomLevel:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.currentZoomLevel(f)},addLayer:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.addLayer(f,g)},registerMapMouseMove:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.registerMapMouseMove(f,h)},registerMapMouseMoveEnd:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.registerMapMouseMoveEnd(f,h)},registerMapClick:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.registerMapClick(f,h)},unRegisterMapClick:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.unRegisterMapClick(f,h)},registerMapEvent:function(g,f,i,e){var h=e||"olv2",d=b.getImplementation(h);d.registerMapEvent(g,f,i,e)},unRegisterMapEvent:function(g,f,i,e){var h=e||"olv2",d=b.getImplementation(h);d.unRegisterMapEvent(g,f,i,e)},getCurrentMapExtent:function(f,e){var g=e||"olv2",d=b.getImplementation(g);return d.getCurrentMapExtent(f)},addControl:function(d,g,j,f,l,e,i){var k=i||"olv2";var h=b.getImplementation(k);return h.addControl(d,g,j,f,l,e)},isControlActive:function(f,g,h,e){var i=e||"olv2";var d=b.getImplementation(i);return d.isControlActive(f,g,h)},activateControl:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.activateControl(f,g)},deactivateControl:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.deactivateControl(f,g)},registerControlEvent:function(g,h,f,j,e){var i=e||"olv2";var d=b.getImplementation(i);d.registerControlEvent(g,h,f,j)},unRegisterControlEvent:function(g,h,f,j,e){var i=e||"olv2";var d=b.getImplementation(i);d.unRegisterControlEvent(g,h,f,j)},getLayers:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.getLayers(f)},getLayersByName:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.getLayersByName(f,g)},zoomToLayer:function(g,f,e){var h=e||"olv2";var d=b.getImplementation(h);d.zoomToLayer(g,f)},setLayerVisibility:function(h,g,f,e){var i=e||"olv2";var d=b.getImplementation(i);d.setLayerVisibility(h,g,f)},createBoundingBox:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.createBoundingBox(f,g)},createBounds:function(g,h,e,f){var i=f||"olv2";var d=b.getImplementation(i);return d.createBounds(g,h,e)},zoomToExtent:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.zoomToExtent(f,g)},setCenter:function(g,h,i,e,f){var j=f||"olv2";var d=b.getImplementation(j);d.setCenter(g,h,i,e)},setInitialPositionAndZoom:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.setInitialPositionAndZoom(f,g,new a())},setBaseLayer:function(g,f,e){var h=e||"olv2";var d=b.getImplementation(h);d.setBaseLayer(g,f)},isBaseLayer:function(g,f,e){var h=e||"olv2";var d=b.getImplementation(h);return d.isBaseLayer(g,f)},setOpacity:function(g,f,h,e){var i=e||"olv2";var d=b.getImplementation(i);d.setOpacity(g,f,h)},mapResized:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);d.mapResized(f)},setMapMarker:function(f,i,j,h,g,e){var k=e||"olv2";var d=b.getImplementation(k);return d.setMapMarker(f,i,j,h,g)},removeMapMarker:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.removeMapMarker(f,g)},getLonLatFromPixel:function(h,f,j,e,g){var i=g||"olv2";var d=b.getImplementation(i);return d.getLonLatFromPixel(h,f,j,e)},getPixelFromLonLat:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.getPixelFromLonLat(f,h,g)},getPointFromEvent:function(g,f){var h=f||"olv2";var d=b.getImplementation(h);return d.getPointFromEvent(g)},drawPolyLine:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.drawPolyLine(f,h,g)},startRemoveSelectedFeature:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.startRemoveSelectedFeature(f,g)},stopRemoveSelectedFeature:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.stopRemoveSelectedFeature(f)},removeFeature:function(f,g,h,e){var i=e||"olv2";var d=b.getImplementation(i);return d.removeFeature(f,g,h)},drawFeature:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.drawFeature(f,g)},startDrawingOnLayer:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.startDrawingOnLayer(f,h,g)},stopDrawing:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.stopDrawing(f)},drawLabel:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.drawLabel(f,h,g)},drawLabelWithPoint:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.drawLabelWithPoint(f,h,g)},createWfsClient:function(d,k,h,i,e,g,f,l){var m=l||"olv2";var j=b.getImplementation(m);return j.createWfsClient(d,k,h,i,e,g,f)},getFeatureInfo:function(e,n,d,i,g,f,l,k,j){var m=j||"olv2";var h=b.getImplementation(m);return h.getFeatureInfo(e,n,d,i,g,f,l,k)},getFeatureInfoFromLayer:function(i,k,g,e,h,f){var j=f||"olv2";var d=b.getImplementation(j);return d.getFeatureInfoFromLayer(i,k,g,e,h)},getMeasureFromEvent:function(g,h,f){var i=f||"olv2";var d=b.getImplementation(i);return d.getMeasureFromEvent(g,h)},addWfsClient:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.addWfsClient(f)},is3dSupported:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.is3dSupported(f)},is3d:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.is3d(f)},switchTo3dView:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.switchTo3dView(f)},switchTo2dView:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.switchTo2dView(f)},searchWfs:function(g,e,i,h,f){var j=f||"olv2";var d=b.getImplementation(j);return d.searchWfs(g,e,i,h)}}}]);app.service("mapServiceLocator",["$injector",function(b){var a={olv2:"olv2MapService",olv3:"olv3MapService"};return{getImplementation:function(c){return b.get(a[c])}}}]);(function(){var a=angular.module("gawebtoolkit.core.marker-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);a.directive("gaMapMarker",["$log","$timeout","GALayerService",function(d,c,b){return{restrict:"E",require:"^gaMap",scope:{markerIcon:"@",markerLong:"@",markerLat:"@",markerId:"@",markerWidth:"@",markerHeight:"@",mapMarkerClicked:"&",layerName:"@"},link:function(f,h,g,i){f.framework=i.getFrameworkVersion();g.$observe("markerIcon",function(j){});g.$observe("markerLong",function(j){});g.$observe("markerLat",function(j){});g.$observe("markerId",function(j){});g.$observe("markerWidth",function(j){});g.$observe("markerHeight",function(j){});function e(){var n,o,l,j,m;m=f.markerIcon;if(typeof f.markerLong==="string"){o=parseFloat(f.markerLong)}if(typeof f.markerLat==="string"){n=parseFloat(f.markerLat)}if(typeof f.markerWidth==="string"){l=parseInt(f.markerWidth)}if(typeof f.markerHeight==="string"){j=parseInt(f.markerHeight)}var k=b.createLayer({layerType:"markerlayer",layerName:f.layerName},f.framework);i.addMarkerLayer(k,f.layerName).then(function(){var p=i.getPixelFromLonLat(o,n);f.markerDto=i.setMapMarker(p,f.layerName,m,{width:l,height:j})})}e();f.$on("$destroy",function(){i.removeMapMarker(f.markerDto.id)})}}}])})();var angular=angular||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.utils",[]);app.service("GAWTUtils",[function(){return{generateUuid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(d){var b=Math.random()*16|0,a=d=="x"?b:(b&3|8);return a.toString(16)})},convertHexToRgb:function(d){function b(f){return parseInt((c(f)).substring(0,2),16)}function a(f){return parseInt((c(f)).substring(2,4),16)}function e(f){return parseInt((c(f)).substring(4,6),16)}function c(f){return(f.charAt(0)==="#")?f.substring(1,7):f}return[b(d),a(d),e(d)]},convertHexAndOpacityToRgbArray:function(e,c){function b(g){return parseInt((d(g)).substring(0,2),16)}function a(g){return parseInt((d(g)).substring(2,4),16)}function f(g){return parseInt((d(g)).substring(4,6),16)}function d(g){return(g.charAt(0)==="#")?g.substring(1,7):g}return[b(e),a(e),f(e),c]}}}]);var angular=angular||{},jQuery=jQuery||{},console=console||{},app=angular.module("gawebtoolkit.config",[]);app.directive("gaMapConfig",["$compile","$http","$q","$interpolate","$timeout","$parse","$log",function(i,h,n,m,l,k,j){return{restrict:"E",scope:!0,controller:["$scope","$element","$attrs",function(b,e,d){b.loadConfigData=function(){var g;null!=d.configValue&&(b.configLocal=!0),g=null!=d.gaConfigPath&&-1!==d.gaConfigPath.indexOf("{{")?b.$eval(m(d.gaConfigPath)):d.gaConfigPath,"true"===d.staticConfig&&(g+=".json");var f=function(o){if(j.info("config http request success"),o&&j.info("config http request data present"),d.preConfig){var q=k(d.preConfig);b.gaConfigTemp=q(b,{config:o})}else{b.gaConfigTemp=o}if(b.$emit("configDataLoaded",b.gaConfigTemp),b.$broadcast("configDataLoaded",b.gaConfigTemp),d.postConfig){var p=k(d.postConfig);p(b,{config:b.gaConfigTemp})}};j.info("config loading...");var a=function(o,c){j.error("Failed to load config - "+c)};null!=g&&g.length>0&&h({method:"GET",url:g}).success(f).error(a),b.configLocal&&l(function(){f(b.$eval(d.configValue))},1000)}}],compile:function(p,o){var c,b;if(null!=o.templatePath){var a=n.defer();h.get(o.templatePath).success(function(d){b=i(d),a.resolve(b)}),c=a.promise}return{post:function(){},pre:function(e,d){c.then(function(f){d.html(f(e)),e.loadConfigData()})}}}}}]);var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.core.control-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMapControl",[function(){return{restrict:"E",require:"^gaMap",scope:{mapControlName:"@",mapControlId:"@",controlOptions:"=",containerElementId:"@",preOptionsLoaded:"&",controlEnabled:"@"},link:function(g,f,j,i){if(g.mapControlName){var h=g.preOptionsLoaded({options:g.controlOptions});g.controlOptions=void 0===h?g.controlOptions:h,g.controlDto=i.addControl(g.mapControlName,g.controlOptions,g.containerElementId,g.mapControlId),null!=j.controlEnabled&&j.$observe("controlEnabled",function(){"true"===g.controlEnabled?i.activateControl(g.controlDto.id):i.deactivateControl(g.controlDto.id)})}}}}]);var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},jQuery=jQuery||{};angular.module("gawebtoolkit.core",["gawebtoolkit.mapservices","gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-directives","gawebtoolkit.vendor-layers","gawebtoolkit.core.layer-services","gawebtoolkit.core.data-services","gawebtoolkit.core.control-directives","gawebtoolkit.core.feature-directives","gawebtoolkit.core.marker-directives","gawebtoolkit.core.map-config","gawebtoolkit.utils"]);var angular=angular||{},OpenLayers=OpenLayers||{},ol=ol||{},app=angular.module("gawebtoolkit.core.data-services",["gawebtoolkit.mapservices"]);app.service("GADataService",["$log","ga.config","dataServiceLocator",function(e,d,f){return{getLayersByWMSCapabilities:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.getLayersByWMSCapabilities(g)},getWMSFeatures:function(r,q,p,o,n,m,l){var k=l||"olv2",c=f.getImplementation(k);return c.getWMSFeatures(r,q,p,o,n,m)},getWMSFeaturesByLayerId:function(i,c,n,m,l){var k=l||"olv2",j=f.getImplementation(k);return j.getLayersByWMSCapabilities(i,c,n,m)}}}]),app.service("dataServiceLocator",["$injector",function(d){var c={olv2:"olv2DataService",olv3:"olv3DataService"};return{getImplementation:function(a){return d.get(c[a])}}}]);var angular=angular||{},app=angular.module("gawebtoolkit.core.feature-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaFeatureLayer",["$timeout","$compile","$q","GALayerService",function(f,e,h,g){return{restrict:"E",require:"^gaMap",scope:{url:"@",layerName:"@",visibility:"@",projection:"@",controllerEmitEventName:"@",postAddLayer:"&",onLayerDestroy:"&"},controller:["$scope",function(a){a.layerControllerIsReady=!1,a.gaFeatures=[],a.featurePromises=[];var i=this;i.hide=function(){return a.mapAPI.mapController.setLayerVisibility(a.layerDto.id,!1),i},i.show=function(){return a.mapAPI.mapController.setLayerVisibility(a.layerDto.id,!0),i},i.setOpacity=function(b){return a.mapAPI.mapController.setOpacity(a.layerDto.id,b),i},i.getFeatures=function(){return a.mapAPI.mapController.getLayerFeatures(a.layerDto.id)},i.addFeature=function(b){if(null!==b.then&&"function"==typeof b.then){return a.layerControllerIsReady?b.then(function(d){a.mapAPI.mapController.addFeatureToLayer(a.layerDto.id,d)}):a.featurePromises.push(b),b}var k=h.defer();if(a.layerControllerIsReady){var j=a.mapAPI.mapController.addFeatureToLayer(a.layerDto.id,b);c(k,j)}else{a.featurePromises.push(k.promise),c(k,b)}return k.promise};var c=function(d,j){f(function(){d.resolve(j)})};return i.createFeatureAsync=function(b,k){var j=h.defer();return a.gaFeatures.push({deferred:j,feature:b,isLonLatOrderValid:k}),j.promise},i.createFeature=function(b){return a.mapAPI.mapController.createFeature(b)},i.removeFeature=function(b){a.mapAPI.mapController.removeFeatureFromLayer(a.layerDto.id,b)},i.isLayerControllerReady=function(){return a.layerControllerIsReady},a.controllerEmitEventName&&a.$emit(a.controllerEmitEventName,i),i}],transclude:!1,link:function(a,l,k,j){a.mapAPI={},a.mapAPI.mapController=j;var d=g.defaultLayerOptions(k,j.getFrameworkVersion());d.datumProjection=a.projection||j.getProjection(),d.postAddLayer=a.postAddLayer;var c=g.createFeatureLayer(d,j.getFrameworkVersion());j.addLayer(c).then(function(b){a.layerDto=b,a.layerControllerIsReady=!0,h.all(a.featurePromises).then(function(i){for(var n=0;n<i.length;n++){var m=i[n];j.addFeatureToLayer(a.layerDto.id,m)}})}),a.$on("$destroy",function(){null!=a.layerDto.id&&a.onLayerDestroy({map:j.getMapInstance()}),f(function(){g.cleanupLayer(j.getMapInstance(),a.layerDto.id)})}),k.$observe("visibility",function(b){null!=a.layerDto&&j.setLayerVisibility(a.layerDto.id,b)})}}}]),app.directive("gaFeature",[function(){return{restrict:"E",require:"^gaFeatureLayer",scope:{visibility:"@",geoJsonFeature:"=",inputFormat:"@",isLonLatOrderValid:"@"},transclude:!1,link:function(h,g,l,k){var j=!0,i=function(a,m){if(!a&&m&&k.removeFeature(h.featureDto.id),a&&a!==m){null!=h.featureDto&&h.featureDto.id.length>0&&k.removeFeature(h.featureDto.id),j=!1;var e=k.createFeature(h.geoJsonFeature);k.addFeature(e).then(function(c){h.featureDto=c})}if(a&&j){var d=k.createFeature(h.geoJsonFeature);j=!1,k.addFeature(d).then(function(c){h.featureDto=c})}};h.$on("$destroy",function(){null!=h.featureDto&&k.removeFeature(h.featureDto.id),null!=h.geoJsonFeatureWatch&&h.geoJsonFeatureWatch()}),h.geoJsonFeatureWatch=h.$watch("geoJsonFeature",i)}}}]);var angular=angular||{},$=$||{},app=angular.module("gawebtoolkit.core.layer-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.layer-services","gawebtoolkit.core.map-services"]);app.directive("gaMapLayer",["$timeout","$compile","GALayerService","$log",function(f,e,h,g){return{restrict:"E",require:"^gaMap",scope:{layerAttribution:"@",layerName:"@",layerUrl:"@",layers:"@",layerType:"@",wrapDateLine:"@",visibility:"@",isBaseLayer:"@",opacity:"@",controllerEmitEventName:"@",refreshLayer:"@",maxZoomLevel:"@",minZoomLevel:"@",onError:"&",format:"@"},transclude:!1,controller:["$scope",function(d){var c=this;return c.hide=function(){return d.mapAPI.mapController.setLayerVisibility(d.layerDto.id,!1),c},c.show=function(){return d.mapAPI.mapController.setLayerVisibility(d.layerDto.id,!0),c},c.setOpacity=function(a){return d.mapAPI.mapController.setOpacity(d.layerDto.id,a),c},d.controllerEmitEventName&&d.$emit(d.controllerEmitEventName,c),c}],link:function(t,s,r,q){function p(){null==r.layers&&(r.layers="0"),null==r.wrapDateLine&&(r.wrapDateLine=!0),null==r.visibility&&(r.visibility=!0),(null==r.layerType||0===r.layerType.length)&&r.layerUrl.indexOf("WMSServer")>0&&(r.layerType="WMS")}function o(){g.info("reconstructing layer...");for(var a=q.getLayers(),j=null,i=0;i<a.length;i++){if(a[i].id===t.layerDto.id){j=i;break}}null!=j&&(q.removeLayerById(t.layerDto.id),t.layerDto=null,p(),n=h.defaultLayerOptions(r,t.framework),n.initialExtent=q.getInitialExtent(),n.format=t.format,m=h.createLayer(n,t.framework),q.addLayer(m).then(function(k){if(t.layerDto=k,d(),null!=t.layerDto){var l=j-q.getLayers().length+1;q.raiseLayerDrawOrder(t.layerDto.id,l)}}))}t.framework=q.getFrameworkVersion(),r.$observe("refreshLayer",function(a,i){a!==i&&(g.info("refresh for - "+t.layerName),t.initialiseLayer())}),t.mapAPI={},t.mapAPI.mapController=q;var n,m,d=function(){t.layerReady=!0},c=function(){p(),t.constructionInProgress=!0,n=h.defaultLayerOptions(r,t.framework),n.initialExtent=q.getInitialExtent(),n.mapElementId=q.getMapElementId(),n.format=t.format,g.info(n.layerName+" - constructing..."),0!==n.layerType.length&&(m=h.createLayer(n,t.framework),q.addLayer(m).then(function(a){t.layerDto=a,d(),g.info("construction complete..."),t.constructionInProgress=!1},function(a){t.$emit(n.layerName+"_error",n),t.onError({message:a,layer:n}),d(),g.info("construction failed..."),t.constructionInProgress=!1}))};r.$observe("visibility",function(){t.layerReady&&q&&null!=t.layerDto&&t.layerDto.id&&q.setLayerVisibility(t.layerDto.id,"true"===t.visibility)}),r.$observe("opacity",function(){t.layerReady&&q&&null!=t.layerDto&&t.layerDto.id&&q.setOpacity(t.layerDto.id,t.opacity)}),t.initCount=0,t.initialiseLayer=function(){g.info("initialising layer..."),null!=t.layerDto?o():t.layerReady&&t.constructionInProgress?g.info("..."):c()},t.$on("$destroy",function(){t.layerDto&&q.removeLayerById(t.layerDto.id),$(window).off("resize.Viewport")}),null==r.refreshLayer&&null!=t.layerType&&t.layerType.length>0&&t.initialiseLayer()}}}]);var angular=angular||{},OpenLayers=OpenLayers||{},ol=ol||{},app=angular.module("gawebtoolkit.core.layer-services",["gawebtoolkit.mapservices"]);app.service("GALayerService",["ga.config","mapLayerServiceLocator",function(d,c){return{createLayer:function(b,h){var g=h||"olv2",f=c.getImplementation(g);return f.createLayer(b)},createFeatureLayer:function(b,h){var g=h||"olv2",f=c.getImplementation(g);return f.createFeatureLayer(b)},createGoogleLayer:function(b,h){var g=h||"olv2",f=c.getImplementation(g);return f.createGoogleLayer(b)},createBingLayer:function(b,h){var g=h||"olv2",f=c.getImplementation(g);return f.createBingLayer(b)},createOsmLayer:function(b,h){var g=h||"olv2",f=c.getImplementation(g);return f.createOsmLayer(b)},createMarkerLayer:function(b,h){var g=h||"olv2",f=c.getImplementation(g);return f.createMarkerLayer(b)},removeLayerByName:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);g.removeLayerByName(b,j)},removeLayersByName:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);g.removeLayersByName(b,j)},removeLayer:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);g.removeLayer(b,j)},removeLayerById:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);g.removeLayerById(b,j)},getMarkerCountForLayerName:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);return g.getMarkerCountForLayerName(b,j)},registerFeatureSelected:function(b,n,m,l,k){var j=k||"olv2",i=c.getImplementation(j);return i.registerFeatureSelected(b,n,m,l)},defaultLayerOptions:function(h,g){var b=g||"olv2",a=c.getImplementation(b);return a.defaultLayerOptions(h,new d)},createFeature:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);return g.createFeature(b,j)},cleanupLayer:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);return g.cleanupLayer(b,j)},registerLayerEvent:function(b,n,m,l,k){var j=k||"olv2",i=c.getImplementation(j);i.registerLayerEvent(b,n,m,l)},unRegisterMapEvent:function(b,n,m,l,k){var j=k||"olv2",i=c.getImplementation(j);i.unRegisterMapEvent(b,n,m,l)},addFeatureToLayer:function(b,l,k,j){var i=j||"olv2",h=c.getImplementation(i);return h.addFeatureToLayer(b,l,k)},parselatLong:function(f){if(!f){return null}var e,g;return e=f.split(","),g={lat:"",lon:""},g.lat=e[0],g.lon=e[1],g},filterFeatureLayer:function(b,n,m,l,k){var j=k||"olv2",i=c.getImplementation(j);i.filterFeatureLayer(b,n,m,l)},getLayerFeatures:function(b,j,i){var h=i||"olv2",g=c.getImplementation(h);return g.getLayerFeatures(b,j)},removeFeatureFromLayer:function(b,l,k,j){var i=j||"olv2",h=c.getImplementation(i);return h.removeFeatureFromLayer(b,l,k)},raiseLayerDrawOrder:function(b,l,k,j){var i=j||"olv2",h=c.getImplementation(i);return h.raiseLayerDrawOrder(b,l,k)}}}]),app.service("mapLayerServiceLocator",["$injector",function(d){var c={olv2:"olv2LayerService",olv3:"olv3LayerService"};return{getImplementation:function(a){return d.get(c[a])}}}]);var angular=angular||{},OpenLayers=OpenLayers||{},app=angular.module("gawebtoolkit.core.map-config",[]);app.value("ga.config",function(){var b={standardTileSize:256,largeTileSize:1024,veryLargeTileSize:2048,minMapWidth:900,minMapHeight:600,panIncrement:30,smallPanIncrement:5,transitionEffect:"resize",visibility:!0,isBaseLayer:!1,wrapDateLine:!0,sphericalMercator:!0,bingLayerType:"Road",opacity:1,layerAttribution:"",displayInLayerSwitcher:!0,projection:"EPSG:102100",displayProjection:"EPSG:4326",numZoomLevels:15,transparent:!0,format:"image/png",tileSize:function(a){var d;return a?"large"===a?d=new OpenLayers.Size(b.largeTileSize,b.largeTileSize):"vlarge"===a&&(d=new OpenLayers.Size(b.veryLargeTileSize,b.veryLargeTileSize)):d=new OpenLayers.Size(b.standardTileSize,b.standardTileSize),d},layerType:"WMS"};return{defaultOptions:b,olv2Options:b,cesiumOptions:{includeCustomTerrainProvider:!1,customTerrainProviderUrl:null},olv3Options:{renderer:"canvas"}}});var angular=angular||{},$=$||{},app=angular.module("gawebtoolkit.core.map-directives",["gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMap",["$timeout","$compile","GAMapService","GALayerService","GADataService","$q","$log",function(i,h,n,m,l,k,j){return{restrict:"E",scope:{mapElementId:"@",datumProjection:"@",displayProjection:"@",centerPosition:"@",zoomLevel:"@",isStaticMap:"@",initialExtent:"=",framework:"@",existingMapInstance:"="},controller:["$scope",function(a){j.info("map creation started..."),$("#"+a.mapElementId).empty(),a.initialPositionSet=!1,a.layerPromises=[],a.layerDtoPromises=[];var d=this;d.addLayer=function(b){var o=k.defer(),g=k.defer();if(null!==b.then&&"function"==typeof b.then){o=b,a.layersReady?b.then(function(e){if(null==e){j.info("failed to load layer")}else{var p=n.addLayer(a.mapInstance,e,a.framework);g.resolve(p),a.$emit("layerAdded",p)}}):(a.layerPromises.push(o),a.layerDtoPromises.push(g))}else{if(a.layersReady){var f=n.addLayer(a.mapInstance,b,a.framework);g.resolve(f),a.$emit("layerAdded",f)}else{a.layerPromises.push(o.promise),a.layerDtoPromises.push(g),o.resolve(b)}}return g.promise};var c=[];a.deferredMarkers=[],d.addMarkerLayer=function(b,s){if(s){c.push(s);for(var r,q=!1,p=0;p<c.length;p++){if(r=c[p],r===s){q=!0;break}}if(q){if(a.layersReady){var o=k.defer();return o.resolve(),o.promise}var f=k.defer();return a.deferredMarkers.push(f),f.promise}return d.addLayer(b)}return d.addLayer(b)},d.getMapOptions=function(){return{mapElementId:a.mapElementId,datumProjection:a.datumProjection,displayProjection:a.displayProjection,centerPosition:a.centerPosition,zoomLevel:a.zoomLevel,initialExtent:a.initialExtent}},d.createLayer=function(b){var e=m.defaultLayerOptions(b,a.framework);return m.createLayer(e,a.framework)},d.zoomToMaxExtent=function(){n.zoomToMaxExtent(a.mapInstance,a.framework)},d.currentZoomLevel=function(){return n.currentZoomLevel(a.mapInstance,a.framework)},d.registerMapMouseMove=function(b){n.registerMapMouseMove(a.mapInstance,b,a.framework)},d.registerMapMouseMoveEnd=function(b){n.registerMapMouseMoveEnd(a.mapInstance,b,a.framework)},d.registerMapClick=function(b){n.registerMapClick(a.mapInstance,b,a.framework)},d.unRegisterMapClick=function(b){n.unRegisterMapClick(a.mapInstance,b,a.framework)},d.addControl=function(b,p,o,g){return n.addControl(a.mapInstance,b,p,o,g,d.getMapOptions(),a.framework)},d.getLonLatFromPixel=function(b,g,f){return n.getLonLatFromPixel(a.mapInstance,b,g,f,a.framework)},d.getPixelFromLonLat=function(b,e){return n.getPixelFromLonLat(a.mapInstance,b,e,a.framework)},d.getPointFromEvent=function(b){return n.getPointFromEvent(b,a.framework)},d.getLayers=function(){return n.getLayers(a.mapInstance,a.framework)},d.getLayersByName=function(b){return n.getLayersByName(a.mapInstance,b,a.framework)},d.zoomToLayer=function(b){n.zoomToLayer(a.mapInstance,b,a.framework)},d.getProjection=function(){return n.getProjection(a.mapInstance,d.getFrameworkVersion())},d.getDisplayProjection=function(){return n.getDisplayProjection(a.mapInstance,d.getFrameworkVersion())},d.setLayerVisibility=function(b,e){n.setLayerVisibility(a.mapInstance,b,e,a.framework)},d.createBoundingBox=function(b){return n.createBoundingBox(a.mapInstance,b,a.framework)},d.createBounds=function(b,e){return n.createBounds(a.mapInstance,b,e,a.framework)},d.zoomToExtent=function(b){n.zoomToExtent(a.mapInstance,b,a.framework)},d.zoomTo=function(b){n.zoomTo(a.mapInstance,b,a.framework)},d.setBaseLayer=function(b){n.setBaseLayer(a.mapInstance,b,a.framework)},d.setCenter=function(b,g,f){n.setCenter(a.mapInstance,b,g,f,a.framework)},d.getInitialExtent=function(){return a.initialExtent},d.setInitialPositionAndZoom=function(){var b={mapElementId:a.mapElementId,datumProjection:a.datumProjection,displayProjection:a.displayProjection,centerPosition:a.centerPosition,zoomLevel:a.zoomLevel,initialExtent:a.initialExtent};a.centerPosition||(a.centerPosition={lon:0,lat:0}),a.initialPositionSet||n.setInitialPositionAndZoom(a.mapInstance,b,a.framework),a.initialPositionSet=!0},d.isBaseLayer=function(b){return n.isBaseLayer(a.mapInstance,b,a.framework)},d.getMapInstance=function(){return a.mapInstance},d.setOpacity=function(b,e){n.setOpacity(a.mapInstance,b,e,a.framework)},d.getMapElementId=function(){return n.getMapElementId(a.mapInstance,a.framework)},d.setMapMarker=function(b,p,o,g){return n.setMapMarker(a.mapInstance,b,p,o,g,a.framework)},d.removeMapMarker=function(b){n.removeMapMarker(a.mapInstance,b,a.framework)},d.removeLayerByName=function(b){m.removeLayerByName(a.mapInstance,b,a.framework)},d.removeLayersByName=function(b){m.removeLayersByName(a.mapInstance,b,a.framework)},d.removeLayer=function(b){m.removeLayer(a.mapInstance,b,a.framework)},d.removeLayerById=function(b){m.removeLayerById(a.mapInstance,b,a.framework)},d.getMarkerCountForLayerName=function(b){return m.getMarkerCountForLayerName(a.mapInstance,b,a.framework)},d.drawPolyLine=function(b,e){n.drawPolyLine(a.mapInstance,b,e,a.framework)},d.startRemoveSelectedFeature=function(b){return n.startRemoveSelectedFeature(a.mapInstance,b,a.framework)},d.stopRemoveSelectedFeature=function(){return n.stopRemoveSelectedFeature(a.mapInstance,a.framework)},d.removeFeature=function(b,e){return n.removeFeature(a.mapInstance,b,e,a.framework)},d.startDrawingOnLayer=function(b,e){return n.startDrawingOnLayer(a.mapInstance,b,e,a.framework)},d.stopDrawing=function(){return n.stopDrawing(a.mapInstance,a.framework)},d.drawLabel=function(b,e){return n.drawLabel(a.mapInstance,b,e,a.framework)},d.drawLabelWithPoint=function(b,e){return n.drawLabelWithPoint(a.mapInstance,b,e,a.framework)},d.isControlActive=function(b,e){return n.isControlActive(a.mapInstance,b,e,a.framework)},d.getLayersByWMSCapabilities=function(b){return l.getLayersByWMSCapabilities(b,a.framework)},d.getWMSFeatures=function(b,q,p,o,e){return l.getWMSFeatures(a.mapInstance,b,q,p,o,e,a.framework)},d.getWMSFeaturesByLayerId=function(b,f,e){return l.getWMSFeaturesByLayerId(a.mapInstance,b,f,e,a.framework)},d.registerFeatureSelected=function(b,g,f){return m.registerFeatureSelected(a.mapInstance,b,g,f,a.framework)},d.getFeatureInfo=function(b,t,s,r,q,p,o){return n.getFeatureInfo(a.mapInstance,b,t,s,r,q,p,o,a.framework)},d.getFeatureInfoFromLayer=function(b,p,o,g){return n.getFeatureInfoFromLayer(a.mapInstance,b,p,o,g,a.framework)},d.resetMapFired=function(){a.$emit("resetMapFired")},d.activateControl=function(b){n.activateControl(a.mapInstance,b,a.framework)},d.deactivateControl=function(b){n.deactivateControl(a.mapInstance,b,a.framework)},d.registerControlEvent=function(b,g,f){n.registerControlEvent(a.mapInstance,b,g,f,a.framework)},d.unRegisterControlEvent=function(b,g,f){n.unRegisterControlEvent(a.mapInstance,b,g,f,a.framework)},d.registerMapEvent=function(b,e){n.registerMapEvent(a.mapInstance,b,e,a.framework)},d.registerLayerEvent=function(b,g,f){m.registerLayerEvent(a.mapInstance,b,g,f,a.framework)},d.unRegisterLayerEvent=function(b,g,f){m.unRegisterLayerEvent(a.mapInstance,b,g,f,a.framework)},d.unRegisterMapEvent=function(b,e){n.unRegisterMapEvent(a.mapInstance,b,e,a.framework)},d.getCurrentMapExtent=function(){return n.getCurrentMapExtent(a.mapInstance,a.framework)},d.switch3d=function(){n.is3dSupported(a.mapInstance,a.framework)&&(n.is3d(a.mapInstance,a.framework)?n.switchTo2dView(a.mapInstance,a.framework):n.switchTo3dView(a.mapInstance,a.framework))},d.is3d=function(){return n.is3dSupported(a.mapInstance,a.framework)?n.is3d(a.mapInstance,a.framework):!1},d.filterFeatureLayer=function(b,g,f){m.filterFeatureLayer(a.mapInstance,b,g,f,a.framework)},d.getLayerFeatures=function(b){return m.getLayerFeatures(a.mapInstance,b,a.framework)},d.createFeature=function(b){return m.createFeature(a.mapInstance,b,a.framework)},d.addFeatureToLayer=function(b,e){return m.addFeatureToLayer(a.mapInstance,b,e,a.framework)},d.createWfsClient=function(b,t,s,r,q,p,o){return n.createWfsClient(b,t,s,r,q,p,o,a.framework)},d.addWfsClient=function(b){return n.addWfsClient(b,a.framework)},d.searchWfs=function(b,g,f){return n.searchWfs(a.mapInstance,b,g,f,a.framework)},d.getMeasureFromEvent=function(b){return n.getMeasureFromEvent(a.mapInstance,b,a.framework)},d.removeFeatureFromLayer=function(b,e){m.removeFeatureFromLayer(a.mapInstance,b,e,a.framework)},d.raiseLayerDrawOrder=function(b,e){m.raiseLayerDrawOrder(a.mapInstance,b,e,a.framework)},d.getFrameworkVersion=function(){return null!=OpenLayers&&a.mapInstance instanceof OpenLayers.Map?"olv2":null!=ol&&a.mapInstance instanceof ol.Map?"olv3":void 0},a.gaMap=d,$(window).bind("resize",function(){n.mapResized(a.mapInstance,a.framework)}),a.mapInstance=a.existingMapInstance?a.existingMapInstance:n.initialiseMap({mapElementId:a.mapElementId,datumProjection:a.datumProjection,displayProjection:a.displayProjection,initialExtent:a.initialExtent,centerPosition:a.centerPosition,zoomLevel:a.zoomLevel,isStaticMap:a.isStaticMap},a.framework),a.$emit("mapInstanceReady",a.mapInstance),a.$emit("mapControllerReady",d),a.$broadcast("mapControllerReady",d),a.$on("$destroy",function(){j.info("map destruction started..."),$(window).off("resize.Viewport"),i(function(){j.info("map destruction finishing..."),j.info("removing "+a.gaMap.getLayers().length+" layers...");for(var b=a.gaMap.getLayers(),f=0;f<b.length;f++){var e=b[f];a.gaMap.removeLayerById(e.id)}})})}],link:function(a){function c(b){j.info("resolving all layers");for(var r=[],q=0;q<b.length;q++){var p=b[q];if("string"==typeof p){a.layerDtoPromises[q].reject(p)}else{var o=n.addLayer(a.mapInstance,p,a.framework);a.layerDtoPromises[q].resolve(o),r.push(o)}}for(var g=0;g<a.deferredMarkers.length;g++){a.deferredMarkers[g].resolve()}a.$emit("layersReady",r),a.$broadcast("layersReady",r),a.layersReady=!0,a.existingMapInstance||a.gaMap.setInitialPositionAndZoom()}i(function(){k.allSettled(a.layerPromises).then(function(b){c(b)},function(b){c(b)})})},transclude:!1}}]),app.config(["$provide",function(b){b.decorator("$q",["$delegate",function(d){var c=d;return c.allSettled=c.allSettled||function(h){var m=c.defer();if(!angular.isArray(h)){throw"allSettled can only handle an array of promises (for now)"}var l=[],k=[],j=!1;angular.forEach(h,function(f,e){l[e]=!1});var i=function(g,f,p,o){var n=!0;angular.forEach(g,function(e){e||(n=!1)}),n&&(o?p.reject(f):p.resolve(f))};return angular.forEach(h,function(e,f){c.when(e).then(function(g){l[f]=!0,k[f]=g,i(l,k,m,j)},function(g){l[f]=!0,k[f]=g,j=!0,i(l,k,m,j)})}),m.promise},c}])}]);var angular=angular||{},OpenLayers=OpenLayers||{},ol=ol||{},app=angular.module("gawebtoolkit.core.map-services",["gawebtoolkit.mapservices"]);app.service("GAMapService",["$log","ga.config","mapServiceLocator",function(e,d,f){return{initialiseMap:function(j,i){var c=i||"olv2",b=f.getImplementation(c);try{return b.initialiseMap(j,new d)}catch(a){throw e.error("Failed to initialise map"),a}},zoomToMaxExtent:function(g,c){var i=c||"olv2",h=f.getImplementation(i);h.zoomToMaxExtent(g)},zoomTo:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.zoomTo(g,c)},getMapElementId:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.getMapElementId(g)},getProjection:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.getProjection(g)},getDisplayProjection:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.getDisplayProjection(g)},currentZoomLevel:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.currentZoomLevel(g)},addLayer:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);return h.addLayer(g,c)},registerMapMouseMove:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.registerMapMouseMove(g,c)},registerMapMouseMoveEnd:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.registerMapMouseMoveEnd(g,c)},registerMapClick:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.registerMapClick(g,c)},unRegisterMapClick:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.unRegisterMapClick(g,c)},registerMapEvent:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);i.registerMapEvent(h,c,l,k)},unRegisterMapEvent:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);i.unRegisterMapEvent(h,c,l,k)},getCurrentMapExtent:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.getCurrentMapExtent(g)},addControl:function(r,q,p,o,n,m,l){var k=l||"olv2",c=f.getImplementation(k);return c.addControl(r,q,p,o,n,m)},isControlActive:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.isControlActive(h,c,l)},activateControl:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.activateControl(g,c)},deactivateControl:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.deactivateControl(g,c)},registerControlEvent:function(i,c,n,m,l){var k=l||"olv2",j=f.getImplementation(k);j.registerControlEvent(i,c,n,m)},unRegisterControlEvent:function(i,c,n,m,l){var k=l||"olv2",j=f.getImplementation(k);j.unRegisterControlEvent(i,c,n,m)},getLayers:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.getLayers(g)},getLayersByName:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);return h.getLayersByName(g,c)},zoomToLayer:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.zoomToLayer(g,c)},setLayerVisibility:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);i.setLayerVisibility(h,c,l)},createBoundingBox:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);return h.createBoundingBox(g,c)},createBounds:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.createBounds(h,c,l)},zoomToExtent:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.zoomToExtent(g,c)},setCenter:function(i,c,n,m,l){var k=l||"olv2",j=f.getImplementation(k);j.setCenter(i,c,n,m)},setInitialPositionAndZoom:function(b,j,i){var h=i||"olv2",c=f.getImplementation(h);c.setInitialPositionAndZoom(b,j,new d)},setBaseLayer:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.setBaseLayer(g,c)},isBaseLayer:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);return h.isBaseLayer(g,c)},setOpacity:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);i.setOpacity(h,c,l)},mapResized:function(g,c){var i=c||"olv2",h=f.getImplementation(i);h.mapResized(g)},setMapMarker:function(j,c,p,o,n,m){var l=m||"olv2",k=f.getImplementation(l);return k.setMapMarker(j,c,p,o,n)},removeMapMarker:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);h.removeMapMarker(g,c)},getLonLatFromPixel:function(i,c,n,m,l){var k=l||"olv2",j=f.getImplementation(k);return j.getLonLatFromPixel(i,c,n,m)},getPixelFromLonLat:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.getPixelFromLonLat(h,c,l)},getPointFromEvent:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.getPointFromEvent(g)},drawPolyLine:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.drawPolyLine(h,c,l)},startRemoveSelectedFeature:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);return h.startRemoveSelectedFeature(g,c)},stopRemoveSelectedFeature:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.stopRemoveSelectedFeature(g)},removeFeature:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.removeFeature(h,c,l)},drawFeature:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);return h.drawFeature(g,c)},startDrawingOnLayer:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.startDrawingOnLayer(h,c,l)},stopDrawing:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.stopDrawing(g)},drawLabel:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.drawLabel(h,c,l)},drawLabelWithPoint:function(h,c,l,k){var j=k||"olv2",i=f.getImplementation(j);return i.drawLabelWithPoint(h,c,l)},createWfsClient:function(t,s,r,q,p,o,n,m){var l=m||"olv2",c=f.getImplementation(l);return c.createWfsClient(t,s,r,q,p,o,n)},getFeatureInfo:function(v,u,t,s,r,q,p,o,n){var m=n||"olv2",c=f.getImplementation(m);return c.getFeatureInfo(v,u,t,s,r,q,p,o)},getFeatureInfoFromLayer:function(j,c,p,o,n,m){var l=m||"olv2",k=f.getImplementation(l);return k.getFeatureInfoFromLayer(j,c,p,o,n)},getMeasureFromEvent:function(g,c,j){var i=j||"olv2",h=f.getImplementation(i);return h.getMeasureFromEvent(g,c)},addWfsClient:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.addWfsClient(g)},is3dSupported:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.is3dSupported(g)},is3d:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.is3d(g)},switchTo3dView:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.switchTo3dView(g)},switchTo2dView:function(g,c){var i=c||"olv2",h=f.getImplementation(i);return h.switchTo2dView(g)},searchWfs:function(i,c,n,m,l){var k=l||"olv2",j=f.getImplementation(k);return j.searchWfs(i,c,n,m)}}}]),app.service("mapServiceLocator",["$injector",function(d){var c={olv2:"olv2MapService",olv3:"olv3MapService"};return{getImplementation:function(a){return d.get(c[a])}}}]),function(){var b=angular.module("gawebtoolkit.core.marker-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);b.directive("gaMapMarker",["$log","$timeout","GALayerService",function(e,d,f){return{restrict:"E",require:"^gaMap",scope:{markerIcon:"@",markerLong:"@",markerLat:"@",markerId:"@",markerWidth:"@",markerHeight:"@",mapMarkerClicked:"&",layerName:"@"},link:function(g,c,j,i){function h(){var a,o,n,m,l;l=g.markerIcon,"string"==typeof g.markerLong&&(o=parseFloat(g.markerLong)),"string"==typeof g.markerLat&&(a=parseFloat(g.markerLat)),"string"==typeof g.markerWidth&&(n=parseInt(g.markerWidth)),"string"==typeof g.markerHeight&&(m=parseInt(g.markerHeight));var k=f.createLayer({layerType:"markerlayer",layerName:g.layerName},g.framework);i.addMarkerLayer(k,g.layerName).then(function(){var p=i.getPixelFromLonLat(o,a);g.markerDto=i.setMapMarker(p,g.layerName,l,{width:n,height:m})})}g.framework=i.getFrameworkVersion(),j.$observe("markerIcon",function(){}),j.$observe("markerLong",function(){}),j.$observe("markerLat",function(){}),j.$observe("markerId",function(){}),j.$observe("markerWidth",function(){}),j.$observe("markerHeight",function(){}),h(),g.$on("$destroy",function(){i.removeMapMarker(g.markerDto.id)})}}}])}();var angular=angular||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.utils",[]);app.service("GAWTUtils",[function(){return{generateUuid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var d=16*Math.random()|0,f="x"==e?d:3&d|8;return f.toString(16)})},convertHexToRgb:function(g){function f(b){return parseInt(h(b).substring(0,2),16)}function j(b){return parseInt(h(b).substring(2,4),16)}function i(b){return parseInt(h(b).substring(4,6),16)}function h(b){return"#"===b.charAt(0)?b.substring(1,7):b}return[f(g),j(g),i(g)]},convertHexAndOpacityToRgbArray:function(h,g){function l(b){return parseInt(i(b).substring(0,2),16)}function k(b){return parseInt(i(b).substring(2,4),16)}function j(b){return parseInt(i(b).substring(4,6),16)}function i(b){return"#"===b.charAt(0)?b.substring(1,7):b}return[l(h),k(h),j(h),g]}}}]),function(){var b=angular.module("gawebtoolkit.vendor.bing-layers",["gawebtoolkit.core.layer-services"]);b.directive("gaBingLayer",["$timeout","$compile","GALayerService","$log",function(h,g,l,k){var j=["road","aerial","aerialwithlabels","birdseye","birdseyewithlabels"],i=function(e){for(var d=0;d<j.length;d++){var f=j[d];if(f===e.toLowerCase()){return !0}}return !1};return{restrict:"E",require:"^gaMap",scope:{layerType:"@",visibility:"@",wrapDateLine:"@",bingApiKey:"@",controllerEmitEventName:"@"},transclude:!1,controller:["$scope",function(d){var c=this;return d.controllerEmitEventName&&d.$emit(d.controllerEmitEventName,c),c}],link:function(r,q,p,o){function n(){k.info("reconstructing layer...");for(var a=o.getLayers(),s=null,e=0;e<a.length;e++){if(a[e].id===r.layerDto.id){s=e;break}}if(null!=s){if(o.removeLayerById(r.layerDto.id),r.layerDto=null,f=l.defaultLayerOptions(p,r.framework),f.initialExtent=o.getInitialExtent(),f.format=r.format,null==f.bingApiKey){throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'")}m=l.createBingLayer(f,r.framework),o.addLayer(m).then(function(t){if(r.layerDto=t,d(),null!=r.layerDto){var u=s-o.getLayers().length+1;o.raiseLayerDrawOrder(r.layerDto.id,u)}})}}r.framework=o.getFrameworkVersion(),r.mapAPI={},r.mapAPI.mapController=o;var m,f={};f=l.defaultLayerOptions(p,r.framework),f.layerType=f.layerType||f.bingLayerType,i(f.layerType)||(k.warn("Invalid Bing layer type - "+f.layerType+' used. Defaulting to "Road". Specify default Bing layer type in "ga.config" - bingLayerType'),f.layerType="Road");var d=function(){r.layerReady=!0},c=function(){if(r.constructionInProgress=!0,f.mapElementId=o.getMapElementId(),k.info("Bing "+f.layerType+" - constructing..."),null==f.bingApiKey){throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'")}m=l.createBingLayer(f,r.framework),o.addLayer(m).then(function(a){r.layerDto=a,d(),k.info("construction complete..."),r.constructionInProgress=!1},function(a){r.$emit(f.layerName+"_error",f),r.onError({message:a,layer:f}),d(),k.info("construction failed..."),r.constructionInProgress=!1})};p.$observe("visibility",function(){r.layerReady&&o&&null!=r.layerDto&&r.layerDto.id&&o.setLayerVisibility(r.layerDto.id,"true"===r.visibility)}),p.$observe("layerType",function(){r.layerReady&&o&&null!=r.layerDto&&r.layerDto.id&&r.initialiseLayer()}),r.initCount=0,r.initialiseLayer=function(){k.info("initialising layer..."),null!=r.layerDto?n():r.layerReady&&r.constructionInProgress?k.info("..."):c()},r.$on("$destroy",function(){r.layerDto&&o.removeLayerById(r.layerDto.id),$(window).off("resize.Viewport")}),r.initialiseLayer()}}}])}(),function(){var b=angular.module("gawebtoolkit.vendor.google-layers",["gawebtoolkit.core.layer-services"]);b.directive("gaGoogleLayer",["$timeout","$compile","GALayerService","$log",function(h,g,l,k){var j=["street","hybrid","satellite","terrain"],i=function(e){for(var d=0;d<j.length;d++){var f=j[d];if(f===e.toLowerCase()){return !0}}return !1};return{restrict:"E",require:"^gaMap",scope:{layerType:"@",visibility:"@",controllerEmitEventName:"@"},transclude:!1,controller:["$scope",function(d){var c=this;return d.controllerEmitEventName&&d.$emit(d.controllerEmitEventName,c),c}],link:function(r,q,p,o){function n(){k.info("reconstructing layer...");for(var a=o.getLayers(),s=null,e=0;e<a.length;e++){if(a[e].id===r.layerDto.id){s=e;break}}null!=s&&(o.removeLayerById(r.layerDto.id),r.layerDto=null,f=l.defaultLayerOptions(p,r.framework),f.initialExtent=o.getInitialExtent(),f.format=r.format,m=l.createGoogleLayer(f,r.framework),o.addLayer(m).then(function(t){if(r.layerDto=t,d(),null!=r.layerDto){var u=s-o.getLayers().length+1;o.raiseLayerDrawOrder(r.layerDto.id,u)}}))}r.framework=o.getFrameworkVersion(),r.mapAPI={},r.mapAPI.mapController=o;var m,f={};f=l.defaultLayerOptions(p,r.framework),f.layerType=f.layerType||f.googleLayerType,i(f.layerType)||(k.warn("Invalid Google layer type - "+f.layerType+' used. Defaulting to "Hybrid". Specify default Google layer type in "ga.config" - googleLayerType'),f.layerType="Hybrid");var d=function(){r.layerReady=!0},c=function(){r.constructionInProgress=!0,f.mapElementId=o.getMapElementId(),k.info("Google "+r.layerType+" - constructing..."),m=l.createGoogleLayer(f,r.framework),o.addLayer(m).then(function(a){r.layerDto=a,d(),k.info("construction complete..."),r.constructionInProgress=!1},function(a){r.$emit(f.layerName+"_error",f),r.onError({message:a,layer:f}),d(),k.info("construction failed..."),r.constructionInProgress=!1})};p.$observe("visibility",function(){r.layerReady&&o&&null!=r.layerDto&&r.layerDto.id&&o.setLayerVisibility(r.layerDto.id,"true"===r.visibility||r.visibility===!0)}),p.$observe("layerType",function(){r.layerReady&&o&&null!=r.layerDto&&r.layerDto.id&&r.initialiseLayer()}),r.initCount=0,r.initialiseLayer=function(){k.info("initialising layer..."),null!=r.layerDto?n():r.layerReady&&r.constructionInProgress?k.info("..."):c()},r.$on("$destroy",function(){r.layerDto&&o.removeLayerById(r.layerDto.id),$(window).off("resize.Viewport")}),r.initialiseLayer()}}}])}(),function(){var b=angular.module("gawebtoolkit.vendor.osm-layers",["gawebtoolkit.core.layer-services"]);b.directive("gaOsmLayer",["$timeout","$compile","GALayerService","$log",function(f,e,h,g){return{restrict:"E",require:"^gaMap",scope:{wrapDateLine:"@",visibility:"@",controllerEmitEventName:"@"},transclude:!1,controller:["$scope",function(d){var c=this;return d.controllerEmitEventName&&d.$emit(d.controllerEmitEventName,c),c}],link:function(r,q,p,o){function n(){g.info("reconstructing layer...");for(var a=o.getLayers(),j=null,i=0;i<a.length;i++){if(a[i].id===r.layerDto.id){j=i;break}}null!=j&&(o.removeLayerById(r.layerDto.id),r.layerDto=null,l=h.defaultLayerOptions(p,r.framework),l.initialExtent=o.getInitialExtent(),l.format=r.format,m=h.createLayer(l,r.framework),o.addLayer(m).then(function(k){if(r.layerDto=k,d(),null!=r.layerDto){var s=j-o.getLayers().length+1;o.raiseLayerDrawOrder(r.layerDto.id,s)}}))}r.framework=o.getFrameworkVersion(),r.mapAPI={},r.mapAPI.mapController=o;var m,l={};l=h.defaultLayerOptions(p,r.framework);var d=function(){r.layerReady=!0},c=function(){r.constructionInProgress=!0,l.mapElementId=o.getMapElementId(),g.info("OpenStreetMaps Cycle - constructing..."),m=h.createOsmLayer(l,r.framework),o.addLayer(m).then(function(a){r.layerDto=a,d(),g.info("construction complete..."),r.constructionInProgress=!1},function(a){r.$emit(l.layerName+"_error",l),r.onError({message:a,layer:l}),d(),g.info("construction failed..."),r.constructionInProgress=!1})};p.$observe("visibility",function(){r.layerReady&&o&&null!=r.layerDto&&r.layerDto.id&&o.setLayerVisibility(r.layerDto.id,"true"===r.visibility)}),r.initCount=0,r.initialiseLayer=function(){g.info("initialising layer..."),null!=r.layerDto?n():r.layerReady&&r.constructionInProgress?g.info("..."):c()},r.$on("$destroy",function(){r.layerDto&&o.removeLayerById(r.layerDto.id),$(window).off("resize.Viewport")}),r.initialiseLayer()}}}])}(),function(){angular.module("gawebtoolkit.vendor-layers",["gawebtoolkit.vendor.google-layers","gawebtoolkit.vendor.bing-layers","gawebtoolkit.vendor.osm-layers"])}(),function(){var d=angular.module("gawebtoolkit.mapservices.data.openlayersv2",[]),c=["$q","$http",function(f,e){function h(H,G,F,E){var D,C=H.projection,B=H.getExtent(),A=B.toBBOX(),z=event instanceof MouseEvent?G.xy:G,y=H.getSize().h/2,x=H.getSize().w/2,w=new OpenLayers.Geometry.Point(x,y),v=H.getSize().w,u=H.getSize().h,t={x:z.x,y:z.y};if(H.getSize().w>=2050){if(z.x>w.x){if(z.y>w.y){var s=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(w.x,w.y)),r=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(H.getSize().w,H.getSize().h));D=new OpenLayers.Bounds(s.lon,r.lat,r.lon,s.lat),t.x=z.x-x,t.y=z.y-y}else{var s=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(w.x,0)),r=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(H.getSize().w,H.getSize().h));D=new OpenLayers.Bounds(s.lon,r.lat,r.lon,s.lat),t.x=z.x-x}}else{if(z.y>w.y){var s=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,w.y)),r=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(w.x,H.getSize().h));D=new OpenLayers.Bounds(s.lon,r.lat,r.lon,s.lat),t.y=z.y-y}else{var s=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,0)),r=H.getLonLatFromPixel(new OpenLayers.Geometry.Point(w.x,w.y));D=new OpenLayers.Bounds(s.lon,r.lat,r.lon,s.lat)}}A=D.toBBOX(),u=Math.floor(y),v=Math.floor(x)}return OpenLayers.Util.extend({service:"WMS",version:F,request:"GetFeatureInfo",bbox:A,feature_count:100,height:u,width:v,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:E},parseFloat(F)>=1.3?{crs:C,i:parseInt(t.x),j:parseInt(t.y)}:{srs:C,x:parseInt(t.x),y:parseInt(t.y)})}function g(j){var i,k;switch(k=j&&"string"==typeof j&&0===j.indexOf("application/vnd.ogc.gml/3")?"application/vnd.ogc.gml/3":j){case"application/vnd.ogc.gml":i=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":i=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":i=OpenLayers.Format.Text;break;case"application/json":i=OpenLayers.Format.GeoJSON;break;default:i=OpenLayers.Format.WMSGetFeatureInfo}return i}return{getLayersByWMSCapabilities:function(b){var a=f.defer();return e.get(b+"?request=GetCapabilities").success(function(j){var i=new OpenLayers.Format.WMSCapabilities,k=i.read(j).capability.layers;a.resolve(k)}),a.promise},getWMSFeatures:function(v,u,t,s,r,q){var p=q||"text/xml",o=f.defer(),n=h(v,r,s,p);0!==t.length&&(n=OpenLayers.Util.extend({layers:t,query_layers:t},n)),OpenLayers.Util.applyDefaults(n,{});var a={url:u,params:OpenLayers.Util.upperCaseObject(n),callback:function(j){var i=new (g(p)),m=i.read(j.responseText),l=new OpenLayers.Format.GeoJSON,k=angular.fromJson(l.write(m));o.resolve(k)},scope:this};return OpenLayers.Request.GET(a),o.promise},getWMSFeaturesByLayerId:function(F,E,D,C){for(var B=function(j){var i;return i=j.params.STYLES?j.params.STYLES:OpenLayers.Util.isArray(j.params.LAYERS)?new Array(j.params.LAYERS.length):j.params.LAYERS.toString().replace(/[^,]/g,"")},A=f.defer(),z=[],y=[],x=[F.getLayersBy("id",D)[0]],w=0,v=x.length;v>w;w++){null!=x[w].params.LAYERS&&(z=z.concat(x[w].params.LAYERS),y=y.concat(B(x[w])))}var u=x[0],t=F.getProjection(),s=u.projection;s&&s.equals(F.getProjectionObject())&&(t=s.getCode());var r=OpenLayers.Util.extend({service:"WMS",version:u.params.VERSION,request:"GetFeatureInfo",exceptions:u.params.EXCEPTIONS,bbox:F.getExtent().toBBOX(null,u.reverseAxisOrder()),feature_count:100,height:F.getSize().h,width:F.getSize().w,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:u.params.INFO_FORMAT||"text/xml"},parseFloat(u.params.VERSION)>=1.3?{crs:t,i:parseInt(C.x),j:parseInt(C.y)}:{srs:t,x:parseInt(C.x),y:parseInt(C.y)});0!==z.length&&(r=OpenLayers.Util.extend({layers:z,query_layers:z,styles:y},r)),OpenLayers.Util.applyDefaults(r,{});var a={url:E,params:OpenLayers.Util.upperCaseObject(r),callback:function(j){var i=new OpenLayers.Format.WMSGetFeatureInfo,m=i.read(j.responseText),l=new OpenLayers.Format.GeoJSON,k=angular.fromJson(l.write(m));A.resolve(k)},scope:this};return OpenLayers.Request.GET(a),A.promise}}}];d.service("WMSDataService",c),d.service("olv2DataService",c)}(),function(){var d=angular.module("gawebtoolkit.mapservices.data.openlayersv3",[]),c=["$q","$http",function(f,e){function h(L,K,J,I){var H,G=L.getView().getProjection().getCode(),F=L.getView().calculateExtent(L.getSize()),E=new OpenLayers.Bounds(F[0],F[1],F[2],F[3]),D=E.toBBOX(),C=K instanceof ol.MapBrowserPointerEvent?K.pixel:K,B=L.getSize()[1]/2,A=L.getSize()[0]/2,z=[A,B],y=L.getSize()[0],x=L.getSize()[1],w={x:C[0],y:C[1]};if(L.getSize()[0]>=2050){if(C[0]>z[0]){if(C[1]>z[1]){var v=L.getCoordinateFromPixel([z[0],z[1]]),u=L.getCoordinateFromPixel([L.getSize()[0],L.getSize()[1]]);H=new OpenLayers.Bounds(v[0],u[1],u[0],v[1]),w.x=C[0]-A,w.y=C[1]-B}else{var v=L.getCoordinateFromPixel([z[0],0]),u=L.getCoordinateFromPixel([L.getSize()[0],L.getSize()[1]]);H=new OpenLayers.Bounds(v[0],u[1],u[0],v[1]),w.x=C[0]-A}}else{if(C[1]>z[1]){var v=L.getCoordinateFromPixel([0,z[1]]),u=L.getCoordinateFromPixel([z[0],L.getSize()[1]]);H=new OpenLayers.Bounds(v[0],u[1],u[0],v[1]),w.y=C[1]-B}else{var v=L.getCoordinateFromPixel([0,0]),u=L.getCoordinateFromPixel([z[0],z[1]]);H=new OpenLayers.Bounds(v[0],u[1],u[0],v[1])}}D=H.toBBOX(),x=Math.floor(B),y=Math.floor(A)}var t=OpenLayers.Util.extend({service:"WMS",version:J,request:"GetFeatureInfo",bbox:D,feature_count:100,height:x,width:y,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:I},parseFloat(J)>=1.3?{crs:G,i:parseInt(w.x),j:parseInt(w.y)}:{srs:G,x:parseInt(w.x),y:parseInt(w.y)});return t}function g(j){var i,k;switch(k=j&&"string"==typeof j&&0===j.indexOf("application/vnd.ogc.gml/3")?"application/vnd.ogc.gml/3":j){case"application/vnd.ogc.gml":i=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":i=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":i=OpenLayers.Format.Text;break;case"application/json":i=OpenLayers.Format.GeoJSON;break;default:i=OpenLayers.Format.WMSGetFeatureInfo}return i}return{getLayersByWMSCapabilities:function(b){var a=f.defer();return e.get(b+"?request=GetCapabilities").success(function(j){var i=new OpenLayers.Format.WMSCapabilities,k=i.read(j).capability.layers;a.resolve(k)}),a.promise},getWMSFeatures:function(v,u,t,s,r,q){var p=q||"text/xml",o=f.defer(),n=h(v,r,s,p);0!==t.length&&(n=OpenLayers.Util.extend({layers:t,query_layers:t},n)),OpenLayers.Util.applyDefaults(n,{});var a={url:u,params:OpenLayers.Util.upperCaseObject(n),callback:function(j){var i=new (g(p)),m=i.read(j.responseText),l=new OpenLayers.Format.GeoJSON,k=angular.fromJson(l.write(m));o.resolve(k)},scope:this};return OpenLayers.Request.GET(a),o.promise},getWMSFeaturesByLayerId:function(D,C,B,A){for(var z=function(j){var i;return i=j.getParams().STYLES?j.getParams().STYLES:OpenLayers.Util.isArray(j.getParams().LAYERS)?new Array(j.getParams().LAYERS.length):j.getParams().LAYERS.toString().replace(/[^,]/g,"")},y=f.defer(),x=[],w=[],v=[D.getLayersBy("id",B)[0]],u=0,t=v.length;t>u;u++){null!=v[u].getParams().LAYERS&&(x=x.concat(v[u].getParams().LAYERS),w=w.concat(z(v[u])))}var s=v[0],r=D.getView().getProjection().getCode(),q=OpenLayers.Util.extend({service:"WMS",version:s.getParams().VERSION,request:"GetFeatureInfo",bbox:D.getExtent().toBBOX(null),feature_count:100,height:D.getSize()[1],width:D.getSize()[0],format:OpenLayers.Format.WMSGetFeatureInfo,info_format:s.params.INFO_FORMAT||"text/xml"},parseFloat(s.params.VERSION)>=1.3?{crs:r,i:parseInt(A.x),j:parseInt(A.y)}:{srs:r,x:parseInt(A.x),y:parseInt(A.y)});0!==x.length&&(q=OpenLayers.Util.extend({layers:x,query_layers:x,styles:w},q)),OpenLayers.Util.applyDefaults(q,{});var a={url:C,params:OpenLayers.Util.upperCaseObject(q),callback:function(j){var i=new OpenLayers.Format.WMSGetFeatureInfo,m=i.read(j.responseText),l=new OpenLayers.Format.GeoJSON,k=angular.fromJson(l.write(m));y.resolve(k)},scope:this};return OpenLayers.Request.GET(a),y.promise}}}];d.service("olv3DataService",c)}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},google=google||{},app=angular.module("gawebtoolkit.mapservices.layer.openlayersv2",[]);app.service("olv2LayerService",["$log","$q","$timeout",function(f,e,h){var g={xyzTileCachePath:"/tile/${z}/${y}/${x}",createLayer:function(d){var c;switch(d.layerType.toLowerCase()){case"wms":c=g.createWMSLayer(d);break;case"xyztilecache":c=g.createXYZLayer(d);break;case"arcgiscache":c=g.createArcGISCacheLayer(d);break;case"vector":c=g.createFeatureLayer(d);break;case"googlestreet":case"googlehybrid":case"googlesatellite":case"googleterrain":c=g.createGoogleMapsLayer(d);break;case"markerlayer":c=g.createMarkerLayer(d);break;default:throw new Error("Invalid layerType used to create layer of name "+d.layerName+" - with layerType - "+d.layerType)}return c.geoLayerType=d.layerType,c},createGoogleLayer:function(i){if(null==i.layerType){throw new Error("'layerType' not specified for creating a Google Maps layer. Please specify a valid layer type, eg 'hybrid")}var d;switch(i.layerType.toLocaleLowerCase()){case"hybrid":d=google.maps.MapTypeId.HYBRID;break;case"satellite":d=google.maps.MapTypeId.SATELLITE;break;case"street":d=google.maps.MapTypeId.STREET;break;case"terrain":d=google.maps.MapTypeId.TERRAIN;break;default:d=google.maps.MapTypeId.HYBRID}var j={visibility:i.visibility===!0||"true"===i.visibility,type:d};return new OpenLayers.Layer.Google(i.layerType,j)},createBingLayer:function(j){var i,l=j.layerName;switch(j.layerType.toLocaleLowerCase()){case"aerial":i="Aerial",l=l||"Bing Aerial";break;case"aerialwithlabels":i="AerialWithLabels",l=l||"Bing Aerial With Labels";break;case"birdseye":i="Birdseye",l=l||"Bing Birdseye";break;case"birdseyewithlabels":i="BirdseyeWithLabels",l=l||"Bing Birdseye With Labels";break;case"road":i="Road",l=l||"Bing Roads";break;default:i="Road",l=l||"Bing Roads"}var k=new OpenLayers.Layer.Bing({key:j.bingApiKey,type:i,name:l,visibility:j.visibility===!0||"true"===j.visibility});return k.wrapDateLine=j.wrapDateLine||!1,k},createOsmLayer:function(d){var c=new OpenLayers.Layer.OSM(d.layerName||"OpenCycleMap");return c.wrapDateLine=d.wrapDateLine||!1,c.visibility=d.visibility===!0||"true"===d.visibility,c},createFeatureLayer:function(d){var c;return null==d.url?c=new OpenLayers.Layer.Vector(d.layerName):(g.postAddLayerCache=g.postAddLayerCache||[],c=new OpenLayers.Layer.Vector(d.layerName,{strategies:[new OpenLayers.Strategy.Fixed],styleMap:new OpenLayers.StyleMap({"default":new OpenLayers.Style({pointRadius:"10",fillOpacity:0.6,fillColor:"#ffcc66",strokeColor:"#cc6633"}),select:{fillColor:"#8aeeef"}}),protocol:new OpenLayers.Protocol.WFS({url:d.url,featureType:d.wfsFeatureType,featurePrefix:d.wfsFeaturePrefix,version:d.wfsVersion,geometryName:d.wfsGeometryName,srsName:d.datumProjection}),visibility:d.visibility})),null!=d.postAddLayer&&(g.postAddLayerCache[c.id]=d.postAddLayer),c},createMarkerLayer:function(b){return new OpenLayers.Layer.Markers(b.layerName)},createGoogleMapsLayer:function(i){var d;switch(i.layerType){case"GoogleStreet":d=google.maps.MapTypeId.STREET;break;case"GoogleHybrid":d=google.maps.MapTypeId.HYBRID;break;case"GoogleSatellite":d=google.maps.MapTypeId.SATELLITE;break;case"GoogleTerrain":d=google.maps.MapTypeId.TERRAIN}var j={wrapDateLine:i.wrapDateLine,transitionEffect:i.transitionEffect,visibility:i.visibility===!0||"true"===i.visibility,isBaseLayer:i.isBaseLayer===!0||"true"===i.isBaseLayer,tileSize:i.tileSize(i.tileType),sphericalMercator:i.sphericalMercator,centerPosition:i.centerPosition,attribution:i.layerAttribution,numZoomLevels:20,type:d,animationEnabled:!0};return new OpenLayers.Layer.Google(i.layerName,j)},clearFeatureLayer:function(){},createXYZLayer:function(d){var c={layerName:d.layerName,layerUrl:d.layerUrl,options:{wrapDateLine:d.wrapDateLine,transitionEffect:d.transitionEffect,visibility:d.visibility===!0||"true"===d.visibility,isBaseLayer:d.isBaseLayer===!0||"true"===d.isBaseLayer,tileSize:d.tileSize(d.tileType),sphericalMercator:d.sphericalMercator,centerPosition:d.centerPosition,attribution:d.layerAttribution,opacity:d.opacity}};return c.options.isBaseLayer&&(d.resolutions&&(c.options.resolutions=d.resolutions),d.zoomOffset&&(c.options.zoomOffset=d.zoomOffset)),null!=d.maxZoomLevel&&d.maxZoomLevel.length>0&&(c.options.numZoomLevels=parseInt(d.maxZoomLevel)),new OpenLayers.Layer.XYZ(c.layerName,c.layerUrl+g.xyzTileCachePath,c.options)},createWMSLayer:function(d){var c={layerName:d.layerName,layerUrl:d.layerUrl,layers:d.layers,wrapDateLine:d.wrapDateLine,visibility:d.visibility===!0||"true"===d.visibility,isBaseLayer:d.isBaseLayer===!0||"true"===d.isBaseLayer,transitionEffect:d.transitionEffect,tileSize:d.tileSize(d.tileType),sphericalMercator:d.sphericalMercator,tileType:d.tileType,projection:d.datumProjection,transparent:d.transparent,attribution:d.layerAttribution,opacity:d.opacity};return null!=d.maxZoomLevel&&d.maxZoomLevel.length>0&&(c.numZoomLevels=parseInt(d.maxZoomLevel)),new OpenLayers.Layer.WMS(c.layerName,c.layerUrl,{layers:c.layers,format:c.format,transparent:c.transparent},c)},createArcGISCacheLayer:function(b){var j=e.defer(),i=new OpenLayers.Protocol.Script,c=h(function(){j.reject("LayerTimeout")},10000);return i.createRequest(b.layerUrl,{f:"json",pretty:"true"},function(a){if(h.cancel(c),null!=a.error&&null!=a.error.code){return void j.reject("LayerError - "+a.error.code)}var k={layerName:b.layerName,layerUrl:b.layerUrl,options:{transitionEffect:b.transitionEffect,visibility:b.visibility===!0||"true"===b.visibility,isBaseLayer:b.isBaseLayer===!0||"true"===b.isBaseLayer,tileSize:b.tileSize(),alwaysInRange:!1,displayInLayerSwitcher:!1,opacity:b.opacity,attribution:b.layerAttribution}};null!=b.maxZoomLevel&&b.maxZoomLevel.length>0&&(k.options.numZoomLevels=parseInt(b.maxZoomLevel)),a&&(k.options.layerInfo=a,null==k.options.numZoomLevels&&(k.options.numZoomLevels=a.tileInfo.lods.length+1));var d=new OpenLayers.Layer.ArcGISCache(k.layerName,k.layerUrl,k.options);j.resolve(d)}),j.promise},defaultLayerOptions:function(i,d){var j=angular.extend(d.defaultOptions,i);return j.centerPosition=g.parselatLong(j.centerPosition),j},cleanupLayer:function(i,d){if(null!=i.layers&&0!==i.layers.length){var j=g.getLayerById(i,d);null!=j&&i.removeLayer(j)}},createFeature:function(i,d){var j;return j=i.projection!==d.crs.properties.name?new OpenLayers.Format.GeoJSON({externalProjection:d.crs.properties.name,internalProjection:i.projection}):new OpenLayers.Format.GeoJSON,j.read(angular.toJson(d),d.type)},addFeatureToLayer:function(i,d,m){var l=g.getLayerById(i,d);l.addFeatures(m instanceof Array?m:[m]);var k=new OpenLayers.Format.GeoJSON,j=angular.fromJson(k.write(m));return j.id=m.id,j},parselatLong:function(b){return b?angular.fromJson(b):null},getLayerById:function(j,i){for(var l,k=0;k<j.layers.length;k++){if(j.layers[k].id===i){l=j.layers[k];break}}return l},removeLayerByName:function(i,d){var j=i.getLayersByName(d);j.length>0&&i.removeLayer(j[0])},removeLayersByName:function(j,i){for(var l=j.getLayersByName(i),k=0;k<l.length;k++){j.removeLayer(l[k])}},removeLayer:function(d,c){d.removeLayer(c)},removeLayerById:function(i,d){var j=i.getLayersBy("id",d)[0];i.removeLayer(j)},removeFeatureFromLayer:function(j,i,m){var l=j.getLayersBy("id",i)[0],k=l.getFeatureById(m);l.removeFeatures(k)},registerFeatureSelected:function(j,i,p,o){var n,m=j.getLayersBy("id",i)[0],l=m.geoLayerType;"WMS"===l&&(n=OpenLayers.Protocol.WFS.fromWMSLayer(m));var k=j.getControl("ctrlGetFeature");return k&&j.removeControl(k),k=new OpenLayers.Control.GetFeature({protocol:n,box:!0,hover:!0,multipleKey:"shiftKey",toggleKey:"ctrlKey"}),k.metadata=k.metadata||{},k.metadata.type="getfeature",k.events.register("featureselected",o,p),{id:"ctrlGetFeature",name:"getfeature"}},registerLayerEvent:function(j,i,m,l){var k=j.getLayersBy("id",i)[0];k.events.register(m,k,l)},unRegisterLayerEvent:function(j,i,m,l){var k=j.getLayersBy("id",i)[0];k.events.unregister(m,k,l)},getMarkerCountForLayerName:function(j,i){var l=j.getLayersByName(i),k=0;return l.length>0&&(k=null==l[0].markers?0:l[0].markers.length),k},filterFeatureLayer:function(r,q,p,o){for(var n=g.getLayerById(r,q),m=g.parseFeatureAttributes(o),l=[],k=0;k<m.length;k++){l.push(new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:m[k],matchCase:!1,value:p.toUpperCase()+"*"}))}var d=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:l});1===d.filters.length?(n.filter=l[0],n.refresh({force:!0})):(n.filter=d,n.refresh({force:!0}))},parseFeatureAttributes:function(d){if(!d){return null}var c=[];return -1===d.indexOf(",")?c.push(d):c=d.split(","),c},getLayerFeatures:function(i,d){for(var l=[],k=g.getLayerById(i,d),j=0;j<k.features.length;j++){l.push(k.features[j])}return l},raiseLayerDrawOrder:function(i,d,k){var j=g.getLayerById(i,d);i.raiseLayer(j,k)},postAddLayerCache:{}};return g}]),function(){var b=angular.module("gawebtoolkit.mapservices.layer.openlayersv3",[]);b.service("olv3LayerService",["$log","$q","$timeout","GeoLayer","GAWTUtils",function(h,g,l,k,j){var i={xyzTileCachePath:"/tile/{z}/{y}/{x}",createLayer:function(d){var c;switch(d.layerType){case"WMS":c=i.createWMSLayer(d);break;case"XYZTileCache":c=i.createXYZLayer(d);break;case"ArcGISCache":c=i.createArcGISCacheLayer(d);break;case"Vector":c=i.createFeatureLayer(d);break;case"markerlayer":c=i.createMarkerLayer(d);break;case"GoogleStreet":case"GoogleHybrid":case"GoogleSatellite":case"GoogleTerrain":throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.");default:throw new Error("Invalid layerType used to create layer of name "+d.layerName+" - with layerType - "+d.layerType)}return c.set("geoLayerType",d.layerType),d.maxZoomLevel&&(c.geoMaxZoom=parseInt(d.maxZoomLevel)),d.minZoomLevel&&(c.geoMinZoom=parseInt(d.minZoomLevel)),c},createFeatureLayer:function(e){var d;if(null==e.url){d=new ol.layer.Vector({source:new ol.source.Vector,format:new ol.format.GeoJSON})}else{i.postAddLayerCache=i.postAddLayerCache||[];var f=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.6)"}),stroke:new ol.style.Stroke({color:"#319FD3",width:1}),text:new ol.style.Text({font:"12px Calibri,sans-serif",fill:new ol.style.Fill({color:"#000"}),stroke:new ol.style.Stroke({color:"#fff",width:3})})});d=new ol.layer.Vector({source:new ol.source.Vector({url:e.url,format:new ol.format.GeoJSON,style:f})})}return d.set("name",e.layerName),d.set("isBaseLayer",e.isBaseLayer||!1),d},createMarkerLayer:function(d){var c=new ol.layer.Vector({source:new ol.source.Vector,format:new ol.format.GeoJSON});return c.set("name",d.layerName),c},createGoogleLayer:function(){throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.")},createBingLayer:function(f){var e,n=f.layerName;switch(f.layerType.toLocaleLowerCase()){case"aerial":e="Aerial",n=n||"Bing Aerial";break;case"aerialwithlabels":e="AerialWithLabels",n=n||"Bing Aerial With Labels";break;case"birdseye":e="Birdseye",n=n||"Bing Birdseye";break;case"birdseyewithlabels":e="BirdseyeWithLabels",n=n||"Bing Birdseye With Labels";break;case"road":e="Road",n=n||"Bing Roads";break;default:e="Road"}var m=new ol.layer.Tile({source:new ol.source.BingMaps({key:f.bingApiKey,imagerySet:e})});return m.set("name",n),m.setVisible(f.visibility===!0||"true"===f.visibility),m},createOsmLayer:function(d){var c=new ol.layer.Tile({source:new ol.source.OSM});return c.setVisible(d.visibility===!0||"true"===d.visibility),c},clearFeatureLayer:function(){},createXYZLayer:function(f){var e={url:f.layerUrl+i.xyzTileCachePath,crossOrigin:"*/*"};null!=f.layerAttribution&&(e.attributions=[new ol.Attribution({html:f.layerAttribution})]);var n={opacity:f.opacity,source:new ol.source.XYZ(e),visible:f.visibility===!0||"true"===f.visibility},m=new ol.layer.Tile(n);return m.set("name",f.layerName),m.set("isBaseLayer",f.isBaseLayer||!1),m},createWMSLayer:function(m){var f={};f.url=m.layerUrl,f.crossOrigin="anonymous",f.params={LAYERS:m.layers,TILED:!0},m.format&&(f.params.FORMAT=m.format),f.wrapX=!0,null!=m.wrapDateLine&&(f.wrapX="true"===m.wrapDateLine||m.wrapDateLine===!0),f.serverType="mapserver",null!=m.layerAttribution&&(f.attributions=[new ol.Attribution({html:m.layerAttribution})]);var p=new ol.source.TileWMS(f),o={};o.source=p,o.visible="true"===m.visibility||m.visibility===!0,o.opacity=m.opacity;var n=new ol.layer.Tile(o);return n.set("name",m.layerName),n.set("isBaseLayer",m.isBaseLayer||!1),n},createArcGISCacheLayer:function(f){var e={url:f.layerUrl+i.xyzTileCachePath,crossOrigin:"*/*"},n={opacity:f.opacity,source:new ol.source.XYZ(e),visible:f.visibility===!0||"true"===f.visibility},m=new ol.layer.Tile(n);return m.set("name",f.layerName),m.set("isBaseLayer",f.isBaseLayer||!1),m},defaultLayerOptions:function(e,d){var f=angular.extend(d.defaultOptions,e);return f.centerPosition=i.parselatLong(f.centerPosition),f},cleanupLayer:function(e,d){var f=i.getLayerBy(e,"id",d);null!=f&&e.removeLayer(f)},createFeature:function(e,d){var f;return f=e.getView().getProjection()!==d.crs.properties.name?new ol.format.GeoJSON({defaultDataProjection:d.crs.properties.name}):new new ol.format.GeoJSON({defaultDataProjection:e.getView().getProjection()}),f.readFeature(angular.toJson(d),{dataProjection:d.crs.properties.name,featureProjection:e.getView().getProjection()})},addFeatureToLayer:function(f,e,r){var q=i.getLayerById(f,e),p=q.getSource();if("function"!=typeof p.getFeatures){throw new Error("Layer does not have a valid source for features.")}var o,n=new ol.format.GeoJSON;r instanceof Array?(p.addFeatures(r),o=n.writeFeatures(r)):(p.addFeature(r),o=n.writeFeature(r));var m=angular.fromJson(o);return r.id=r.getId()||j.generateUuid(),m.id=r.id,m},parselatLong:function(c){return c?angular.fromJson(c):null},getLayerById:function(d,c){return i.getLayerBy(d,"id",c)},getLayerBy:function(m,f,p){var o=null,n=!1;return m.getLayers().forEach(function(c){p===c.get(f)&&n===!1&&(o=c,n=!0)}),o},getLayerByName:function(d,c){return i.getLayerBy(d,"name",c)},getLayersBy:function(m,d,p){var o=m.getLayers(),n=[];return o.forEach(function(c){var f=c.get(d);f&&-1!==f.indexOf(p)&&n.push(k.fromOpenLayersV3Layer(c))}),n},_getLayersBy:function(m,f,p){var o=m.getLayers(),n=[];return o.forEach(function(c){var e=c.get(f);e&&-1!==e.indexOf(p)&&n.push(c)}),n},removeLayerByName:function(e,d){var f=i._getLayersBy(e,"name",d);f.length>0&&e.removeLayer(f[0])},removeLayersByName:function(f,e){for(var n=i._getLayersBy(f,"name",e),m=0;m<n.length;m++){f.removeLayer(n[m])}},removeLayer:function(d,c){d.removeLayer(c)},removeLayerById:function(e,d){var f=i._getLayersBy(e,"id",d)[0];e.removeLayer(f)},removeFeatureFromLayer:function(m,f,r){for(var q=i.getLayerById(m,f),p=q.getSource().getFeatures(),o=0;o<p.length;o++){var n=p[o];if(n.id===r){q.getSource().removeFeature(n);break}}},registerFeatureSelected:function(m,f,q){i.registeredInteractions=i.registeredInteractions||[];for(var p=0;p<i.registeredInteractions.length;p++){var o=i.registeredInteractions[p];o.id===""+f+"_features"&&m.removeInteraction(o.select)}var n=new ol.interaction.Select({condition:ol.events.condition.click});n.on("select",function(c){c.target.get("id")===f&&q(c)}),i.registeredInteractions.push({id:f+"_features",select:n}),m.addInteraction(n)},registerLayerEvent:function(m,f,p,o){var n=i.getLayerBy(m,"id",f);n.getSource().on(p,o)},unRegisterLayerEvent:function(m,f,p,o){var n=i.getLayerBy(m,"id",f);n.getSource().un(p,o)},getMarkerCountForLayerName:function(e,d){var f=i.getLayerBy(e,"name",d);return null==f?0:"undefined"==typeof f.getSource().getFeatures?0:f.getSource().getFeatures().length},filterFeatureLayer:function(){throw new Error("NotImplementedError")},parseFeatureAttributes:function(d){if(!d){return null}var c=[];return -1===d.indexOf(",")?c.push(d):c=d.split(","),c},getLayerFeatures:function(m,f){var s=[],r=i.getLayerById(m,f),q=r.getSource();if(null==q.getFeatures){return s}for(var p=q.getFeatures(),o=0;o<p.length;o++){var n=p[o];s.push(n)}return s},raiseLayerDrawOrder:function(u,t,s){for(var r,q=i.getLayerById(u,t),p=u.getLayers(),o=0;o<p.getLength();o++){var n=p.item(o);if(n.get("id")===t){r=o;break}}var m=r+s,f=u.getLayers().getArray()[m];u.getLayers().getArray()[m]=q,u.getLayers().getArray()[r]=f,u.updateSize()},postAddLayerCache:{}};return i}])}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},darwin=darwin||{},app=angular.module("gawebtoolkit.mapservices.controls.openlayersv2",[]);app.service("olv2MapControls",[function(){var d=[{name:"permalink",constructor:OpenLayers.Control.Permalink},{name:"overviewmap",constructor:OpenLayers.Control.OverviewMap},{name:"scale",constructor:OpenLayers.Control.Scale},{name:"scaleline",constructor:OpenLayers.Control.ScaleLine},{name:"panzoombar",constructor:OpenLayers.Control.PanZoomBar},{name:"zoomslider",constructor:OpenLayers.Control.PanZoomBar},{name:"zoom",constructor:OpenLayers.Control.Zoom},{name:"mouseposition",constructor:OpenLayers.Control.MousePosition},{name:"attribution",constructor:OpenLayers.Control.Attribution},{name:"measureline",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Path]},{name:"measurepolygon",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Polygon]},{name:"wmsgetfeatureinfo",constructor:OpenLayers.Control.WMSGetFeatureInfo}],c={resolveSupportedControl:function(a){for(var h,g=0;g<d.length;g++){var f=d[g];if(f.name===a){h=f;break}}return h},createControl:function(b,j,i){var h;i&&!j.div&&(j.div=i);var g=c.resolveSupportedControl(b);if(null==g||null==g.constructor){throw new Error("Error in map control construction. Unsupported control or missing source for control constructor.")}return h=g.customParams?j?new g.constructor(g.customParams[0],j):new g.constructor(g.customParams[0]):j?new g.constructor(j):new g.constructor},registerControl:function(a,e){d.push({name:a,constructor:e})}};return c}]),function(){var b=angular.module("gawebtoolkit.mapservices.controls.openlayersv3",[]);b.service("olv3MapControls",[function(){function e(h,g){var k={},j=function(c){return function(a){return a[0]>180&&(a[0]=a[0]-360),a[0]<-180&&(a[0]=a[0]+360),a[1]>90&&(a[1]=a[1]-180),a[1]<-90&&(a[1]=a[1]+180),ol.coordinate.toStringXY(a,c)}},i=function(c){return function(a){return a[0]>180&&(a[0]=a[0]-360),a[0]<-180&&(a[0]=a[0]+360),a[1]>90&&(a[1]=a[1]-180),a[1]<-90&&(a[1]=a[1]+180),c({lon:a[0],lat:a[1]})}};return k.coordinateFormat=null!=h.formatOutput?i(h.formatOutput):null==h.coordinateFormat?j(4):h.coordinateFormat(4),k.projection=h.projection||g.displayProjection,k}var d=[{name:"overviewmap",constructor:ol.control.OverviewMap},{name:"scaleline",constructor:ol.control.ScaleLine},{name:"zoomslider",constructor:ol.control.ZoomSlider},{name:"panzoombar",constructor:ol.control.ZoomSlider},{name:"zoom",constructor:ol.control.Zoom},{name:"mouseposition",constructor:ol.control.MousePosition,resolveCustomParams:e},{name:"attribution",constructor:ol.control.Attribution}],f={resolveSupportedControl:function(g){for(var j,i=0;i<d.length;i++){var h=d[i];if(h.name===g){j=h;break}}return j},createControl:function(s,r,q,p){var o;q&&!r.div&&(r.element=q);var n=f.resolveSupportedControl(s);if(null==n||null==n.constructor){var m="Error in map control construction for '"+s+"'. Unsupported control or missing source for control constructor.";m+="\r\nSupported controls names are: ";for(var l=0;l<d.length;l++){var c=d[l];m+="\r\n"+c.name}throw new Error(m)}return n.resolveCustomParams?(r=angular.extend(r,angular.copy(n.resolveCustomParams(r,p))),o=new n.constructor(r)):n.customParams?(r=angular.extend(r,angular.copy(n.customParams[0])),o=new n.constructor(r)):o=r?new n.constructor(r):new n.constructor,o},registerControl:function(g,h){d.push({name:g,constructor:h})}};return f}]),null!=ol&&null!=ol.control&&null!=ol.control.ZoomSlider&&(ol.control.ZoomSlider.prototype.getPositionForResolution_=function(e){try{var d=this.getMap().getView().getValueForResolutionFunction();return 1-d(e)}catch(f){}})}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.mapservices.map.openlayersv2",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.controls.openlayersv2"]);app.service("olv2MapService",["olv2LayerService","olv2MapControls","GAWTUtils","GeoLayer","$q","$log",function(t,s,r,q,p,o){function n(e,d,f){e._geowebtoolkit=e._geowebtoolkit||{},e._geowebtoolkit[d]=f}function m(e,d){var f=null;return null!=e._geowebtoolkit&&(f=e._geowebtoolkit[d]),f}function l(h,g){for(var v in g.postAddLayerCache){if(g.postAddLayerCache.hasOwnProperty(v)){for(var u=!1,j=0;j<h.layers.length;j++){var i=h.layers[j];v===i.id&&(u=!0)}u||(g.postAddLayerCache[v]=null)}}}var k={initialiseMap:function(e,d){var f={};return null==e.displayProjection&&(e.displayProjection=d.defaultOptions.displayProjection),k.displayProjection=e.displayProjection,null==e.datumProjection&&(e.datumProjection=d.defaultOptions.projection),f.projection=e.datumProjection,f.numZoomLevels=d.defaultOptions.numZoomLevels,f.displayProjection=e.displayProjection,f.controls=e.isStaticMap||void 0!==f.controls&&null!==f.controls?[]:[new OpenLayers.Control.Navigation],new OpenLayers.Map(e.mapElementId,f)},getParameterByName:function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var d=new RegExp("[\\?&]"+e+"=([^&#]*)"),f=d.exec(document.URL);return null==f?"":decodeURIComponent(f[1].replace(/\+/g," "))},zoomToMaxExtent:function(b){b.zoomToMaxExtent()},currentZoomLevel:function(b){return b.getZoom()},addLayer:function(d,c){return null==c.then||"function"!=typeof c.then?(null!=c.geoLayerType&&-1!==c.geoLayerType.indexOf("Google")&&(d.zoomDuration=0),d.addLayer(c),k.postLayerAddAction(d,c),q.fromOpenLayersV2Layer(c)):void c.then(function(a){return d.addLayer(a),k.postLayerAddAction(d,c),q.fromOpenLayersV2Layer(c)})},postLayerAddAction:function(a,d){o.info("post layer add fired"),t.postAddLayerCache[d.id]&&t.postAddLayerCache[d.id]({map:a,layer:d}),l(a,t)},registerMapMouseMove:function(d,c){d.events.register("mousemove",d,c)},registerMapClick:function(d,c){d.events.register("click",d,c)},unRegisterMapClick:function(d,c){d.events.unregister("click",d,c)},registerMapMouseMoveEnd:function(d,c){d.events.register("moveend",d,c)},registerMapEvent:function(e,d,f){e.events.register(d,e,f)},unRegisterMapEvent:function(e,d,f){e.events.unregister(d,e,f)},getCurrentMapExtent:function(i){var h=i.getExtent();if(null==h){return null}h=h.transform(i.projection,k.displayProjection);var x=[],w=[h.left,h.top],v=[h.right,h.top],u=[h.left,h.bottom],j=[h.right,h.bottom];return x.push(w),x.push(v),x.push(u),x.push(j),x},isControlActive:function(g,f){for(var j,i=0;g.controls.length;i++){var h=g.controls[i];if(h.id===f){j=h;break}}return j.active===!0},addControl:function(b,z,y,x,w){z=z.toLowerCase();var v,u={};x&&(v=$("#"+x)[0]),"mouseposition"===z&&(y=y||{});var j=s.createControl(z,y,v);return j.id=w||j.id,b.addControl(j),u.id=j.id,u},getControls:function(g){for(var f=[],j=g.controls,i=0;i<j.length;i++){var h=j[i];f.push({id:h.metadata.id||h.id,name:h.metadata.type})}return f},getControlById:function(h,g){for(var v,u=h.controls,j=0;j<u.length;j++){var i=u[j];if(i.id===g){v=i;break}}return v},activateControl:function(e,d){var f=k.getControlById(e,d);if(null==f){throw new Error('Control "'+d+'" not found. Failed to activate control')}f.activate()},deactivateControl:function(e,d){var f=k.getControlById(e,d);f.deactivate()},registerControlEvent:function(g,f,j,i){var h=k.getControlById(g,f);h.events.register(j,void 0,i)},unRegisterControlEvent:function(g,f,j,i){var h=k.getControlById(g,f);h.events.unregister(j,void 0,i)},getLayers:function(d){var c=[];return angular.forEach(d.layers,function(b){c.push(q.fromOpenLayersV2Layer(b))}),c},getLayersByName:function(h,d){if("string"!=typeof d&&"number"!=typeof d){throw new TypeError("Expected number")}for(var v=h.getLayersBy("name",d),u=[],j=0;j<v.length;j++){var i=v[j];u.push(q.fromOpenLayersV2Layer(i))}return u},setLayerVisibility:function(f,e,h){if("object"==typeof h){throw new TypeError("Expected boolean")}var g=f.getLayersBy("id",e)[0];g.setVisibility(h)},createBoundingBox:function(f,e){for(var h=new OpenLayers.Bounds,g=0;g<e.length;g++){h.extend(new OpenLayers.LonLat(e[g][0],e[g][1]))}return h.toBBOX()},createBounds:function(h,g,v){for(var u=new OpenLayers.Bounds,j=0;j<g.length;j++){var i=new OpenLayers.LonLat(g[j][0],g[j][1]);i=i.transform(v,h.projection),u.extend(i)}return u},zoomToExtent:function(e,d){var f=k.createBounds(e,d,k.displayProjection);e.zoomToExtent(f,!1)},zoomToLayer:function(f,e){var h=f.getLayersBy("id",e)[0];if(null==h){throw new ReferenceError('Layer not found - id: "'+e+'".')}var g=h.getExtent();f.zoomToExtent(g)},zoomTo:function(d,c){if("object"==typeof c){throw new TypeError("Expected number")}d.zoomTo(c)},getMapElementId:function(b){return"object"==typeof b.div?$(b.div)[0].id:b.div},getProjection:function(b){return b.projection},getDisplayProjection:function(b){return b.displayProjection||k.displayProjection||"EPSG:4326"},setBaseLayer:function(e,d){var f=e.getLayersBy("id",d)[0];e.setBaseLayer(f,!1)},setCenter:function(h,g,v,u){var j=new OpenLayers.LonLat(v,g);if(null==u){h.setCenter(j)}else{var i=j.transform(new OpenLayers.Projection(u),new OpenLayers.Projection(h.getProjection()));h.setCenter(i)}},setInitialPositionAndZoom:function(E,D){if(""!==k.getParameterByName("zoom")&&null!=D.centerPosition){var C=new OpenLayers.LonLat(k.getParameterByName("lon"),k.getParameterByName("lat")).transform(),B=new OpenLayers.Projection(k.displayProjection),A=new OpenLayers.Projection(E.getProjection()),z=C.transform(B,A);E.setCenter(z,k.getParameterByName("zoom"))}else{if(null!=D.initialExtent){var y=k.createBounds(E,D.initialExtent,k.displayProjection);E.zoomToExtent(y,!0)}else{if(D.centerPosition){var x=JSON.parse(D.centerPosition),w=new OpenLayers.LonLat(x[0],x[1]),v=new OpenLayers.Projection(k.displayProjection),u=new OpenLayers.Projection(E.getProjection()),j=w.transform(v,u);E.setCenter(j,D.zoomLevel)}else{E.zoomToMaxExtent()}}}},isBaseLayer:function(h,g){for(var v,u=!1,j=h.layers.length,i=0;j>i;i++){if(h.layers[i].id===g){v=h.layers[i];break}}return u=v?-1!==v.id.indexOf("ArcGISCache")?v.options.isBaseLayer:v.isBaseLayer:!1},setOpacity:function(f,e,h){if("object"==typeof h){throw new TypeError("Expected number")}var g=f.getLayersBy("id",e)[0];g.setOpacity(h)},mapResized:function(d){d.updateSize();for(var c=0;c<d.layers.length;c++){d.layers[c].redraw(!0)}},setMapMarker:function(F,E,D,C,B){var A=F.getLayersBy("name",D),z=F.getLonLatFromPixel(E),y=new OpenLayers.Size(B.width,B.height),x=new OpenLayers.Pixel(-(y.w/2),-y.h),w=new OpenLayers.Icon(C,y,x),v=new OpenLayers.Marker(z,w.clone());v.map=F;var u=r.generateUuid();if(v.id=u,null!=A&&A.length>0&&"function"==typeof A[0].addMarker){A[0].addMarker(v)}else{var c=new OpenLayers.Layer.Markers(D);F.addLayer(c),c.addMarker(v)}return{id:u,groupName:D}},removeMapMarker:function(h,g){for(var v=0;v<h.layers.length;v++){var u=h.layers[v];if(null!=u.markers&&u.markers.length>0){for(var j=0;j<u.markers.length;j++){var i=u.markers[j];if(i.id===g){u.removeMarker(i);break}}break}}},getLonLatFromPixel:function(g,f,j,i){if(null==f){throw new ReferenceError("'x' value cannot be null or undefined")}if(null==j){throw new ReferenceError("'y' value cannot be null or undefined")}var h=g.getLonLatFromPixel({x:f,y:j});return i?h=h.transform(g.projection,i):k.displayProjection&&k.displayProjection!==g.projection&&(h=h.transform(g.projection,k.displayProjection)),h},getPixelFromLonLat:function(f,e,h){if(null==e){throw new ReferenceError("'lon' value cannot be null or undefined")}if(null==h){throw new ReferenceError("'lat' value cannot be null or undefined")}var g=new OpenLayers.LonLat(e,h);return k.displayProjection&&k.displayProjection!==f.projection&&(g=g.transform(k.displayProjection,f.projection)),f.getPixelFromLonLat(g)},getPointFromEvent:function(b){return{x:b.xy.x,y:b.xy.y}},drawPolyLine:function(D,C,B,A){var z=new OpenLayers.Geometry.Point(C[0].lon,C[0].lat),y=new OpenLayers.Geometry.Point(C[1].lon,C[1].lat),x=A||"EPSG:4326",w=new OpenLayers.Layer.Vector(B),v=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([y,z]).transform(new OpenLayers.Projection(x),D.getProjection())),u=OpenLayers.Util.applyDefaults(u,OpenLayers.Feature.Vector.style["default"]);u.strokeWidth=4,v.style=u,w.addFeatures([v]),D.addLayer(w)},startRemoveSelectedFeature:function(g,f){function v(b){u.removeFeatures(b)}var u,j=g.getLayersByName(f);if(!(j.length>0)){return void o.warn('Layer not found ("'+f+'") when starting the selection to remove features.')}u=j[0];var i=new OpenLayers.Control.SelectFeature(u,{onSelect:v});g.addControl(i),i.activate(),n(g,"removeFeaturesControl",i)},stopRemoveSelectedFeature:function(d){var c=m(d,"removeFeaturesControl");null!=c&&(c.deactivate(),d.removeControl(c),n(d,"removeFeaturesControl",null))},removeFeature:function(f,e,h){var g=f.getLayersByName(e);g[0].removeFeatures(h)},startDrawingOnLayer:function(h,g,x){var w,v=h.getLayersByName(g||x.layerName);v.length>0?w=v[0]:(w=new OpenLayers.Layer.Vector(g||x.layerName),h.addLayer(w)),w.style={fillColor:x.fillColor||x.color,fillOpacity:x.fillOpacity||x.opacity,pointRadius:x.pointRadius||x.radius,strokeColor:x.strokeColor||x.color,strokeOpacity:x.strokeOpacity||x.opacity};var u=m(h,"drawingControl");if(!u){var j;if("point"===x.featureType.toLowerCase()?j=new OpenLayers.Control.DrawFeature(w,OpenLayers.Handler.Point):"line"===x.featureType.toLowerCase()||"linestring"===x.featureType.toLowerCase()?j=new OpenLayers.Control.DrawFeature(w,OpenLayers.Handler.Path):"box"===x.featureType.toLowerCase()?j=new OpenLayers.Control.DrawFeature(w,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4,irregular:!0}}):"polygon"===x.featureType.toLowerCase()&&(j=new OpenLayers.Control.DrawFeature(w,OpenLayers.Handler.Polygon)),"circle"===x.featureType.toLowerCase()){throw new Error("'startDrawingOnLayer' failed due to feature type 'Circle' is not a valid feature type for OpenLayers 2.")}n(h,"drawingControl",j),h.addControl(j),j.activate()}},stopDrawing:function(d){var c=m(d,"drawingControl");c&&(c.deactivate(),d.removeControl(c),n(d,"drawingControl",null))},drawLabel:function(D,C,B){var A,z=D.getLayersByName(C||B.layerName);z.length>0?A=z[0]:(A=new OpenLayers.Layer.Vector(C||B.layerName),D.addLayer(A));var y=new OpenLayers.Geometry.Point(B.lon,B.lat).transform(new OpenLayers.Projection(B.projection),D.getProjection()),x=new OpenLayers.Feature.Vector(y);A.style={label:B.text,fontColor:B.fontColor||B.color,fontSize:B.fontSize,align:B.align,labelSelect:!0},A.addFeatures([x]);var w=r.generateUuid();x.id=w;var v=new OpenLayers.Format.GeoJSON,u=v.write(x),c=angular.fromJson(u);return c.id=w,c},drawLabelWithPoint:function(D,C,B){var A,z=D.getLayersByName(C||B.layerName);z.length>0?A=z[0]:(A=new OpenLayers.Layer.Vector(C||B.layerName),D.addLayer(A));var y=new OpenLayers.Geometry.Point(B.lon,B.lat).transform(new OpenLayers.Projection(B.projection),D.getProjection()),x=new OpenLayers.Feature.Vector(y),w=r.generateUuid();x.id=w,A.style={label:B.text,pointRadius:B.pointRadius||"8",fontColor:B.fontColor||B.color||"#000000",fontSize:B.fontSize||"14px",align:B.align||"cm",labelYOffset:B.labelYOffset||15,labelSelect:!0,fillColor:B.pointColor||B.color||"#000000",strokeColor:B.pointColor||B.color||"#000000",fillOpacity:B.pointOpacity||B.fillOpacity||0.5,strokeOpacity:B.pointOpacity||B.strokeOpacity||1},A.addFeatures([x]);var v=new OpenLayers.Format.GeoJSON,u=v.write([x]),c=angular.fromJson(u);return c.features[0].id=w,c},getFeatureInfo:function(J,I,H,G,F,E,D){D=D||0;var C=p.defer(),B=event instanceof MouseEvent?E.xy:E,A=new OpenLayers.Pixel(B.x,B.y),z=A.add(-D,D),y=A.add(D,-D),x=J.getLonLatFromPixel(z),w=J.getLonLatFromPixel(y),v=new OpenLayers.Bounds(x.lon,x.lat,w.lon,w.lat),u=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:I,version:"1.1.0",srsName:J.projection,featureType:H,featurePrefix:G,geometryName:F,maxFeatures:100}),e=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:v});return u.read({filter:e,callback:function(a){if(a.success()){for(var j=new OpenLayers.Format.GeoJSON,i=j.write(a.features),h=angular.fromJson(i),g=0;g<h.features.length;g++){h.features[g].crs={type:"name",properties:{name:J.projection}}}C.resolve(h)}}}),C.promise},getFeatureInfoFromLayer:function(J,I,H,G,F){F=F||0;var E,D=event instanceof MouseEvent?G.xy:G,C=new OpenLayers.Pixel(D.x,D.y),B=C.add(-F,F),A=C.add(F,-F),z=J.getLonLatFromPixel(B),y=J.getLonLatFromPixel(A),x=new OpenLayers.Bounds(z.lon,z.lat,y.lon,y.lat),w=J.getLayersBy("id",H);if(!(w.length>0)){throw new Error("Invalid layer id")}E=w[0];var v=OpenLayers.Protocol.WFS.fromWMSLayer(E),u=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:x});v.read({filter:u,callback:function(j){if(j.success()){for(var i=new OpenLayers.Format.GeoJSON,h=i.write(j.features),b=angular.fromJson(h),a=0;a<b.features.length;a++){b.features[a].crs={type:"name",properties:{name:J.projection}}}I(b)}}})},createWfsClient:function(j,i,z,y,x,w,v){var u=new OpenLayers.Protocol.WFS({url:j,featureType:i,featurePrefix:z,version:y,geometryName:x,srsName:w});return u.isLonLatOrderValid=v,u},addWfsClient:function(d){k.wfsClientCache=k.wfsClientCache||[];var c=r.generateUuid();return k.wfsClientCache[c]=d,{clientId:c}},is3dSupported:function(){return !1},is3d:function(){return !1},switchTo3dView:function(){throw new Error("3D not supported in current map")},switchTo2dView:function(){},searchWfs:function(j,e,z,y){var x=k.wfsClientCache[e],w=p.defer(),v=function(f){if("200"!==f.priv.status||200===f.priv.status){return void w.resolve(null)}for(var E=0;E<f.features.length;E++){if(k.wfsClientCache[e].isLonLatOrderValid===!1){var D=f.features[E].geometry.x,C=f.features[E].geometry.y;f.features[E].geometry.x=C,f.features[E].geometry.y=D}}for(var B=new OpenLayers.Format.GeoJSON,A=B.write(f.features),g=angular.fromJson(A),b=0;b<g.features.length;b++){g.features[b].crs={type:"name",properties:{name:x.srsName}}}w.resolve(g)},u=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:y,matchCase:!1,value:z.toUpperCase()+"*"});return x.read({filter:u,callback:v}),w.promise},getMeasureFromEvent:function(g,f){var j,i=new OpenLayers.Format.GeoJSON({externalProjection:k.displayProjection,internalProjection:g.projection}),h=i.write(f.geometry);return j=angular.fromJson(h),{measurement:f.measure,units:f.units,geoJson:j}},wfsClientCache:{}};return k}]),function(){var e,d,f=angular.module("gawebtoolkit.mapservices.map.openlayersv3",["gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.controls.openlayersv3"]);f.service("olv3MapService",["olv3LayerService","olv3MapControls","GAWTUtils","GeoLayer","ga.config","$q","$log","$timeout",function(x,w,v,u,t,s,r,q){function p(h,g,j){var i=h.get("_geowebtoolkit")||{};i[g]=j,h.set("_geowebtoolkit",i)}function o(h,g){var j=null;if(h.get("_geowebtoolkit")){var i=h.get("_geowebtoolkit");j=i[g]}return j}function b(h,g){for(var l in g.postAddLayerCache){if(g.postAddLayerCache.hasOwnProperty(l)){for(var k=!1,j=0;j<h.getLayers().length;j++){var i=h.getLayers()[j];l===i.id&&(k=!0)}k||(g.postAddLayerCache[l]=null)}}}var a={initialiseMap:function(h){var g={},l={};if(null==h.datumProjection&&(r.warn("Datum projection has not been provided. Defaulting to EPSG:3857"),h.datumProjection="EPSG:3857"),null==h.displayProjection&&(r.warn("Display projection has not been provided. Defaulting to EPSG:4326"),h.displayProjection="EPSG:4326"),l.projection=ol.proj.get(h.datumProjection),h.centerPosition){var k=JSON.parse(h.centerPosition);l.center=ol.proj.transform([k[0],k[1]],h.displayProjection,h.datumProjection)}l.zoom=parseInt(h.zoomLevel),l.extent=l.projection.getExtent();var j=new ol.View(l);j.geoMaxZoom=28,j.geoMinZoom=0,g.target=h.mapElementId,g.renderer=null==t.olv3Options?"canvas":t.olv3Options.renderer||"canvas",g.view=j,h.isStaticMap&&(g.interactions=[]),g.controls=[],a.displayProjection=h.displayProjection;var i=new ol.Map(g);return window.setTimeout(function(){if(h.initialExtent){var m=[h.initialExtent[0][0],h.initialExtent[0][1],h.initialExtent[1][0],h.initialExtent[1][1]],n=ol.proj.transformExtent(m,h.displayProjection,h.datumProjection);i.getView().fitExtent(n,i.getSize())}},10),i},getParameterByName:function(h){h=h.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var g=new RegExp("[\\?&]"+h+"=([^&#]*)"),i=g.exec(document.URL);return null==i?"":decodeURIComponent(i[1].replace(/\+/g," "))},zoomToMaxExtent:function(c){c.getView().setZoom(18)},currentZoomLevel:function(c){return c.getView().getZoom()},addLayer:function(j,i){var y=i.geoMaxZoom||j.getView().geoMaxZoom,n=i.geoMinZoom||j.getView().geoMinZoom;if(y<j.getView().geoMaxZoom||n>j.getView().geoMinZoom){var m=j.getView(),l={projection:m.getProjection(),center:m.getCenter(),zoom:m.getZoom(),maxZoom:y,minZoom:n},k=new ol.View(l);j.setView(k)}return i.disableDefaultUI?void 0:null==i.then||"function"!=typeof i.then?(null!=i.geoLayerType&&-1!==i.geoLayerType.indexOf("Google")&&(j.zoomDuration=0),j.addLayer(i),a.postLayerAddAction(j,i),u.fromOpenLayersV3Layer(i)):void i.then(function(g){return j.addLayer(g),a.postLayerAddAction(j,i),u.fromOpenLayersV3Layer(i)})},postLayerAddAction:function(g,c){r.info("post layer add fired"),x.postAddLayerCache[c.id]&&x.postAddLayerCache[c.id]({map:g,layer:c}),b(g,x)},registerMapMouseMove:function(g,c){$(g.getViewport()).on("mousemove",c)},registerMapClick:function(g,c){null!=c&&g.on("click",c)},unRegisterMapClick:function(g,c){null!=c&&g.un("click",c)},registerMapMouseMoveEnd:function(g,c){$(g.getViewport()).on("mousemove",function(h,i){void 0!==a.mousemoveTimeout&&window.clearTimeout(a.mousemoveTimeout),a.mousemoveTimeout=window.setTimeout(function(){c(h,i)},100)})},registerMapEvent:function(h,g,i){h.on(g,i)},unRegisterMapEvent:function(h,g,i){h.un(g,i)},getCurrentMapExtent:function(i){var h=i.getView().calculateExtent(i.getSize());if(null==h){return null}var n=[],m=ol.proj.transform([h[0],h[3]],i.getView().getProjection(),a.displayProjection||"EPSG:4326"),l=ol.proj.transform([h[2],h[3]],i.getView().getProjection(),a.displayProjection||"EPSG:4326"),k=ol.proj.transform([h[0],h[1]],i.getView().getProjection(),a.displayProjection||"EPSG:4326"),j=ol.proj.transform([h[2],h[1]],i.getView().getProjection(),a.displayProjection||"EPSG:4326");return n.push(m),n.push(l),n.push(k),n.push(j),n},isControlActive:function(h,g,l){if("measureline"===l){return null!=a.measureEventDrawInteraction}for(var k=h.getControls(),j=0;j<k.getLength();j++){var i=k.item(j);if(i.get("id")===g){return !0}}return !1},addControl:function(D,C,B,A,z,y){C=C.toLowerCase();var n,m={};A&&(n=$("#"+A)[0]),"mouseposition"===C&&(B=B||{}),"overviewmap"===C&&null!=B&&null!=B.maximized&&(B.collapsed=!B.maximized);var j=w.createControl(C,B,n,y);return j.set("id",z||j.get("id")||v.generateUuid()),j.set("name",C||""),"overviewmap"===C?q(function(){D.addControl(j)},1000):D.addControl(j),m.id=j.get("id"),m},getControls:function(h){for(var g=[],k=h.getControls(),j=0;j<k.getLength();j++){var i=k.item(j);g.push({id:i.metadata.id||i.get("id"),name:i.metadata.type})}return g},getControlById:function(h,g){for(var l,k=h.getControls(),j=0;j<k.getLength();j++){var i=k.item(j);if(i.get("id")===g){l=i;break}}return l},activateControl:function(h,g){var j=a.isControlActive(h,g),i=a._getCachedControl(g);!j&&i&&(h.addControl(i),a._removeCachedControl(g))},_getCachedControl:function(h){a.cachedControls=a.cachedControls||[];for(var g=0;g<a.cachedControls.length;g++){var i=a.cachedControls[g];if(i.get("id")===h){return i}}return null},_removeCachedControl:function(h){a.cachedControls=a.cachedControls||[];for(var g=0;g<a.cachedControls.length;g++){var i=a.cachedControls[g];i.get("id")===h&&(a.cachedControls[g]=null)}return null},deactivateControl:function(h,g){var k=a.isControlActive(h,g),j=a._getCachedControl(g),i=a.getControlById(h,g);k&&!j&&(a.cachedControls.push(i),h.removeControl(i))},registerControlEvent:function(h,g,l,k){var j=h.getControls(),i=null;j.forEach(function(c){c.get("id")===g&&(i=c)}),null==i?("measurepartial"===l&&(a.initMeasureEventLayer(h),a.handleMeasurePartial(h,a.measureEventVectorLayer,a.measureEventDrawInteraction,k)),"measure"===l&&(a.initMeasureEventLayer(h),a.handleMeasure(h,a.measureEventVectorLayer,a.measureEventDrawInteraction,k))):i.on(l,k)},initMeasureEventLayer:function(c){a.measureEventVectorLayer&&c.removeLayer(a.measureEventVectorLayer),a.measureEventDrawInteraction&&c.removeInteraction(a.measureEventDrawInteraction),a.measureEventSource=a.measureEventSource||new ol.source.Vector,a.measureEventVectorLayer=a.measureEventVectorLayer||new ol.layer.Vector({source:a.measureEventSource,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})})}),a.measureEventVectorLayer.set("id",v.generateUuid()),a.measureEventDrawInteraction=a.measureEventDrawInteraction||new ol.interaction.Draw({source:a.measureEventSource,type:"LineString",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.7)"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"})})})}),c.addLayer(a.measureEventVectorLayer),c.addInteraction(a.measureEventDrawInteraction)},handleMeasurePartial:function(h,g,j,i){j.on("drawstart",function(k){var m=!1,l=k.feature;a.measurePointerMoveEvent=function(c){m=!!c.dragging},a.measureSingleClickTimeout=null,a.measurePointerUpEvent=function(c){a.measureSingleClickTimeout&&q.cancel(a.measureSingleClickTimeout),m||(a.measureSingleClickTimeout=q(function(){a.measureIsDrawEndComplete?a.measureIsDrawEndComplete=!1:(c.feature=l,i(c))},10))},a.measurePointerDownEvent=function(){var c=new Date(new Date+250);!m&&null!=a.measureSingleClickTimeout&&c<a.measureSingleClickTimeout&&(a.measureIsDoubleClick=!0),a.measureSingleClickTimeout=new Date},h.on("pointerup",a.measurePointerUpEvent),h.on("pointermove",a.measurePointerMoveEvent),h.on("pointerdown",a.measurePointerDownEvent),i(k)},a)},handleMeasure:function(h,g,j,i){a.measureIsDrawEndComplete=!1,j.on("drawend",function(c){h.un("pointerup",a.measurePointerUpEvent),h.un("pointermove",a.measurePointerMoveEvent),h.un("pointermove",a.measurePointerDownEvent),i(c),a.measureIsDrawEndComplete=!0},a)},unRegisterControlEvent:function(h,g,l,k){var j=h.getControls(),i=null;j.forEach(function(c){c.get("id")===g&&(i=c)}),null==i?("measure"===l&&a.measureEventDrawInteraction&&(h.removeInteraction(a.measureEventDrawInteraction),h.removeLayer(a.measureEventVectorLayer),a.measureEventVectorLayer=null,a.measureEventDrawInteraction=null,a.measureEventSource=null,h.un("pointerup",a.measurePointerUpEvent),h.un("pointermove",a.measurePointerMoveEvent),h.un("pointermove",a.measurePointerDownEvent)),"measurepartial"===l&&a.measureEventDrawInteraction&&(h.removeInteraction(a.measureEventDrawInteraction),h.removeLayer(a.measureEventVectorLayer),a.measureEventVectorLayer=null,a.measureEventDrawInteraction=null,a.measureEventSource=null,h.un("pointerup",a.measurePointerUpEvent),h.un("pointermove",a.measurePointerMoveEvent),h.un("pointermove",a.measurePointerDownEvent))):i.un(l,k)},getLayers:function(g){var c=[];return angular.forEach(g.getLayers(),function(h){c.push(u.fromOpenLayersV3Layer(h))}),c},_getLayersBy:function(h,g,k){var j=h.getLayers(),i=[];return j.forEach(function(c){var l=c.get(g);l&&-1!==l.indexOf(k)&&i.push(c)}),i},getLayersByName:function(g,c){if("string"!=typeof c&&"number"!=typeof c){throw new TypeError("Expected string or number")}return x.getLayersBy(g,"name",c)},setLayerVisibility:function(g,c,i){if("string"!=typeof i&&"boolean"!=typeof i){throw new TypeError('Invalid visibility value "'+i+'"')}var h=x.getLayerBy(g,"id",c);h.setVisible(i)},createBoundingBox:function(h,g){for(var l=[],k=0;k<g.length;k++){var j=g[k];l.push(new ol.geom.Point(j))}var i=new ol.geom.GeometryCollection(l);return i.getExtent()},createBounds:function(h,g,l){if(l){var k=h.getView(),j=ol.proj.transform([g[0][0],g[0][1]],k.getProjection(),l),i=ol.proj.transform([g[0][0],g[0][1]],k.getProjection(),l);return[j[0],j[1],i[0],i[1]]}return[g[0][0],g[0][1],g[1][0],g[1][1]]},zoomToExtent:function(){},zoomToLayer:function(g,c){var i=x.getLayerBy(g,"id",c);if(null==i){throw new ReferenceError('Layer not found - id: "'+c+'".')}var h=i.getExtent();null!=h&&g.getView().fitExtent(h,g.getSize())},zoomTo:function(g,c){if("object"==typeof c){throw new TypeError("Expected number")}g.getView().setZoom(c)},getMapElementId:function(c){return c.getTarget()},getProjection:function(c){return c.getView().getProjection().getCode()},getDisplayProjection:function(){return a.displayProjection||"ESPG:4326"},setBaseLayer:function(h,g){var i=a._getLayersBy(h,"isBaseLayer",!0);i.forEach(function(c){c.setVisible(c.get("id")===g?!0:!1)})},setCenter:function(h,g,l,k){var j=[l,g];if(null==k){h.getView().setCenter(j)}else{var i=ol.proj.transform(j,k,h.getView().getProjection());h.getView().setCenter(i)}},setInitialPositionAndZoom:function(g,c){if(""!==a.getParameterByName("zoom")&&null!=c.centerPosition){throw new Error("NotImplemented")}},isBaseLayer:function(h,g){var l=h.getLayers(),k=null,j=0,i=!1;return l.forEach(function(c){c.get("id")!==g||i||(k=j,i=!0),j++}),0===k},setOpacity:function(g,c,i){if("object"==typeof i){throw new TypeError("Expected number")}var h=x.getLayerBy(g,"id",c);h.setOpacity(i)},mapResized:function(g){g.updateSize();for(var c=0;c<g.getLayers().length;c++){g.getLayers()[c].redraw(!0)}},setMapMarker:function(G,F,E,D,C){var B=x.getLayerBy(G,"name",E),A=G.getCoordinateFromPixel([F.x,F.y]),z=new ol.Feature({geometry:new ol.geom.Point(A)}),y=v.generateUuid();z.setId(y);var n=new ol.style.Style({image:new ol.style.Icon({anchor:[0.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",opacity:C.opacity||1,src:D})});if(z.setStyle(n),null!=B){B.getSource().addFeature(z)}else{var c=new ol.source.Vector;c.addFeature(z),B=new ol.layer.Vector({source:c,format:new ol.format.GeoJSON}),B.set("name",E),G.addLayer(B)}return{id:y,groupName:E}},removeMapMarker:function(i,h){for(var n=0;n<i.getLayers().getLength();n++){var m=i.getLayers().item(n),l=m.getSource();if("function"==typeof l.getFeatures&&l.getFeatures().length>0){for(var k=0;k<l.getFeatures().length;k++){var j=l.getFeatures()[k];if(j.getId()===h){l.removeFeature(j);break}}break}}},getLonLatFromPixel:function(h,g,k,j){if(null==g){throw new ReferenceError("'x' value cannot be null or undefined")}if(null==k){throw new ReferenceError("'y' value cannot be null or undefined")}var i=h.getCoordinateFromPixel([g,k]);return j?i=ol.proj.transform(i,h.getView().getProjection(),j):a.displayProjection&&a.displayProjection!==h.getView().getProjection()&&(i=ol.proj.transform(i,h.getView().getProjection(),a.displayProjection)),{lon:i[0],lat:i[1]}},getPixelFromLonLat:function(h,g,k){if(null==g){throw new ReferenceError("'lon' value cannot be null or undefined")}if(null==k){throw new ReferenceError("'lat' value cannot be null or undefined")}var j=[g,k];a.displayProjection!==h.getView().getProjection().getCode()&&(j=ol.proj.transform(j,a.displayProjection,h.getView().getProjection()));var i=h.getPixelFromCoordinate(j);return null==i&&(h.renderSync(),i=h.getPixelFromCoordinate(j)),{x:i[0],y:i[1]}},getPointFromEvent:function(c){return{x:c.pixel[0],y:c.pixel[1]}},drawPolyLine:function(J,I,H,G){H||(H=v.generateUuid());var F,E=x._getLayersBy(J,"name",H),D=new ol.source.Vector,C=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})}),B=[I[0].lon,I[0].lat],A=[I[1].lon,I[1].lat],z=new ol.geom.LineString([B,A]),y=G||"EPSG:4326";z.transform(y,J.getView().getProjection());var c=new ol.Feature({geometry:z,name:H});if(c.setId(v.generateUuid()),E.length>0){if(F=E[0],!(F.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+H+"' corresponds to a layer with an invalid source. Layer source must support features.")}F.setStyle(C)}else{F=new ol.layer.Vector({source:D,style:C,format:new ol.format.GeoJSON}),F.set("name",H),J.addLayer(F)}F.getSource().addFeature(c)},startRemoveSelectedFeature:function(g,c){var j=x._getLayersBy(g,"name",c);if(!j||0===j.length){return void r.warn('Layer "'+c+"' not found. Remove selected layer interaction not added.")}var i=j[0],h=new ol.interaction.Select;h.on("select",function(l){var C=i.getSource();if(!(C.removeFeature instanceof Function)){throw new Error("No valid layer found with name - "+c+" - to remove selected features.")}if(l.selected instanceof Array){for(var B=0;B<l.selected.length;B++){for(var A=l.selected[B],z=0;z<C.getFeatures().length;z++){var y=C.getFeatures()[z];y.get("id")===A.get("id")&&C.removeFeature(y)}}}else{for(var n=0;n<C.getFeatures().length;n++){var m=C.getFeatures()[n];if(m.get("id")===l.selected.get("id")){C.removeFeature(m);break}}}h.getFeatures().clear()}),g.addInteraction(h),p(g,"removeFeaturesControl",h)},stopRemoveSelectedFeature:function(g){var c=o(g,"removeFeaturesControl");c&&(g.removeInteraction(c),p(g,"removeFeaturesControl",null))},removeFeature:function(g,c,i){var h=x.getLayersBy(g,"name",c);h.removeFeatures(i)},startDrawingOnLayer:function(F,E,D){var C=o(F,"removeFeaturesControl");C&&F.removeInteraction(C);var B;switch(D.featureType.toLowerCase()){case"point":B="Point";break;case"line":case"linestring":B="LineString";break;case"box":case"polygon":B="Polygon";break;case"circle":B="Circle"}var A,z=x._getLayersBy(F,"name",E||D.layerName),y=new ol.source.Vector,l=new ol.style.Style({fill:new ol.style.Fill({color:D.fillColor||D.color,radius:D.fillRadius||D.radius}),stroke:new ol.style.Stroke({color:D.strokeColor||D.color,width:D.strokeRadius||D.radius,opacity:D.strokeOpacity||D.opacity}),image:new ol.style.Circle({radius:D.circleRadius||D.radius,fill:new ol.style.Fill({color:D.circleColor||D.color})})});if(z.length>0){if(A=z[0],!(A.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+E||D.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}A.setStyle(l),y=A.getSource()}else{A=new ol.layer.Vector({source:y,style:l,format:new ol.format.GeoJSON}),A.set("name",E||D.layerName),F.addLayer(A)}var k=o(F,"featureDrawingInteraction");if(!k){var c=new ol.interaction.Draw({source:y,type:B,format:new ol.format.GeoJSON});c.on("drawend",function(g){g.feature&&g.feature.set("id",v.generateUuid())}),p(F,"featureDrawingInteraction",c),F.addInteraction(c)}},stopDrawing:function(g){var c=o(g,"featureDrawingInteraction");c&&(g.removeInteraction(c),p(g,"featureDrawingInteraction",null))},drawLabel:function(I,H,G){var F,E=x._getLayersBy(I,"name",H||G.layerName),D=new ol.source.Vector,C="cm"===G.align?"center":G.align||G.textAlign,B=new ol.style.Text({textAlign:C,textBaseline:G.baseline,font:(G.fontWeight||G.weight||"normal")+" "+(G.fontSize||G.size||"12px")+" "+(G.font||"sans-serif"),text:G.text,fill:new ol.style.Fill({color:G.fillColor||G.color,width:G.fillWdith||G.width||1}),stroke:new ol.style.Stroke({color:G.outlineColor||G.color,width:G.outlineWidth||G.width||1}),offsetX:G.offsetX||0,offsetY:G.offsetY||-1*G.labelYOffset||15,rotation:G.rotation}),A=new ol.style.Style({image:new ol.style.Circle({radius:G.circleRadius||G.radius,fill:new ol.style.Fill({color:G.fillColor||G.color||"#000000"}),stroke:new ol.style.Stroke({color:G.strokeColor||G.color||"#000000",width:G.strokeRadius||G.radius})}),text:B});if(E.length>0){if(F=E[0],!(F.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+H||G.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}}else{F=new ol.layer.Vector({source:D,style:A,format:new ol.format.GeoJSON}),F.set("name",H||G.layerName),I.addLayer(F)}var z=ol.proj.transform([G.lon,G.lat],G.projection||a.displayProjection,I.getView().getProjection()),y=new ol.geom.Point(z),n=new ol.Feature({geometry:y});n.setId(v.generateUuid()),n.setStyle(A),F.getSource().addFeature(n);var c=new ol.format.GeoJSON;return angular.fromJson(c.writeFeature(n))},drawLabelWithPoint:function(O,N,M){var L,K,J=x._getLayersBy(O,"name",N||M.layerName),I=new ol.source.Vector,H="cm"===M.align?"center":M.align||M.textAlign,G=new ol.style.Text({textAlign:H,textBaseline:M.baseline,font:(M.fontWeight||M.weight||"normal")+" "+(M.fontSize||M.size||"12px")+" "+(M.font||"sans-serif"),text:M.text,fill:new ol.style.Fill({color:M.fillColor||M.color,width:M.fillWdith||M.width||1}),stroke:new ol.style.Stroke({color:M.outlineColor||M.color,width:M.outlineWidth||M.width||1}),offsetX:M.offsetX||0,offsetY:M.offsetY||-1*M.labelYOffset||15,rotation:M.rotation}),F=M.fillColor||M.color||"#000000",E=M.fillOpacity||M.opacity||0.5;K=0===F.indexOf("#")?v.convertHexAndOpacityToRgbArray(F,E):M.fillColor||M.color;var D,C=M.fillColor||M.color||"#000000",B=M.strokeOpacity||M.opacity||1;D=0===C.indexOf("#")?v.convertHexAndOpacityToRgbArray(C,B):M.strokeColor||M.color;var A=new ol.style.Style({image:new ol.style.Circle({radius:M.pointRadius||M.radius||"2",fill:new ol.style.Fill({color:K}),stroke:new ol.style.Stroke({color:D,width:M.strokeRadius||M.radius})}),text:G});if(J.length>0){if(L=J[0],!(L.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+N||M.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}}else{L=new ol.layer.Vector({source:I,format:new ol.format.GeoJSON}),L.set("name",N||M.layerName),O.addLayer(L)}var z=ol.proj.transform([M.lon,M.lat],M.projection||a.displayProjection,O.getView().getProjection()),y=new ol.geom.Point(z),n=new ol.Feature({geometry:y});n.setId(v.generateUuid()),n.setStyle(A),L.getSource().addFeature(n);var c=new ol.format.GeoJSON;return angular.fromJson(c.writeFeatures([n]))},getFeatureInfo:function(L,K,J,I,H,G,F){if(null==OpenLayers){throw new Error("NotImplemented")}r.warn("getFeatureInfo not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server"),F=F||0;var E=s.defer(),D=G instanceof ol.MapBrowserPointerEvent?G.pixel:G,C=new OpenLayers.Pixel(D[0],D[1]),B=C.add(-F,F),A=C.add(F,-F),z=L.getCoordinateFromPixel([B.x,B.y]),y=L.getCoordinateFromPixel([A.x,A.y]),i=new OpenLayers.Bounds(z[0],z[1],y[0],y[1]),h=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:K,version:"1.1.0",srsName:L.getView().getProjection().getCode(),featureType:J,featurePrefix:I,geometryName:H,maxFeatures:100}),M=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:i});return h.read({filter:M,callback:function(g){if(g.success()){for(var m=new OpenLayers.Format.GeoJSON,l=m.write(g.features),k=angular.fromJson(l),j=0;j<k.features.length;j++){k.features[j].crs={type:"name",properties:{name:L.getView().getProjection().getCode()}}}E.resolve(k)}}}),E.promise},getFeatureInfoFromLayer:function(Q,P,O,N,M){if(null==OpenLayers){throw new Error("NotImplemented")}r.warn("getFeatureInfoFromLayer not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server"),M=M||0;var L,K=N instanceof ol.SelectEvent?N.pixel:N,J=new OpenLayers.Pixel(K.x,K.y),I=J.add(-M,M),H=J.add(M,-M),G=Q.getCoordinateFromPixel([I.x,I.y]),F=Q.getCoordinateFromPixel([H.x,H.y]),E=new OpenLayers.Bounds(G[0],G[1],F[0],F[1]),D=x._getLayersBy(Q,"id",O);if(!(D.length>0)){throw new Error("Invalid layer id")}L=D[0];var C,B,A=L.getSource().getParams().LAYERS,z=(OpenLayers.Util.isArray(A)?A[0]:A).split(":");z.length>1&&(B=z[0]),C=z.pop();var y={url:L.getSource().getUrls()[0],featureType:C,featurePrefix:B,srsName:L.projection&&L.projection.getCode()||L.map&&L.map.getProjectionObject().getCode(),version:"1.1.0"},i=new OpenLayers.Protocol.WFS(OpenLayers.Util.applyDefaults(null,y)),c=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:E});i.read({filter:c,callback:function(m){if(m.success()){for(var l=new OpenLayers.Format.GeoJSON,k=l.write(m.features),j=angular.fromJson(k),h=0;h<j.features.length;h++){j.features[h].crs={type:"name",properties:{name:Q.projection}}}P(j)}}})},createWfsClient:function(){throw new Error("NotImplemented")},addWfsClient:function(g){a.wfsClientCache=a.wfsClientCache||[];var c=v.generateUuid();return a.wfsClientCache[c]=g,{clientId:c}},is3dSupported:function(){return null!=window.olcs},is3d:function(){return null!=e?e.getEnabled():!1},switchTo3dView:function(g){if(e){e.setEnabled(!0)}else{e=new olcs.OLCesium({map:g,target:g.getTarget()});var i=e.getCesiumScene();if(null!=t.cesiumOptions&&t.cesiumOptions.includeCustomTerrainProvider){var h=new Cesium.CesiumTerrainProvider({url:t.cesiumOptions.customTerrainProviderUrl});i.terrainProvider=h}q(function(){a.syncMapControlsWithOl3Cesium(g,g.getTarget())}),e.setEnabled(!0)}},switchTo2dView:function(c){e&&(e.setEnabled(!1),a.syncMapControlsWithOl3(c,c.getTarget()))},syncMapControlsWithOl3Cesium:function(j,i){var h=j.getControls(),g=$("#"+i)[0];h.forEach(function(m){if(m instanceof ol.control.MousePosition&&g){var l=e.getCesiumScene(),k=l.globe.ellipsoid,c=new Cesium.ScreenSpaceEventHandler(l.canvas);c.setInputAction(function(y){var n=l.camera.pickEllipsoid(y.endPosition,k);if(n){var B=k.cartesianToCartographic(n),A=Cesium.Math.toDegrees(B.longitude),z=Cesium.Math.toDegrees(B.latitude);$(".ol-mouse-position")[0].innerText=m.getCoordinateFormat()([A,z])}},Cesium.ScreenSpaceEventType.MOUSE_MOVE),d=c}m instanceof ol.control.ScaleLine&&j.render()})},syncMapControlsWithOl3:function(){},searchWfs:function(){throw new Error("NotImplemented")},getMeasureFromEvent:function(B,A){if(null==A.feature&&null==A.geometry){throw new Error("Feature cannot be null in Measure event")}null!=A.geometry&&A.geometry instanceof Array&&2===A.geometry.length&&(A.feature=new ol.Feature(new ol.geom.Point(A.geometry))),null!=A.geometry&&A.geometry instanceof Array&&A.geometry.length>2&&(A.feature=new ol.Feature(new ol.geom.LineString(A.geometry)));var z=A.feature.clone(),y=z.getGeometry().transform(B.getView().getProjection(),a.displayProjection||"EPSG:4326"),n=new ol.format.GeoJSON,m=n.writeFeature(z),l=angular.fromJson(m),k=a.getGeometryLength(B,y),j="m";return k>1000&&(j="km",k/=1000),{measurement:k,units:j,geoJson:l.geometry}},getGeometryLength:function(i,h){for(var n=h.getCoordinates(),m=0,l=new ol.Sphere(6378137),k=0,j=n.length-1;j>k;++k){m+=l.haversineDistance(n[k],n[k+1])}return m},wfsClientCache:{}};return a}])}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.mapservices",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.map.openlayersv2","gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.map.openlayersv3","gawebtoolkit.mapservices.data.openlayersv2","gawebtoolkit.mapservices.data.openlayersv3"]);app.factory("GeoLayer",["GAWTUtils",function(d){var c=function(g,f,j,i,h){this.id=g,this.name=f,this.type=j,this.visibility=i,this.opacity=h};return c.fromOpenLayersV2Layer=function(b){var h,g=-1===b.id.indexOf("_ArcGISCache_");h=g?b.geoLayerType:"ArcGISCache";var f;return f="string"==typeof b.opacity?Number(b.opacity):b.opacity,new c(b.id,b.name,h,b.visibility,f)},c.fromOpenLayersV3Layer=function(f){var b,a=f.geoLayerType||f.get("geoLayerType");return b="string"==typeof f.get("opacity")?Number(f.get("opacity")):f.get("opacity"),f.get("id")||f.set("id",d.generateUuid()),new c(f.get("id"),f.get("name"),a,f.get("visible"),b)},c}]),function(){var b=angular.module("gawebtoolkit.ui.components.base-layer-selector",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("gaBaseLayerSelector",["$timeout",function(c){return{restrict:"E",templateUrl:"src/main/js/ui/components/base-layer-selector/base-layer-selector.html",replace:!0,scope:{layersData:"=",mapController:"=",controllerEmitEventName:"@"},controller:["$scope",function(e){var d=this;d.selectBaseLayer=function(a){e.selectedBaseLayerId=a},e.$emit(e.controllerEmitEventName,d)}],link:function(a){a.$watch("selectedBaseLayerId",function(e){null!=e&&a.mapController.setBaseLayer(e)}),a.$watch("layersData",function(e){if(e){for(var f=0;f<e.length;f++){a.layersData[f].visibility===!0&&d(a.layersData[f])}}});var d=function(e){c(function(){a.selectedBaseLayerId=e.id})}},transclude:!0}}])}(),function(){angular.module("gawebtoolkit.ui.components",["gawebtoolkit.ui.components.opacity-slider","gawebtoolkit.ui.components.layer-control","gawebtoolkit.ui.components.layers-drop-down","gawebtoolkit.ui.components.base-layer-selector","gawebtoolkit.ui.components.google-place-name-search","gawebtoolkit.ui.components.geo-place-name-search","gawebtoolkit.ui.components.layer-interaction-toggle","gawebtoolkit.ui.components.deprecated","gawebtoolkit.ui.components.measure-toggle"])}(),function(){var b=angular.module("gawebtoolkit.ui.components.deprecated",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("gaDialogToggle",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/dialog-toggle.html",transclude:!0,scope:{gaDialogController:"=",gaToggleClicked:"&"},link:function(c){c.toggleDialog=function(){var a=!c.gaDialogController.isClosed();a?c.gaDialogController.closeDialog():c.gaDialogController.openDialog(),c.gaToggleClicked({dialogController:c.gaDialogController})}}}}]),b.directive("gaStaticDialog",["$timeout","GAWTUtils",function(d,c){return{restrict:"AE",templateUrl:"src/main/js/ui/components/deprecated/static-dialog.html",scope:{controllerEmitEventName:"@",dialogConfig:"=",dialogWindowResize:"&",dialogClosed:"&",dialogOpened:"&"},controller:["$scope",function(e){$(window).bind("resize",function(){null!=e.dialogWindowResize&&(e.dialogConfig=angular.extend(e.dialogConfig,e.dialogWindowResize())),e.dialogConfig.autoOpen=!e.isClosed,$("#"+e.dialogId).dialog(e.dialogConfig)}),e.dialogId=c.generateUuid();var f=this;f.openDialog=function(){$("#"+e.dialogId).dialog("open"),e.isClosed=!1,e.dialogOpened()},f.closeDialog=function(){$("#"+e.dialogId).dialog("close"),e.isClosed=!0,e.dialogClosed()},f.isClosed=function(){return e.isClosed},e.$emit(e.controllerEmitEventName,f)}],link:function(a){a.$on("$destroy",function(){$("#"+a.dialogId).dialog("destroy").remove()});var e=a.$watch("dialogConfig",function(f){null!=f&&(a.dialogReady=!0,$("#"+a.dialogId).bind("dialogclose",function(){a.isClosed=!0,d(function(){a.$apply()}),a.dialogClosed()}),a.isClosed=!f.autoOpen,e())})},transclude:!0}}]),b.directive("gaLayersDialog",["GAWTUtils",function(c){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/layers-dialog.html",scope:{layersData:"=",dialogConfig:"=",mapController:"="},controller:["$scope",function(a){$(window).bind("resize",function(){a.dialogConfig.autoOpen=!a.isClosed,$("#"+a.dialogId).dialog(a.dialogConfig)}),a.dialogId=c.generateUuid(),a.isClosed=!a.dialogConfig.autoOpen;var d=this;d.openDialog=function(){$("#"+a.dialogId).dialog("open"),a.isClosed=!1},d.closeDialog=function(){$("#"+a.dialogId).dialog("close"),a.isClosed=!0},d.isClosed=function(){return a.isClosed},a.$emit("layersDialogReady",d)}],link:function(e,d,f){e.filterBaseLayers=function(a){var g=e.mapController.isBaseLayer(a.id);return !g},e.$on("$destroy",function(){$("#"+e.dialogId).dialog("destroy").remove()}),e.$watch(f.uiRefresh,function(){$("#"+e.dialogId).bind("dialogclose",function(){e.isClosed=!e.isClosed})})},transclude:!0}}]),b.directive("gaSearchWfs",["$q","$interpolate","$log",function(e,d,f){return{restrict:"EA",templateUrl:"src/main/js/ui/components/deprecated/search-wfs.html",scope:{resultTemplateUrl:"@",mapController:"=",searchEndPoints:"=",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",primaryWfsProperty:"@",searchIconUrl:"@",placeHolder:"@",activateKey:"@"},controller:["$scope",function(c){c.waitingForResponse=!1}],link:function(a,p,o){function n(g){return g.replace("'","").replace('"',"").replace("%","").replace("*","")}p.bind("keydown",function(g){g.keyCode==a.activateKey&&(a.searchButtonClicked(),a.$apply())});var m,l=[];if(a.limitResults=10,a.$watch("searchEndPoints",function(g){if(g){if(null==a.mapController){return}l=[];for(var j=0;j<a.searchEndPoints.length;j++){var i=a.mapController.createWfsClient(a.searchEndPoints[j].url,a.searchEndPoints[j].featureType,a.searchEndPoints[j].featurePrefix,a.searchEndPoints[j].version,a.searchEndPoints[j].geometryName,a.searchEndPoints[j].datumProjection,a.searchEndPoints[j].isLonLatOrderValid),h=a.mapController.addWfsClient(i);h.endPointId=a.searchEndPoints[j].id,l.push(h),m=a.searchEndPoints[j].featureAttributes}}}),null==o.searchEndPoints&&null!=a.mapController){var k=a.mapController.createWfsClient(a.url,a.featureType,a.featurePrefix,a.version,a.geometryName,a.datumProjection);l.push(a.mapController.addWfsClient(k))}var c=function(t){t=n(t),a.searchResults=[];var s=e.defer(),r=0,q=[];a.waitingForResponse=!0;for(var h=0;h<l.length;h++){var g=l[h];a.mapController.searchWfs(l[h].clientId,t,m).then(function(i){if(null==i){return f.error("Search server is unavailable."),void s.resolve([])}r++;for(var j=0;j<i.features.length;j++){i.features[j].endPointId=g.endPointId,q.push(i.features[j])}r===l.length&&(s.resolve(q),a.waitingForResponse=!1)})}return s.promise};a.getSearchResults=function(g){return null!=g&&g.length>=3?c(g).then(function(h){return a.onResults({data:h}),h.slice(0,10)}):[]},a.onSelected=function(g){a.onResultsSelected({item:g})},a.searchButtonClicked=function(){return"object"==typeof a.query&&null!=a.query.properties&&(a.query=a.query.properties[a.primaryWfsProperty]),null!=a.query?c(a.query).then(function(g){return a.onPerformSearch({data:g}),g}):void 0}},transclude:!0}}])}(),function(){var b=angular.module("gawebtoolkit.ui.components.geo-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("geoNamesPlaceSearch",["$http","$q","$timeout",function(e,d,f){return{restrict:"E",templateUrl:"src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html",scope:{mapController:"=",searchIconUrl:"@",geoNamesApiKey:"@",zoomLevel:"@",countryCode:"@",resultTemplateUrl:"@",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",activateKey:"@"},controller:["$scope",function(){}],link:function(g,c){c.find('input[type="text"]')[0];c.bind("keydown",function(h){if(h.keyCode==g.activateKey){if(g.typeAheadSelected){return}g.searchButtonClicked(),g.$apply()}});var a=function(k,j){"object"==typeof k&&(k=k.properties.name),g.searchResults=[];var i=d.defer();g.waitingForResponse=!0;var h="http://api.geonames.org/searchJSON?q="+encodeURIComponent(k).replace("%20","+")+"&maxRows="+j+"&country="+g.countryCode.toUpperCase()+"&username="+g.geoNamesApiKey;return e.get(h).success(function(m){g.waitingForResponse=!1;for(var l=[],o=0;o<m.geonames.length;o++){var n=m.geonames[o];l.push(g.convertGeoNameToGeoJson(n))}i.resolve(l)}),i.promise};g.getSearchResults=function(h){return null!=h&&h.length>=3?a(h,10).then(function(i){return g.searchInProgress?[]:(g.onResults({data:i}),i)}):[]},g.onSelected=function(h){g.typeAheadSelected=!0,f(function(){g.typeAheadSelected=!1},50),g.onResultsSelected({item:h})},g.searchButtonClicked=function(){return g.searchInProgress=!0,null!=g.query?a(g.query,50).then(function(h){return g.searchInProgress=!1,g.onPerformSearch({data:h}),h}):void 0},g.convertGeoNameToGeoJson=function(i){var h={type:"Feature",geometry:{type:"Point",coordinates:[i.lng,i.lat]},crs:{type:"name",properties:{name:"EPSG:4326"}}};h.properties={};for(var j in i){i.hasOwnProperty(j)&&(h.properties[j]=i[j])}return h}}}}])}(),function(){var b=angular.module("gawebtoolkit.ui.components.google-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("googlePlaceNameSearch",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/google-place-name-search/google-place-name-search.html",scope:{mapController:"=",searchIconUrl:"@",zoomLevel:"@",countryCode:"@"},controller:["$scope",function(){}],link:function(f,e){var h=e.find('input[type="text"]')[0],g=new google.maps.places.Autocomplete(h,{componentRestrictions:{country:f.countryCode}});google.maps.event.addListener(g,"place_changed",function(){var a=g.getPlace();a.geometry&&(f.mapController.zoomTo(f.zoomLevel),f.mapController.setCenter(a.geometry.location.k,a.geometry.location.A,"EPSG:4326"))})}}}])}(),function(){var b=angular.module("gawebtoolkit.ui.components.layer-control",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("gaLayerControl",["GAWTUtils",function(c){return{restrict:"E",templateUrl:"src/main/js/ui/components/layer-control/layer-control.html",scope:{layerData:"=",mapController:"=",onVisible:"&",onHidden:"&",onOpacityChange:"&",layerDisabled:"=",onStartLoading:"&",onFinishedLoading:"&"},controller:["$scope",function(a){a.elementId=c.generateUuid()}],compile:function(){return{post:function(e){var d=function(){e.onStartLoading({layerId:e.layerData.id})},f=function(){e.onFinishedLoading({layerId:e.layerData.id})};e.$watch("layerData",function(a){if(null!=a){if(e.layerData.visibility=e.layerData.visibility===!0||"true"===e.layerData.visibility,null==e.mapController){throw new Error("mapController is not available")}null!=e.layerData.id&&(e.mapController.registerLayerEvent(e.layerData.id,"loadstart",d),e.mapController.registerLayerEvent(e.layerData.id,"loadend",f))}})},pre:function(d){d.changeOpacity=function(a,e){d.onOpacityChange({layerId:a,opacity:e})},d.layerClicked=function(){d.layerData.visibility=!d.layerData.visibility,d.mapController.setLayerVisibility(d.layerData.id,d.layerData.visibility),d.layerData.visibility?d.onVisible({layerId:d.layerData.id}):d.onHidden({layerId:d.layerData.id})}}}},transclude:!0}}])}(),function(){var b=angular.module("gawebtoolkit.ui.components.layer-interaction-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("gaLayerInteractionToggle",[function(){return{restrict:"E",replace:"true",templateUrl:"src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html",transclude:!0,scope:{toggleIconSource:"@",controllerEmitEventName:"@",toggleOnCallback:"&",toggleOffCallback:"&",onLayerClickCallback:"&",mapController:"=",layerInteractionId:"="},controller:["$scope",function(d){var c=this;c.activate=function(){d.activate()},c.deactivate=function(){d.deactivate()},c.isToggleActive=function(){return d.isToggleOn},d.$emit(d.controllerEmitEventName,c)}],link:function(e,d){e.isToggleOn=!1,e.activate=function(){e.mapController.registerMapClick(f),d.removeClass("gaUiToggleOff"),d.addClass("gaUiToggleOn"),e.isToggleOn=!0,e.toggleOnCallback()},e.deactivate=function(){e.mapController.unRegisterMapClick(f),d.removeClass("gaUiToggleOn"),d.addClass("gaUiToggleOff"),e.isToggleOn=!1,e.toggleOffCallback()},e.toggleClicked=function(){e.isToggleOn=!e.isToggleOn,e.isToggleOn?e.activate():e.deactivate()};var f=function(a){var g=e.mapController.getPointFromEvent(a);e.onLayerClickCallback({point:g,interactionId:e.layerInteractionId})}}}}])}(),function(){var b=angular.module("gawebtoolkit.ui.components.layers-drop-down",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("gaLayersDropDown",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/layers-drop-down/layers-drop-down.html",replace:!1,scope:{layersData:"=",selectedModel:"=",controllerEmitEventName:"@",onSelectedLayerChanged:"&",onLayersInitialised:"&",layerGroupId:"@",includeNone:"@"},controller:["$scope",function(d){var c=this;d.selectLayer=function(){d.onSelectedLayerChanged({layerId:d.selectedModel,groupId:d.layerGroupId})},c.selectLayer=d.selectLayer,d.$emit(d.controllerEmitEventName,c)}],link:function(c){c.$watch("layersData",function(a){a&&!c.selectedModel&&(c.includeNone&&"$none$"!==c.layersData[0].id&&c.layersData.unshift({id:"$none$",name:"None"}),c.selectedModel=a[0].id,c.onLayersInitialised({layerId:c.selectedModel,groupId:c.layerGroupId}))})},transclude:!0}}])}(),function(){var b=angular.module("gawebtoolkit.ui.components.measure-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("gaMeasureToggle",[function(){return{restrict:"EA",templateUrl:"src/main/js/ui/components/measure-toggle/measure-toggle.html",scope:{resolveStyle:"&",toggleOnCallback:"&",toggleOffCallback:"&",onFinish:"&",onUpdate:"&",mapControlId:"@",controllerEmitEventName:"@",mapController:"="},controller:["$scope",function(d){var c=this;c.activate=function(){d.activate()},c.deactivate=function(){d.deactivate()},c.isToggleActive=function(){return d.mapController.isControlActive(d.mapControlId)},d.$emit(d.controllerEmitEventName,c)}],link:function(d,c){d.handleMeasurements=function(a){var e=d.mapController.getMeasureFromEvent(a);d.onFinish({event:e})},d.handlePartialMeasure=function(a){var e=d.mapController.getMeasureFromEvent(a);d.onUpdate({event:e})},d.activate=function(){d.mapController.activateControl(d.mapControlId),d.mapController.registerControlEvent(d.mapControlId,"measure",d.handleMeasurements),d.mapController.registerControlEvent(d.mapControlId,"measurepartial",d.handlePartialMeasure),c.removeClass("gaUiToggleOff"),c.addClass("gaUiToggleOn"),d.toggleOnCallback()},d.deactivate=function(){d.mapController.deactivateControl(d.mapControlId),d.mapController.unRegisterControlEvent(d.mapControlId,"measure",d.handleMeasurements),d.mapController.unRegisterControlEvent(d.mapControlId,"measurepartial",d.handlePartialMeasure),c.removeClass("gaUiToggleOn"),c.addClass("gaUiToggleOff"),d.toggleOffCallback()},d.handleToggle=function(){d.mapController.isControlActive(d.mapControlId,"measureline")?d.deactivate():d.activate()},d.$on("$destroy",function(){d.mapController.unRegisterControlEvent(d.mapControlId,"measure",d.handleMeasurements),d.mapController.unRegisterControlEvent(d.mapControlId,"measurepartial",d.handleMeasurements)})},transclude:!0,replace:"true"}}])}(),function(){var b=angular.module("gawebtoolkit.ui.components.opacity-slider",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);b.directive("gaLayerOpacitySlider",["$timeout",function(c){return{restrict:"E",templateUrl:"src/main/js/ui/components/opacity-slider/opacity-slider.html",replace:!0,scope:{layerId:"@",layerOpacity:"=",mapController:"=",layerDisabled:"=",titleText:"@",onOpacityChange:"&"},controller:["$scope",function(a){a.changeOpacitySlide=function(f,e){a.layerOpacity=e.value,c(function(){a.$apply(),a.onOpacityChange({layerId:a.layerId,opacity:a.layerOpacity})})},a.getSliderOptions=function(){return{min:0,max:1,range:!1,step:0.01,slide:a.changeOpacitySlide,value:a.layerOpacity,disabled:a.layerDisabled}}}],link:function(a,d){a.$watch("layerOpacity",function(e,f){e&&f!==e&&($(d).slider(a.getSliderOptions()),a.layerId&&a.mapController.setOpacity(a.layerId,e))}),c(function(){d.find(".ui-slider-handle").attr("title",a.titleText)})},transclude:!0}}])}();var angular=angular||{},console=console||{},$=$||{},google=google||{};angular.module("gawebtoolkit.ui",["gawebtoolkit.ui.directives","gawebtoolkit.ui.templates","gawebtoolkit.ui.components","ui.utils","gawebtoolkit.utils"]);var app=angular.module("gawebtoolkit.ui.directives",["gawebtoolkit.utils"]);app.directive("gaZoomToExtentButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{extentPoints:"=",mapController:"=",beforeZoom:"&"},link:function(b){b.zoomTo=function(){var a=b.mapController.createBounds(b.extentPoints);b.beforeZoom({points:a}),b.mapController.zoomToExtent(a)}},transclude:!0}}]),app.directive("gaZoomToCenterPositionAnchor",[function(){return{restrict:"E",template:'<a ng-click="zoomTo()"><div ng-transclude></div></a>',scope:{geoJsonCoord:"=",projection:"@",mapController:"=",zoomLevel:"@"},link:function(b){b.zoomTo=function(){b.mapController.setCenter(b.geoJsonCoord[1],b.geoJsonCoord[0],b.projection),b.mapController.zoomTo(b.zoomLevel)}},transclude:!0}}]),app.directive("gaZoomToLayerButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{layerId:"@",mapController:"=",beforeZoom:"&"},link:function(b){b.zoomTo=function(){b.mapController.zoomToLayer(b.layerId)}},transclude:!0}}]),app.directive("gaToggle",[function(){var b='<button type="button" ng-click="toggle()"><div ng-transclude></div></button>';return{restrict:"E",replace:"true",template:b,transclude:!0,scope:{gaToggleClicked:"&"},link:function(c){c.toggle=function(){c.gaToggleClicked()}}}}]),app.directive("fixIeSelect",function(){return{restrict:"A",controller:["$scope","$element","$timeout",function(e,d,f){e.$watch("options",function(){var b=$("<option>");d.css("width");d.css("width"),d.addClass("repaint").removeClass("repaint"),b.appendTo(d).remove(),f(function(){d.css("width","auto")}),b=null})}]}});angular.module("gawebtoolkit.ui.templates",[]).run(["$templateCache",function(a){a.put("src/main/js/ui/components/base-layer-selector/base-layer-selector.html",'<select title="Base layer selector" fix-ie-select ng-options="layer.id as layer.name for layer in layersData"\n        ng-model="selectedBaseLayerId"></select>\n');a.put("src/main/js/ui/components/deprecated/dialog-toggle.html",'<button type="button" ng-click="toggleDialog()"><div ng-transclude></div></button>');a.put("src/main/js/ui/components/deprecated/layers-dialog.html",'<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}">\n    <div ng-repeat="layer in layersData">\n        <ga-layer-control map-controller="mapController" layer-data="layer"></ga-layer-control>\n    </div>\n</div>\n');a.put("src/main/js/ui/components/deprecated/search-wfs.html",'<input type="text" class="search-box" ng-model="query"\n       ng-class="{typeAheadLoading:waitingForResponse}" placeholder="{{placeHolder}}"/>\n<input type="image" class="button search-button" ng-click="searchButtonClicked()"\n       accesskey="4" alt="Search using your entered search criteria"\n       title="Search using your entered search criteria"\n       src="{{searchIconUrl}}">');a.put("src/main/js/ui/components/deprecated/static-dialog.html",'<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}">\n    <div ng-transclude></div>\n</div>');a.put("src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html",'<input type="text" class="search-box" placeholder="Place name search" ng-model="query"\n       ng-class="{typeAheadLoading:waitingForResponse}"\n       typeahead="result as result.properties.name for result in getSearchResults($viewValue)"\n       typeahead-template-url="{{resultTemplateUrl}}"\n       typeahead-on-select="onSelected($item, $model, $label)"\n       typeahead-wait-ms="200" typeahead-editable="true"/>\n<input type="image" class="button search-button" accesskey="4"\n       ng-click="searchButtonClicked()"\n       alt="Search using your entered search criteria" title="Search using your entered search criteria"\n       src="{{searchIconUrl}}"/>');a.put("src/main/js/ui/components/google-place-name-search/google-place-name-search.html",'<input type="text" class="search-box" placeholder="{{placeHolder}}"/>\n<input type="image" class="button search-button" accesskey="4"\n       alt="Search using your entered search criteria" title="Search using your entered search criteria"\n       src="{{searchIconUrl}}"/>');a.put("src/main/js/ui/components/layer-control/layer-control.html",'<label for="{{elementId}}" class="checkbox" style="display:inline-block;width:65%">\n    <input id="{{elementId}}" type="checkbox" ng-model="layerData.visibility" ng-click="layerClicked()"\n           ng-disabled="layerDisabled"/>{{layerData.name}}\n</label>\n<div style="display:inline;width:30%" ng-transclude></div>\n<div ng-show="layerData.visibility" class="gaLayerControlSliderContainer">\n    <ga-layer-opacity-slider\n            map-controller="mapController"\n            layer-opacity="layerData.opacity"\n            layer-id="{{layerData.id}}"\n            layer-disabled="layerDisabled"\n            on-opacity-change="changeOpacity(layerId,opacity)"\n            title-text="Opacity control for layer - {{layerData.name}}">\n    </ga-layer-opacity-slider>\n</div>\n');a.put("src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html",'<button ng-click="toggleClicked()" class="gaUiToggleOff" type="button">\n    <div ng-transclude></div>\n</button>');a.put("src/main/js/ui/components/layers-drop-down/layers-drop-down.html",'<div>\n    <select fix-ie-select ng-model="selectedModel" ng-change="selectLayer()"\n            ng-options="dropDownLayer.id as dropDownLayer.name for dropDownLayer in layersData">\n    </select>\n</div>');a.put("src/main/js/ui/components/measure-toggle/measure-toggle.html",'<button type="button" ng-click="handleToggle()" class="gaUiToggleOff">\n    <span ng-transclude></span>\n</button>');a.put("src/main/js/ui/components/opacity-slider/opacity-slider.html",'<div ui-jq="slider" ui-options="getSliderOptions()"></div>')}]);(function(){var b=angular.module("gawebtoolkit.mapservices.data.openlayersv2",[]);var a=["$q","$http",function(d,f){function c(j,l,r,m){var q=j.projection;var h=j.getExtent();var w=h.toBBOX();var u=(event instanceof MouseEvent)?l.xy:l;var t=j.getSize().h/2;var o=j.getSize().w/2;var s=new OpenLayers.Geometry.Point(o,t);var k=j.getSize().w;var n=j.getSize().h;var g={x:u.x,y:u.y};var i;if(j.getSize().w>=2050){if(u.x>s.x){if(u.y>s.y){var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,s.y));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(j.getSize().w,j.getSize().h));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat);g.x=u.x-o;g.y=u.y-t}else{var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,0));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(j.getSize().w,j.getSize().h));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat);g.x=u.x-o}}else{if(u.y>s.y){var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,s.y));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,j.getSize().h));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat);g.y=u.y-t}else{var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,0));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,s.y));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat)}}w=i.toBBOX();n=Math.floor(t);k=Math.floor(o)}return OpenLayers.Util.extend({service:"WMS",version:r,request:"GetFeatureInfo",bbox:w,feature_count:100,height:n,width:k,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:m},(parseFloat(r)>=1.3)?{crs:q,i:parseInt(g.x),j:parseInt(g.y)}:{srs:q,x:parseInt(g.x),y:parseInt(g.y)})}function e(i){var g;var h;if(i&&typeof i==="string"&&i.indexOf("application/vnd.ogc.gml/3")===0){h="application/vnd.ogc.gml/3"}else{h=i}switch(h){case"application/vnd.ogc.gml":g=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":g=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":g=OpenLayers.Format.Text;break;case"application/json":g=OpenLayers.Format.GeoJSON;break;default:g=OpenLayers.Format.WMSGetFeatureInfo;break}return g}return{getLayersByWMSCapabilities:function(h){var g=d.defer();f.get(h+"?request=GetCapabilities").success(function(l,i,n,j){var m=new OpenLayers.Format.WMSCapabilities();var k=m.read(l).capability.layers;g.resolve(k)});return g.promise},getWMSFeatures:function(h,g,m,l,i,o){var j=o||"text/xml";var p=d.defer();var k=c(h,i,l,j);if(m.length!==0){k=OpenLayers.Util.extend({layers:m,query_layers:m},k)}OpenLayers.Util.applyDefaults(k,{});var n={url:g,params:OpenLayers.Util.upperCaseObject(k),callback:function(s){var t=new (e(j))();var r=t.read(s.responseText);var u=new OpenLayers.Format.GeoJSON();var q=angular.fromJson(u.write(r));p.resolve(q)},scope:this};OpenLayers.Request.GET(n);return p.promise},getWMSFeaturesByLayerId:function(k,h,m,u){var j=function(x){var i;if(x.params.STYLES){i=x.params.STYLES}else{if(OpenLayers.Util.isArray(x.params.LAYERS)){i=new Array(x.params.LAYERS.length)}else{i=x.params.LAYERS.toString().replace(/[^,]/g,"")}}return i};var w=d.defer();var r=[],v=[];var o=[k.getLayersBy("id",m)[0]];for(var n=0,q=o.length;n<q;n++){if(o[n].params.LAYERS!=null){r=r.concat(o[n].params.LAYERS);v=v.concat(j(o[n]))}}var g=o[0];var p=k.getProjection();var s=g.projection;if(s&&s.equals(k.getProjectionObject())){p=s.getCode()}var l=OpenLayers.Util.extend({service:"WMS",version:g.params.VERSION,request:"GetFeatureInfo",exceptions:g.params.EXCEPTIONS,bbox:k.getExtent().toBBOX(null,g.reverseAxisOrder()),feature_count:100,height:k.getSize().h,width:k.getSize().w,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:g.params.INFO_FORMAT||"text/xml"},(parseFloat(g.params.VERSION)>=1.3)?{crs:p,i:parseInt(u.x),j:parseInt(u.y)}:{srs:p,x:parseInt(u.x),y:parseInt(u.y)});if(r.length!==0){l=OpenLayers.Util.extend({layers:r,query_layers:r,styles:v},l)}OpenLayers.Util.applyDefaults(l,{});var t={url:h,params:OpenLayers.Util.upperCaseObject(l),callback:function(y){var z=new OpenLayers.Format.WMSGetFeatureInfo();var x=z.read(y.responseText);var A=new OpenLayers.Format.GeoJSON();var i=angular.fromJson(A.write(x));w.resolve(i)},scope:this};OpenLayers.Request.GET(t);return w.promise}}}];b.service("WMSDataService",a);b.service("olv2DataService",a)})();(function(){var b=angular.module("gawebtoolkit.mapservices.data.openlayersv3",[]);var a=["$q","$http",function(d,f){function c(o,j,i,n){var y=o.getView().getProjection().getCode();var k=o.getView().calculateExtent(o.getSize());var w=new OpenLayers.Bounds(k[0],k[1],k[2],k[3]);var g=w.toBBOX();var u=(j instanceof ol.MapBrowserPointerEvent)?j.pixel:j;var r=o.getSize()[1]/2;var l=o.getSize()[0]/2;var v=[l,r];var h=o.getSize()[0];var t=o.getSize()[1];var q={x:u[0],y:u[1]};var p;if(o.getSize()[0]>=2050){if(u[0]>v[0]){if(u[1]>v[1]){var s=o.getCoordinateFromPixel([v[0],v[1]]);var m=o.getCoordinateFromPixel([o.getSize()[0],o.getSize()[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1]);q.x=u[0]-l;q.y=u[1]-r}else{var s=o.getCoordinateFromPixel([v[0],0]);var m=o.getCoordinateFromPixel([o.getSize()[0],o.getSize()[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1]);q.x=u[0]-l}}else{if(u[1]>v[1]){var s=o.getCoordinateFromPixel([0,v[1]]);var m=o.getCoordinateFromPixel([v[0],o.getSize()[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1]);q.y=u[1]-r}else{var s=o.getCoordinateFromPixel([0,0]);var m=o.getCoordinateFromPixel([v[0],v[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1])}}g=p.toBBOX();t=Math.floor(r);h=Math.floor(l)}var x=OpenLayers.Util.extend({service:"WMS",version:i,request:"GetFeatureInfo",bbox:g,feature_count:100,height:t,width:h,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:n},(parseFloat(i)>=1.3)?{crs:y,i:parseInt(q.x),j:parseInt(q.y)}:{srs:y,x:parseInt(q.x),y:parseInt(q.y)});return x}function e(i){var g;var h;if(i&&typeof i==="string"&&i.indexOf("application/vnd.ogc.gml/3")===0){h="application/vnd.ogc.gml/3"}else{h=i}switch(h){case"application/vnd.ogc.gml":g=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":g=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":g=OpenLayers.Format.Text;break;case"application/json":g=OpenLayers.Format.GeoJSON;break;default:g=OpenLayers.Format.WMSGetFeatureInfo;break}return g}return{getLayersByWMSCapabilities:function(h){var g=d.defer();f.get(h+"?request=GetCapabilities").success(function(l,i,n,j){var m=new OpenLayers.Format.WMSCapabilities();var k=m.read(l).capability.layers;g.resolve(k)});return g.promise},getWMSFeatures:function(h,g,m,l,i,o){var j=o||"text/xml";var p=d.defer();var k=c(h,i,l,j);if(m.length!==0){k=OpenLayers.Util.extend({layers:m,query_layers:m},k)}OpenLayers.Util.applyDefaults(k,{});var n={url:g,params:OpenLayers.Util.upperCaseObject(k),callback:function(s){var t=new (e(j))();var r=t.read(s.responseText);var u=new OpenLayers.Format.GeoJSON();var q=angular.fromJson(u.write(r));p.resolve(q)},scope:this};OpenLayers.Request.GET(n);return p.promise},getWMSFeaturesByLayerId:function(k,h,m,t){var j=function(w){var i;if(w.getParams().STYLES){i=w.getParams().STYLES}else{if(OpenLayers.Util.isArray(w.getParams().LAYERS)){i=new Array(w.getParams().LAYERS.length)}else{i=w.getParams().LAYERS.toString().replace(/[^,]/g,"")}}return i};var v=d.defer();var r=[],u=[];var o=[k.getLayersBy("id",m)[0]];for(var n=0,q=o.length;n<q;n++){if(o[n].getParams().LAYERS!=null){r=r.concat(o[n].getParams().LAYERS);u=u.concat(j(o[n]))}}var g=o[0];var p=k.getView().getProjection().getCode();var l=OpenLayers.Util.extend({service:"WMS",version:g.getParams().VERSION,request:"GetFeatureInfo",bbox:k.getExtent().toBBOX(null),feature_count:100,height:k.getSize()[1],width:k.getSize()[0],format:OpenLayers.Format.WMSGetFeatureInfo,info_format:g.params.INFO_FORMAT||"text/xml"},(parseFloat(g.params.VERSION)>=1.3)?{crs:p,i:parseInt(t.x),j:parseInt(t.y)}:{srs:p,x:parseInt(t.x),y:parseInt(t.y)});if(r.length!==0){l=OpenLayers.Util.extend({layers:r,query_layers:r,styles:u},l)}OpenLayers.Util.applyDefaults(l,{});var s={url:h,params:OpenLayers.Util.upperCaseObject(l),callback:function(x){var y=new OpenLayers.Format.WMSGetFeatureInfo();var w=y.read(x.responseText);var z=new OpenLayers.Format.GeoJSON();var i=angular.fromJson(z.write(w));v.resolve(i)},scope:this};OpenLayers.Request.GET(s);return v.promise}}}];b.service("olv3DataService",a)})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var google=google||{};var app=angular.module("gawebtoolkit.mapservices.layer.openlayersv2",[]);app.service("olv2LayerService",["$log","$q","$timeout",function(d,b,c){var a={xyzTileCachePath:"/tile/${z}/${y}/${x}",createLayer:function(e){var f;switch(e.layerType.toLowerCase()){case"wms":f=a.createWMSLayer(e);break;case"xyztilecache":f=a.createXYZLayer(e);break;case"arcgiscache":f=a.createArcGISCacheLayer(e);break;case"vector":f=a.createFeatureLayer(e);break;case"googlestreet":case"googlehybrid":case"googlesatellite":case"googleterrain":f=a.createGoogleMapsLayer(e);break;case"markerlayer":f=a.createMarkerLayer(e);break;default:throw new Error("Invalid layerType used to create layer of name "+e.layerName+" - with layerType - "+e.layerType)}f.geoLayerType=e.layerType;return f},createGoogleLayer:function(f){if(f.layerType==null){throw new Error("'layerType' not specified for creating a Google Maps layer. Please specify a valid layer type, eg 'hybrid")}var g;switch(f.layerType.toLocaleLowerCase()){case"hybrid":g=google.maps.MapTypeId.HYBRID;break;case"satellite":g=google.maps.MapTypeId.SATELLITE;break;case"street":g=google.maps.MapTypeId.STREET;break;case"terrain":g=google.maps.MapTypeId.TERRAIN;break;default:g=google.maps.MapTypeId.HYBRID;break}var e={visibility:f.visibility===true||f.visibility==="true",type:g};return new OpenLayers.Layer.Google(f.layerType,e)},createBingLayer:function(f){var h;var g=f.layerName;switch(f.layerType.toLocaleLowerCase()){case"aerial":h="Aerial";g=g||"Bing Aerial";break;case"aerialwithlabels":h="AerialWithLabels";g=g||"Bing Aerial With Labels";break;case"birdseye":h="Birdseye";g=g||"Bing Birdseye";break;case"birdseyewithlabels":h="BirdseyeWithLabels";g=g||"Bing Birdseye With Labels";break;case"road":h="Road";g=g||"Bing Roads";break;default:h="Road";g=g||"Bing Roads";break}var e=new OpenLayers.Layer.Bing({key:f.bingApiKey,type:h,name:g,visibility:f.visibility===true||f.visibility==="true"});e.wrapDateLine=f.wrapDateLine||false;return e},createOsmLayer:function(f){var e=new OpenLayers.Layer.OSM(f.layerName||"OpenCycleMap");e.wrapDateLine=f.wrapDateLine||false;e.visibility=f.visibility===true||f.visibility==="true";return e},createFeatureLayer:function(e){var f;if(e.url==null){f=new OpenLayers.Layer.Vector(e.layerName)}else{a.postAddLayerCache=a.postAddLayerCache||[];f=new OpenLayers.Layer.Vector(e.layerName,{strategies:[new OpenLayers.Strategy.Fixed()],styleMap:new OpenLayers.StyleMap({"default":new OpenLayers.Style({pointRadius:"10",fillOpacity:0.6,fillColor:"#ffcc66",strokeColor:"#cc6633"}),select:{fillColor:"#8aeeef"}}),protocol:new OpenLayers.Protocol.WFS({url:e.url,featureType:e.wfsFeatureType,featurePrefix:e.wfsFeaturePrefix,version:e.wfsVersion,geometryName:e.wfsGeometryName,srsName:e.datumProjection}),visibility:e.visibility})}if(e.postAddLayer!=null){a.postAddLayerCache[f.id]=e.postAddLayer}return f},createMarkerLayer:function(e){return new OpenLayers.Layer.Markers(e.layerName)},createGoogleMapsLayer:function(f){var g;switch(f.layerType){case"GoogleStreet":g=google.maps.MapTypeId.STREET;break;case"GoogleHybrid":g=google.maps.MapTypeId.HYBRID;break;case"GoogleSatellite":g=google.maps.MapTypeId.SATELLITE;break;case"GoogleTerrain":g=google.maps.MapTypeId.TERRAIN;break}var e={wrapDateLine:f.wrapDateLine,transitionEffect:f.transitionEffect,visibility:f.visibility===true||f.visibility==="true",isBaseLayer:f.isBaseLayer===true||f.isBaseLayer==="true",tileSize:f.tileSize(f.tileType),sphericalMercator:f.sphericalMercator,centerPosition:f.centerPosition,attribution:f.layerAttribution,numZoomLevels:20,type:g,animationEnabled:true};return new OpenLayers.Layer.Google(f.layerName,e)},clearFeatureLayer:function(f,e){},createXYZLayer:function(e){var f={layerName:e.layerName,layerUrl:e.layerUrl,options:{wrapDateLine:e.wrapDateLine,transitionEffect:e.transitionEffect,visibility:e.visibility===true||e.visibility==="true",isBaseLayer:e.isBaseLayer===true||e.isBaseLayer==="true",tileSize:e.tileSize(e.tileType),sphericalMercator:e.sphericalMercator,centerPosition:e.centerPosition,attribution:e.layerAttribution,opacity:e.opacity}};if(f.options.isBaseLayer){if(e.resolutions){f.options.resolutions=e.resolutions}if(e.zoomOffset){f.options.zoomOffset=e.zoomOffset}}if(e.maxZoomLevel!=null){if(e.maxZoomLevel.length>0){f.options.numZoomLevels=parseInt(e.maxZoomLevel)}}return new OpenLayers.Layer.XYZ(f.layerName,f.layerUrl+a.xyzTileCachePath,f.options)},createWMSLayer:function(e){var f={layerName:e.layerName,layerUrl:e.layerUrl,layers:e.layers,wrapDateLine:e.wrapDateLine,visibility:e.visibility===true||e.visibility==="true",isBaseLayer:e.isBaseLayer===true||e.isBaseLayer==="true",transitionEffect:e.transitionEffect,tileSize:e.tileSize(e.tileType),sphericalMercator:e.sphericalMercator,tileType:e.tileType,projection:e.datumProjection,transparent:e.transparent,attribution:e.layerAttribution,opacity:e.opacity};if(e.maxZoomLevel!=null){if(e.maxZoomLevel.length>0){f.numZoomLevels=parseInt(e.maxZoomLevel)}}return new OpenLayers.Layer.WMS(f.layerName,f.layerUrl,{layers:f.layers,format:f.format,transparent:f.transparent},f)},createArcGISCacheLayer:function(g){var f=b.defer();var h=new OpenLayers.Protocol.Script();var e=c(function(){f.reject("LayerTimeout")},10000);h.createRequest(g.layerUrl,{f:"json",pretty:"true"},function(j){c.cancel(e);if(j.error!=null&&j.error.code!=null){f.reject("LayerError - "+j.error.code);return}var k={layerName:g.layerName,layerUrl:g.layerUrl,options:{transitionEffect:g.transitionEffect,visibility:g.visibility===true||g.visibility==="true",isBaseLayer:g.isBaseLayer===true||g.isBaseLayer==="true",tileSize:g.tileSize(),alwaysInRange:false,displayInLayerSwitcher:false,opacity:g.opacity,attribution:g.layerAttribution}};if(g.maxZoomLevel!=null){if(g.maxZoomLevel.length>0){k.options.numZoomLevels=parseInt(g.maxZoomLevel)}}if(j){k.options.layerInfo=j;if(k.options.numZoomLevels==null){k.options.numZoomLevels=j.tileInfo.lods.length+1}}var i=new OpenLayers.Layer.ArcGISCache(k.layerName,k.layerUrl,k.options);f.resolve(i)});return f.promise},defaultLayerOptions:function(f,e){var g=angular.extend(e.defaultOptions,f);g.centerPosition=a.parselatLong(g.centerPosition);return g},cleanupLayer:function(f,e){if(f.layers==null||f.layers.length===0){return}var g=a.getLayerById(f,e);if(g!=null){f.removeLayer(g)}},createFeature:function(g,f){var e;if(g.projection!==f.crs.properties.name){e=new OpenLayers.Format.GeoJSON({externalProjection:f.crs.properties.name,internalProjection:g.projection})}else{e=new OpenLayers.Format.GeoJSON()}return e.read(angular.toJson(f),f.type)},addFeatureToLayer:function(g,f,i){var h=a.getLayerById(g,f);if(i instanceof Array){h.addFeatures(i)}else{h.addFeatures([i])}var j=new OpenLayers.Format.GeoJSON();var e=angular.fromJson(j.write(i));e.id=i.id;return e},parselatLong:function(e){if(!e){return null}return angular.fromJson(e)},getLayerById:function(g,e){var f;for(var h=0;h<g.layers.length;h++){if(g.layers[h].id===e){f=g.layers[h];break}}return f},removeLayerByName:function(e,f){var g=e.getLayersByName(f);if(g.length>0){e.removeLayer(g[0])}},removeLayersByName:function(e,f){var h=e.getLayersByName(f);for(var g=0;g<h.length;g++){e.removeLayer(h[g])}},removeLayer:function(e,f){e.removeLayer(f)},removeLayerById:function(f,e){var g=f.getLayersBy("id",e)[0];f.removeLayer(g)},removeFeatureFromLayer:function(f,e,i){var h=f.getLayersBy("id",e)[0];var g=h.getFeatureById(i);h.removeFeatures(g)},registerFeatureSelected:function(f,e,l,i){var h=f.getLayersBy("id",e)[0];var j=h.geoLayerType;var g;if(j==="WMS"){g=OpenLayers.Protocol.WFS.fromWMSLayer(h)}var k=f.getControl("ctrlGetFeature");if(k){f.removeControl(k)}k=new OpenLayers.Control.GetFeature({protocol:g,box:true,hover:true,multipleKey:"shiftKey",toggleKey:"ctrlKey"});k.metadata=k.metadata||{};k.metadata.type="getfeature";k.events.register("featureselected",i,l);return{id:"ctrlGetFeature",name:"getfeature"}},registerLayerEvent:function(g,e,f,i){var h=g.getLayersBy("id",e)[0];h.events.register(f,h,i)},unRegisterLayerEvent:function(g,e,f,i){var h=g.getLayersBy("id",e)[0];h.events.unregister(f,h,i)},getMarkerCountForLayerName:function(e,f){var h=e.getLayersByName(f);var g=0;if(h.length>0){g=h[0].markers==null?0:h[0].markers.length}return g},filterFeatureLayer:function(f,g,m,n){var l=a.getLayerById(f,g);var k=a.parseFeatureAttributes(n);var h=[];for(var j=0;j<k.length;j++){h.push(new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:k[j],matchCase:false,value:m.toUpperCase()+"*"}))}var e=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:h});if(e.filters.length===1){l.filter=h[0];l.refresh({force:true})}else{l.filter=e;l.refresh({force:true})}},parseFeatureAttributes:function(e){if(!e){return null}var f=[];if(e.indexOf(",")===-1){f.push(e)}else{f=e.split(",")}return f},getLayerFeatures:function(f,e){var j=[];var h=a.getLayerById(f,e);for(var g=0;g<h.features.length;g++){j.push(h.features[g])}return j},raiseLayerDrawOrder:function(f,e,h){var g=a.getLayerById(f,e);f.raiseLayer(g,h)},postAddLayerCache:{}};return a}]);(function(){var a=angular.module("gawebtoolkit.mapservices.layer.openlayersv3",[]);a.service("olv3LayerService",["$log","$q","$timeout","GeoLayer","GAWTUtils",function(f,c,d,e,g){var b={xyzTileCachePath:"/tile/{z}/{y}/{x}",createLayer:function(h){var i;switch(h.layerType){case"WMS":i=b.createWMSLayer(h);break;case"XYZTileCache":i=b.createXYZLayer(h);break;case"ArcGISCache":i=b.createArcGISCacheLayer(h);break;case"Vector":i=b.createFeatureLayer(h);break;case"markerlayer":i=b.createMarkerLayer(h);break;case"GoogleStreet":case"GoogleHybrid":case"GoogleSatellite":case"GoogleTerrain":throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.");default:throw new Error("Invalid layerType used to create layer of name "+h.layerName+" - with layerType - "+h.layerType)}i.set("geoLayerType",h.layerType);if(h.maxZoomLevel){i.geoMaxZoom=parseInt(h.maxZoomLevel)}if(h.minZoomLevel){i.geoMinZoom=parseInt(h.minZoomLevel)}return i},createFeatureLayer:function(h){var i;if(h.url==null){i=new ol.layer.Vector({source:new ol.source.Vector(),format:new ol.format.GeoJSON()})}else{b.postAddLayerCache=b.postAddLayerCache||[];var j=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.6)"}),stroke:new ol.style.Stroke({color:"#319FD3",width:1}),text:new ol.style.Text({font:"12px Calibri,sans-serif",fill:new ol.style.Fill({color:"#000"}),stroke:new ol.style.Stroke({color:"#fff",width:3})})});i=new ol.layer.Vector({source:new ol.source.Vector({url:h.url,format:new ol.format.GeoJSON(),style:j})})}i.set("name",h.layerName);i.set("isBaseLayer",h.isBaseLayer||false);return i},createMarkerLayer:function(i){var h=new ol.layer.Vector({source:new ol.source.Vector(),format:new ol.format.GeoJSON()});h.set("name",i.layerName);return h},createGoogleLayer:function(h){throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.")},createBingLayer:function(h){var k;var j=h.layerName;switch(h.layerType.toLocaleLowerCase()){case"aerial":k="Aerial";j=j||"Bing Aerial";break;case"aerialwithlabels":k="AerialWithLabels";j=j||"Bing Aerial With Labels";break;case"birdseye":k="Birdseye";j=j||"Bing Birdseye";break;case"birdseyewithlabels":k="BirdseyeWithLabels";j=j||"Bing Birdseye With Labels";break;case"road":k="Road";j=j||"Bing Roads";break;default:k="Road";break}var i=new ol.layer.Tile({source:new ol.source.BingMaps({key:h.bingApiKey,imagerySet:k})});i.set("name",j);i.setVisible(h.visibility===true||h.visibility==="true");return i},createOsmLayer:function(h){var i=new ol.layer.Tile({source:new ol.source.OSM()});i.setVisible(h.visibility===true||h.visibility==="true");return i},clearFeatureLayer:function(i,h){},createXYZLayer:function(j){var i={url:j.layerUrl+b.xyzTileCachePath,crossOrigin:"*/*"};if(j.layerAttribution!=null){i.attributions=[new ol.Attribution({html:j.layerAttribution})]}var k={opacity:j.opacity,source:new ol.source.XYZ(i),visible:j.visibility===true||j.visibility==="true"};var h=new ol.layer.Tile(k);h.set("name",j.layerName);h.set("isBaseLayer",j.isBaseLayer||false);return h},createWMSLayer:function(j){var i={};i.url=j.layerUrl;i.crossOrigin="anonymous";i.params={LAYERS:j.layers,TILED:true};if(j.format){i.params.FORMAT=j.format}i.wrapX=true;if(j.wrapDateLine!=null){i.wrapX=j.wrapDateLine==="true"||j.wrapDateLine===true}i.serverType=("mapserver");if(j.layerAttribution!=null){i.attributions=[new ol.Attribution({html:j.layerAttribution})]}var l=new ol.source.TileWMS(i);var k={};k.source=l;k.visible=j.visibility==="true"||j.visibility===true;k.opacity=j.opacity;var h=new ol.layer.Tile(k);h.set("name",j.layerName);h.set("isBaseLayer",j.isBaseLayer||false);return h},createArcGISCacheLayer:function(j){var i={url:j.layerUrl+b.xyzTileCachePath,crossOrigin:"*/*"};var k={opacity:j.opacity,source:new ol.source.XYZ(i),visible:j.visibility===true||j.visibility==="true"};var h=new ol.layer.Tile(k);h.set("name",j.layerName);h.set("isBaseLayer",j.isBaseLayer||false);return h},defaultLayerOptions:function(i,h){var j=angular.extend(h.defaultOptions,i);j.centerPosition=b.parselatLong(j.centerPosition);return j},cleanupLayer:function(i,h){var j=b.getLayerBy(i,"id",h);if(j!=null){i.removeLayer(j)}},createFeature:function(j,i){var h;if(j.getView().getProjection()!==i.crs.properties.name){h=new ol.format.GeoJSON({defaultDataProjection:i.crs.properties.name})}else{h=new new ol.format.GeoJSON({defaultDataProjection:j.getView().getProjection()})}return h.readFeature(angular.toJson(i),{dataProjection:i.crs.properties.name,featureProjection:j.getView().getProjection()})},addFeatureToLayer:function(j,i,m){var l=b.getLayerById(j,i);var o=l.getSource();if(typeof o.getFeatures!=="function"){throw new Error("Layer does not have a valid source for features.")}var n=new ol.format.GeoJSON();var k;if(m instanceof Array){o.addFeatures(m);k=n.writeFeatures(m)}else{o.addFeature(m);k=n.writeFeature(m)}var h=angular.fromJson(k);m.id=m.getId()||g.generateUuid();h.id=m.id;return h},parselatLong:function(h){if(!h){return null}return angular.fromJson(h)},getLayerById:function(i,h){return b.getLayerBy(i,"id",h)},getLayerBy:function(j,i,h){var k=null;var l=false;j.getLayers().forEach(function(m){if(h===m.get(i)&&l===false){k=m;l=true}});return k},getLayerByName:function(h,i){return b.getLayerBy(h,"name",i)},getLayersBy:function(j,i,h){var l=j.getLayers();var k=[];l.forEach(function(n){var m=n.get(i);if(m&&m.indexOf(h)!==-1){k.push(e.fromOpenLayersV3Layer(n))}});return k},_getLayersBy:function(j,i,h){var l=j.getLayers();var k=[];l.forEach(function(n){var m=n.get(i);if(m&&m.indexOf(h)!==-1){k.push(n)}});return k},removeLayerByName:function(h,i){var j=b._getLayersBy(h,"name",i);if(j.length>0){h.removeLayer(j[0])}},removeLayersByName:function(h,j){var l=b._getLayersBy(h,"name",j);for(var k=0;k<l.length;k++){h.removeLayer(l[k])}},removeLayer:function(h,i){h.removeLayer(i)},removeLayerById:function(i,h){var j=b._getLayersBy(i,"id",h)[0];i.removeLayer(j)},removeFeatureFromLayer:function(j,h,o){var m=b.getLayerById(j,h);var n=m.getSource().getFeatures();for(var l=0;l<n.length;l++){var k=n[l];if(k.id===o){m.getSource().removeFeature(k);break}}},registerFeatureSelected:function(k,j,o,n){b.registeredInteractions=b.registeredInteractions||[];for(var m=0;m<b.registeredInteractions.length;m++){var h=b.registeredInteractions[m];if(h.id===""+j+"_features"){k.removeInteraction(h.select)}}var l=new ol.interaction.Select({condition:ol.events.condition.click});l.on("select",function(i){if(i.target.get("id")===j){o(i)}});b.registeredInteractions.push({id:j+"_features",select:l});k.addInteraction(l)},registerLayerEvent:function(j,h,i,l){var k=b.getLayerBy(j,"id",h);k.getSource().on(i,l)},unRegisterLayerEvent:function(j,h,i,l){var k=b.getLayerBy(j,"id",h);k.getSource().un(i,l)},getMarkerCountForLayerName:function(h,i){var j=b.getLayerBy(h,"name",i);return j==null?0:typeof j.getSource().getFeatures==="undefined"?0:j.getSource().getFeatures().length},filterFeatureLayer:function(i,h,j){throw new Error("NotImplementedError")},parseFeatureAttributes:function(h){if(!h){return null}var i=[];if(h.indexOf(",")===-1){i.push(h)}else{i=h.split(",")}return i},getLayerFeatures:function(j,h){var m=[];var l=b.getLayerById(j,h);var o=l.getSource();if(o.getFeatures==null){return m}var p=o.getFeatures();for(var k=0;k<p.length;k++){var n=p[k];m.push(n)}return m},raiseLayerDrawOrder:function(j,k,r){var m=b.getLayerById(j,k);var p=j.getLayers();var o;for(var l=0;l<p.getLength();l++){var n=p.item(l);if(n.get("id")===k){o=l;break}}var h=o+r;var q=j.getLayers().getArray()[h];j.getLayers().getArray()[h]=m;j.getLayers().getArray()[o]=q;j.updateSize()},postAddLayerCache:{}};return b}])})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var darwin=darwin||{};var app=angular.module("gawebtoolkit.mapservices.controls.openlayersv2",[]);app.service("olv2MapControls",[function(){var b=[{name:"permalink",constructor:OpenLayers.Control.Permalink},{name:"overviewmap",constructor:OpenLayers.Control.OverviewMap},{name:"scale",constructor:OpenLayers.Control.Scale},{name:"scaleline",constructor:OpenLayers.Control.ScaleLine},{name:"panzoombar",constructor:OpenLayers.Control.PanZoomBar},{name:"zoomslider",constructor:OpenLayers.Control.PanZoomBar},{name:"zoom",constructor:OpenLayers.Control.Zoom},{name:"mouseposition",constructor:OpenLayers.Control.MousePosition},{name:"attribution",constructor:OpenLayers.Control.Attribution},{name:"measureline",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Path]},{name:"measurepolygon",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Polygon]},{name:"wmsgetfeatureinfo",constructor:OpenLayers.Control.WMSGetFeatureInfo}];var a={resolveSupportedControl:function(d){var f;for(var e=0;e<b.length;e++){var c=b[e];if(c.name===d){f=c;break}}return f},createControl:function(c,g,f){var e;if(f&&!g.div){g.div=f}var d=a.resolveSupportedControl(c);if(d==null||d.constructor==null){throw new Error("Error in map control construction. Unsupported control or missing source for control constructor.")}if(d.customParams){if(g){e=new d.constructor(d.customParams[0],g)}else{e=new d.constructor(d.customParams[0])}}else{if(g){e=new d.constructor(g)}else{e=new d.constructor()}}return e},registerControl:function(c,d){b.push({name:c,constructor:d})}};return a}]);(function(){var a=angular.module("gawebtoolkit.mapservices.controls.openlayersv3",[]);a.service("olv3MapControls",[function(){var c=[{name:"overviewmap",constructor:ol.control.OverviewMap},{name:"scaleline",constructor:ol.control.ScaleLine},{name:"zoomslider",constructor:ol.control.ZoomSlider},{name:"panzoombar",constructor:ol.control.ZoomSlider},{name:"zoom",constructor:ol.control.Zoom},{name:"mouseposition",constructor:ol.control.MousePosition,resolveCustomParams:d},{name:"attribution",constructor:ol.control.Attribution}];function d(i,h){var e={};var g=function(j){return(function(k){if(k[0]>180){k[0]=k[0]-360}if(k[0]<-180){k[0]=k[0]+360}if(k[1]>90){k[1]=k[1]-180}if(k[1]<-90){k[1]=k[1]+180}return ol.coordinate.toStringXY(k,j)})};var f=function(j){return(function(k){if(k[0]>180){k[0]=k[0]-360}if(k[0]<-180){k[0]=k[0]+360}if(k[1]>90){k[1]=k[1]-180}if(k[1]<-90){k[1]=k[1]+180}return j({lon:k[0],lat:k[1]})})};if(i.formatOutput!=null){e.coordinateFormat=f(i.formatOutput)}else{e.coordinateFormat=i.coordinateFormat==null?g(4):i.coordinateFormat(4)}e.projection=i.projection||h.displayProjection;return e}var b={resolveSupportedControl:function(f){var h;for(var g=0;g<c.length;g++){var e=c[g];if(e.name===f){h=e;break}}return h},createControl:function(f,l,e,h){var j;if(e&&!l.div){l.element=e}var m=b.resolveSupportedControl(f);if(m==null||m.constructor==null){var n="Error in map control construction for '"+f+"'. Unsupported control or missing source for control constructor.";n+="\r\nSupported controls names are: ";for(var k=0;k<c.length;k++){var g=c[k];n+="\r\n"+g.name}throw new Error(n)}if(m.resolveCustomParams){l=angular.extend(l,angular.copy(m.resolveCustomParams(l,h)));j=new m.constructor(l)}else{if(m.customParams){l=angular.extend(l,angular.copy(m.customParams[0]));j=new m.constructor(l)}else{if(l){j=new m.constructor(l)}else{j=new m.constructor()}}}return j},registerControl:function(e,f){c.push({name:e,constructor:f})}};return b}]);if(ol!=null&&ol.control!=null&&ol.control.ZoomSlider!=null){ol.control.ZoomSlider.prototype.getPositionForResolution_=function(c){try{var d=this.getMap().getView().getValueForResolutionFunction();return 1-d(c)}catch(b){}}}})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.mapservices.map.openlayersv2",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.controls.openlayersv2"]);app.service("olv2MapService",["olv2LayerService","olv2MapControls","GAWTUtils","GeoLayer","$q","$log",function(e,i,h,b,f,j){function c(m,l,k){m._geowebtoolkit=m._geowebtoolkit||{};m._geowebtoolkit[l]=k}function a(m,l){var k=null;if(m._geowebtoolkit!=null){k=m._geowebtoolkit[l]}return k}var d={initialiseMap:function(l,m){var k={};if(l.displayProjection==null){l.displayProjection=m.defaultOptions.displayProjection}d.displayProjection=l.displayProjection;if(l.datumProjection==null){l.datumProjection=m.defaultOptions.projection}k.projection=l.datumProjection;k.numZoomLevels=m.defaultOptions.numZoomLevels;k.displayProjection=l.displayProjection;if((!l.isStaticMap)&&(k.controls===undefined||k.controls===null)){k.controls=[new OpenLayers.Control.Navigation()]}else{k.controls=[]}return new OpenLayers.Map(l.mapElementId,k)},getParameterByName:function(k){k=k.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var m=new RegExp("[\\?&]"+k+"=([^&#]*)"),l=m.exec(document.URL);return l==null?"":decodeURIComponent(l[1].replace(/\+/g," "))},zoomToMaxExtent:function(k){k.zoomToMaxExtent()},currentZoomLevel:function(k){return k.getZoom()},addLayer:function(k,l){if(l.then!=null&&typeof l.then==="function"){l.then(function(m){k.addLayer(m);d.postLayerAddAction(k,l);return b.fromOpenLayersV2Layer(l)})}else{if(l.geoLayerType!=null&&l.geoLayerType.indexOf("Google")!==-1){k.zoomDuration=0}k.addLayer(l);d.postLayerAddAction(k,l);return b.fromOpenLayersV2Layer(l)}},postLayerAddAction:function(k,l){j.info("post layer add fired");if(e.postAddLayerCache[l.id]){e.postAddLayerCache[l.id]({map:k,layer:l})}g(k,e)},registerMapMouseMove:function(k,l){k.events.register("mousemove",k,l)},registerMapClick:function(k,l){k.events.register("click",k,l)},unRegisterMapClick:function(k,l){k.events.unregister("click",k,l)},registerMapMouseMoveEnd:function(k,l){k.events.register("moveend",k,l)},registerMapEvent:function(l,k,m){l.events.register(k,l,m)},unRegisterMapEvent:function(l,k,m){l.events.unregister(k,l,m)},getCurrentMapExtent:function(l){var n=l.getExtent();if(n==null){return null}n=n.transform(l.projection,d.displayProjection);var k=[];var q=[n.left,n.top];var p=[n.right,n.top];var m=[n.left,n.bottom];var o=[n.right,n.bottom];k.push(q);k.push(p);k.push(m);k.push(o);return k},isControlActive:function(l,n,p){var o;for(var m=0;l.controls.length;m++){var k=l.controls[m];if(k.id===n){o=k;break}}return o.active===true},addControl:function(m,p,q,o,s,n){p=p.toLowerCase();var r={};var k;if(o){k=$("#"+o)[0]}if(p==="mouseposition"){q=q||{}}var l=i.createControl(p,q,k);l.id=s||l.id;m.addControl(l);r.id=l.id;return r},getControls:function(l){var k=[];var m=l.controls;for(var n=0;n<m.length;n++){var o=m[n];k.push({id:o.metadata.id||o.id,name:o.metadata.type})}return k},getControlById:function(l,o){var k;var m=l.controls;for(var n=0;n<m.length;n++){var p=m[n];if(p.id===o){k=p;break}}return k},activateControl:function(k,l){var m=d.getControlById(k,l);if(m==null){throw new Error('Control "'+l+'" not found. Failed to activate control')}m.activate()},deactivateControl:function(k,l){var m=d.getControlById(k,l);m.deactivate()},registerControlEvent:function(l,m,k,o){var n=d.getControlById(l,m);n.events.register(k,undefined,o)},unRegisterControlEvent:function(l,m,k,o){var n=d.getControlById(l,m);n.events.unregister(k,undefined,o)},getLayers:function(k){var l=[];angular.forEach(k.layers,function(m){l.push(b.fromOpenLayersV2Layer(m))});return l},getLayersByName:function(l,m){if(typeof m!=="string"&&typeof m!=="number"){throw new TypeError("Expected number")}var p=l.getLayersBy("name",m);var o=[];for(var n=0;n<p.length;n++){var k=p[n];o.push(b.fromOpenLayersV2Layer(k))}return o},setLayerVisibility:function(n,l,k){if(typeof k==="object"){throw new TypeError("Expected boolean")}var m=n.getLayersBy("id",l)[0];m.setVisibility(k)},createBoundingBox:function(k,m){var n=new OpenLayers.Bounds();for(var l=0;l<m.length;l++){n.extend(new OpenLayers.LonLat(m[l][0],m[l][1]))}return n.toBBOX()},createBounds:function(l,o,k){var p=new OpenLayers.Bounds();for(var n=0;n<o.length;n++){var m=new OpenLayers.LonLat(o[n][0],o[n][1]);m=m.transform(k,l.projection);p.extend(m)}return p},zoomToExtent:function(k,l){var m=d.createBounds(k,l,d.displayProjection);k.zoomToExtent(m,false)},zoomToLayer:function(l,k){var m=l.getLayersBy("id",k)[0];if(m==null){throw new ReferenceError('Layer not found - id: "'+k+'".')}var n=m.getExtent();l.zoomToExtent(n)},zoomTo:function(k,l){if(typeof l==="object"){throw new TypeError("Expected number")}k.zoomTo(l)},getMapElementId:function(k){if(typeof k.div==="object"){return $(k.div)[0].id}return k.div},getProjection:function(k){return k.projection},getDisplayProjection:function(k){return k.displayProjection||d.displayProjection||"EPSG:4326"},setBaseLayer:function(l,k){var m=l.getLayersBy("id",k)[0];l.setBaseLayer(m,false)},setCenter:function(m,o,p,k){var n=new OpenLayers.LonLat(p,o);if(k==null){m.setCenter(n)}else{var l=n.transform(new OpenLayers.Projection(k),new OpenLayers.Projection(m.getProjection()));m.setCenter(l)}},setInitialPositionAndZoom:function(o,t){if(d.getParameterByName("zoom")!==""&&t.centerPosition!=null){var u=new OpenLayers.LonLat(d.getParameterByName("lon"),d.getParameterByName("lat")).transform();var s=new OpenLayers.Projection(d.displayProjection);var v=new OpenLayers.Projection(o.getProjection());var l=u.transform(s,v);o.setCenter(l,d.getParameterByName("zoom"))}else{if(t.initialExtent!=null){var k=d.createBounds(o,t.initialExtent,d.displayProjection);o.zoomToExtent(k,true)}else{if(t.centerPosition){var q=JSON.parse(t.centerPosition);var n=new OpenLayers.LonLat(q[0],q[1]);var p=new OpenLayers.Projection(d.displayProjection);var r=new OpenLayers.Projection(o.getProjection());var m=n.transform(p,r);o.setCenter(m,t.zoomLevel)}else{o.zoomToMaxExtent()}}}},isBaseLayer:function(o,l){var k=false;var n;var m=o.layers.length;for(var p=0;p<m;p++){if(o.layers[p].id===l){n=o.layers[p];break}}if(n){if(n.id.indexOf("ArcGISCache")!==-1){k=n.options.isBaseLayer}else{k=n.isBaseLayer}}else{k=false}return k},setOpacity:function(l,k,m){if(typeof m==="object"){throw new TypeError("Expected number")}var n=l.getLayersBy("id",k)[0];n.setOpacity(m)},mapResized:function(k){k.updateSize();for(var l=0;l<k.layers.length;l++){k.layers[l].redraw(true)}},setMapMarker:function(m,u,r,k,s){var n=m.getLayersBy("name",r);var v=m.getLonLatFromPixel(u);var w=new OpenLayers.Size(s.width,s.height);var p=new OpenLayers.Pixel(-(w.w/2),-w.h);var t=new OpenLayers.Icon(k,w,p);var q=new OpenLayers.Marker(v,t.clone());q.map=m;var l=h.generateUuid();q.id=l;if(n!=null&&n.length>0&&typeof n[0].addMarker==="function"){n[0].addMarker(q)}else{var o=new OpenLayers.Layer.Markers(r);m.addLayer(o);o.addMarker(q)}return{id:l,groupName:r}},removeMapMarker:function(l,p){for(var o=0;o<l.layers.length;o++){var n=l.layers[o];if(n.markers!=null&&n.markers.length>0){for(var m=0;m<n.markers.length;m++){var k=n.markers[m];if(k.id===p){n.removeMarker(k);break}}break}}},getLonLatFromPixel:function(n,m,o,l){if(m==null){throw new ReferenceError("'x' value cannot be null or undefined")}if(o==null){throw new ReferenceError("'y' value cannot be null or undefined")}var k=n.getLonLatFromPixel({x:m,y:o});if(l){k=k.transform(n.projection,l)}else{if(d.displayProjection&&d.displayProjection!==n.projection){k=k.transform(n.projection,d.displayProjection)}}return k},getPixelFromLonLat:function(k,m,l){if(m==null){throw new ReferenceError("'lon' value cannot be null or undefined")}if(l==null){throw new ReferenceError("'lat' value cannot be null or undefined")}var n=new OpenLayers.LonLat(m,l);if(d.displayProjection&&d.displayProjection!==k.projection){n=n.transform(d.displayProjection,k.projection)}return k.getPixelFromLonLat(n)},getPointFromEvent:function(k){return{x:k.xy.x,y:k.xy.y}},drawPolyLine:function(l,s,n,r){var k=new OpenLayers.Geometry.Point(s[0].lon,s[0].lat);var q=new OpenLayers.Geometry.Point(s[1].lon,s[1].lat);var p=r||"EPSG:4326";var m=new OpenLayers.Layer.Vector(n);var t=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([q,k]).transform(new OpenLayers.Projection(p),l.getProjection()));var o=OpenLayers.Util.applyDefaults(o,OpenLayers.Feature.Vector.style["default"]);o.strokeWidth=4;t.style=o;m.addFeatures([t]);l.addLayer(m)},startRemoveSelectedFeature:function(m,n){var p=m.getLayersByName(n);var k;if(p.length>0){k=p[0]}else{j.warn('Layer not found ("'+n+'") when starting the selection to remove features.');return}function l(q){k.removeFeatures(q)}var o=new OpenLayers.Control.SelectFeature(k,{onSelect:l});m.addControl(o);o.activate();c(m,"removeFeaturesControl",o)},stopRemoveSelectedFeature:function(k){var l=a(k,"removeFeaturesControl");if(l!=null){l.deactivate();k.removeControl(l);c(k,"removeFeaturesControl",null)}},removeFeature:function(k,l,m){var n=k.getLayersByName(l);n[0].removeFeatures(m)},startDrawingOnLayer:function(l,n,m){var p=l.getLayersByName(n||m.layerName);var k;if(p.length>0){k=p[0]}else{k=new OpenLayers.Layer.Vector(n||m.layerName);l.addLayer(k)}k.style={fillColor:m.fillColor||m.color,fillOpacity:m.fillOpacity||m.opacity,pointRadius:m.pointRadius||m.radius,strokeColor:m.strokeColor||m.color,strokeOpacity:m.strokeOpacity||m.opacity};var o=a(l,"drawingControl");if(!o){var q;if(m.featureType.toLowerCase()==="point"){q=new OpenLayers.Control.DrawFeature(k,OpenLayers.Handler.Point)}else{if(m.featureType.toLowerCase()==="line"||m.featureType.toLowerCase()==="linestring"){q=new OpenLayers.Control.DrawFeature(k,OpenLayers.Handler.Path)}else{if(m.featureType.toLowerCase()==="box"){q=new OpenLayers.Control.DrawFeature(k,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4,irregular:true}})}else{if(m.featureType.toLowerCase()==="polygon"){q=new OpenLayers.Control.DrawFeature(k,OpenLayers.Handler.Polygon)}}}}if(m.featureType.toLowerCase()==="circle"){throw new Error("'startDrawingOnLayer' failed due to feature type 'Circle' is not a valid feature type for OpenLayers 2.")}c(l,"drawingControl",q);l.addControl(q);q.activate()}},stopDrawing:function(k){var l=a(k,"drawingControl");if(l){l.deactivate();k.removeControl(l);c(k,"drawingControl",null)}},drawLabel:function(l,p,q){var r=l.getLayersByName(p||q.layerName);var m;if(r.length>0){m=r[0]}else{m=new OpenLayers.Layer.Vector(p||q.layerName);l.addLayer(m)}var t=new OpenLayers.Geometry.Point(q.lon,q.lat).transform(new OpenLayers.Projection(q.projection),l.getProjection());var s=new OpenLayers.Feature.Vector(t);m.style={label:q.text,fontColor:q.fontColor||q.color,fontSize:q.fontSize,align:q.align,labelSelect:true};m.addFeatures([s]);var o=h.generateUuid();s.id=o;var n=new OpenLayers.Format.GeoJSON();var k=n.write(s);var u=angular.fromJson(k);u.id=o;return u},drawLabelWithPoint:function(l,p,q){var r=l.getLayersByName(p||q.layerName);var m;if(r.length>0){m=r[0]}else{m=new OpenLayers.Layer.Vector(p||q.layerName);l.addLayer(m)}var t=new OpenLayers.Geometry.Point(q.lon,q.lat).transform(new OpenLayers.Projection(q.projection),l.getProjection());var s=new OpenLayers.Feature.Vector(t);var n=h.generateUuid();s.id=n;m.style={label:q.text,pointRadius:q.pointRadius||"8",fontColor:q.fontColor||q.color||"#000000",fontSize:q.fontSize||"14px",align:q.align||"cm",labelYOffset:q.labelYOffset||15,labelSelect:true,fillColor:q.pointColor||q.color||"#000000",strokeColor:q.pointColor||q.color||"#000000",fillOpacity:q.pointOpacity||q.fillOpacity||0.5,strokeOpacity:q.pointOpacity||q.strokeOpacity||1};m.addFeatures([s]);var o=new OpenLayers.Format.GeoJSON();var k=o.write([s]);var u=angular.fromJson(k);u.features[0].id=n;return u},getFeatureInfo:function(o,l,u,t,q,r,v){v=v||0;var A=f.defer();var y=event instanceof MouseEvent?r.xy:r;var x=new OpenLayers.Pixel(y.x,y.y);var p=x.add(-v,v);var n=x.add(v,-v);var w=o.getLonLatFromPixel(p);var s=o.getLonLatFromPixel(n);var k=new OpenLayers.Bounds(w.lon,w.lat,s.lon,s.lat);var z=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:l,version:"1.1.0",srsName:o.projection,featureType:u,featurePrefix:t,geometryName:q,maxFeatures:100});var m=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:k});z.read({filter:m,callback:function(C){if(C.success()){var E=new OpenLayers.Format.GeoJSON();var B=E.write(C.features);var F=angular.fromJson(B);for(var D=0;D<F.features.length;D++){F.features[D].crs={type:"name",properties:{name:o.projection}}}A.resolve(F)}}});return A.promise},getFeatureInfoFromLayer:function(n,y,r,p,u){u=u||0;var x=event instanceof MouseEvent?p.xy:p;var w=new OpenLayers.Pixel(x.x,x.y);var o=w.add(-u,u);var m=w.add(u,-u);var v=n.getLonLatFromPixel(o);var q=n.getLonLatFromPixel(m);var k=new OpenLayers.Bounds(v.lon,v.lat,q.lon,q.lat);var s=n.getLayersBy("id",r);var t;if(s.length>0){t=s[0]}else{throw new Error("Invalid layer id")}var z=OpenLayers.Protocol.WFS.fromWMSLayer(t);var l=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:k});z.read({filter:l,callback:function(B){if(B.success()){var D=new OpenLayers.Format.GeoJSON();var A=D.write(B.features);var E=angular.fromJson(A);for(var C=0;C<E.features.length;C++){E.features[C].crs={type:"name",properties:{name:n.projection}}}y(E)}}})},createWfsClient:function(m,p,o,l,r,n,k){var q=new OpenLayers.Protocol.WFS({url:m,featureType:p,featurePrefix:o,version:l,geometryName:r,srsName:n});q.isLonLatOrderValid=k;return q},addWfsClient:function(l){d.wfsClientCache=d.wfsClientCache||[];var k=h.generateUuid();d.wfsClientCache[k]=l;return{clientId:k}},is3dSupported:function(l,k){return false},is3d:function(l,k){return false},switchTo3dView:function(l,k){throw new Error("3D not supported in current map")},switchTo2dView:function(l,k){},searchWfs:function(o,k,r,q){var m=d.wfsClientCache[k];var n=f.defer();var l=function(t){if(t.priv.status!=="200"||t.priv.status===200){n.resolve(null);return}for(var v=0;v<t.features.length;v++){if(d.wfsClientCache[k].isLonLatOrderValid===false){var x=t.features[v].geometry.x;var y=t.features[v].geometry.y;t.features[v].geometry.x=y;t.features[v].geometry.y=x}}var w=new OpenLayers.Format.GeoJSON();var s=w.write(t.features);var z=angular.fromJson(s);for(var u=0;u<z.features.length;u++){z.features[u].crs={type:"name",properties:{name:m.srsName}}}n.resolve(z)};var p=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:q,matchCase:false,value:r.toUpperCase()+"*"});m.read({filter:p,callback:l});return n.promise},getMeasureFromEvent:function(k,o){var m;var n=new OpenLayers.Format.GeoJSON({externalProjection:d.displayProjection,internalProjection:k.projection});var l=n.write(o.geometry);m=angular.fromJson(l);return{measurement:o.measure,units:o.units,geoJson:m}},wfsClientCache:{}};function g(l,p){for(var k in p.postAddLayerCache){if(p.postAddLayerCache.hasOwnProperty(k)){var m=false;for(var o=0;o<l.layers.length;o++){var n=l.layers[o];if(k===n.id){m=true}}if(!m){p.postAddLayerCache[k]=null}}}}return d}]);(function(){var c=angular.module("gawebtoolkit.mapservices.map.openlayersv3",["gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.controls.openlayersv3"]);var b;var a;c.service("olv3MapService",["olv3LayerService","olv3MapControls","GAWTUtils","GeoLayer","ga.config","$q","$log","$timeout",function(d,m,l,g,n,j,o,f){function h(s,r,q){var p=s.get("_geowebtoolkit")||{};p[r]=q;s.set("_geowebtoolkit",p)}function e(s,r){var p=null;if(s.get("_geowebtoolkit")){var q=s.get("_geowebtoolkit");p=q[r]}return p}var i={initialiseMap:function(t,v){var s={};var r={};if(t.datumProjection==null){o.warn("Datum projection has not been provided. Defaulting to EPSG:3857");t.datumProjection="EPSG:3857"}if(t.displayProjection==null){o.warn("Display projection has not been provided. Defaulting to EPSG:4326");t.displayProjection="EPSG:4326"}r.projection=ol.proj.get(t.datumProjection);if(t.centerPosition){var p=JSON.parse(t.centerPosition);r.center=ol.proj.transform([p[0],p[1]],t.displayProjection,t.datumProjection)}r.zoom=parseInt(t.zoomLevel);r.extent=r.projection.getExtent();var q=new ol.View(r);q.geoMaxZoom=28;q.geoMinZoom=0;s.target=t.mapElementId;s.renderer=n.olv3Options==null?"canvas":(n.olv3Options.renderer||"canvas");s.view=q;if(t.isStaticMap){s.interactions=[]}s.controls=[];i.displayProjection=t.displayProjection;var u=new ol.Map(s);window.setTimeout(function(){if(t.initialExtent){var w=[t.initialExtent[0][0],t.initialExtent[0][1],t.initialExtent[1][0],t.initialExtent[1][1]];var x=ol.proj.transformExtent(w,t.displayProjection,t.datumProjection);u.getView().fitExtent(x,u.getSize())}},10);return u},getParameterByName:function(p){p=p.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var r=new RegExp("[\\?&]"+p+"=([^&#]*)"),q=r.exec(document.URL);return q==null?"":decodeURIComponent(q[1].replace(/\+/g," "))},zoomToMaxExtent:function(p){p.getView().setZoom(18)},currentZoomLevel:function(p){return p.getView().getZoom()},addLayer:function(p,t){var u=t.geoMaxZoom||p.getView().geoMaxZoom;var r=t.geoMinZoom||p.getView().geoMinZoom;if(u<p.getView().geoMaxZoom||r>p.getView().geoMinZoom){var s=p.getView();var q={projection:s.getProjection(),center:s.getCenter(),zoom:s.getZoom(),maxZoom:u,minZoom:r};var v=new ol.View(q);p.setView(v)}if(t.disableDefaultUI){return}if(t.then!=null&&typeof t.then==="function"){t.then(function(w){p.addLayer(w);i.postLayerAddAction(p,t);return g.fromOpenLayersV3Layer(t)})}else{if(t.geoLayerType!=null&&t.geoLayerType.indexOf("Google")!==-1){p.zoomDuration=0}p.addLayer(t);i.postLayerAddAction(p,t);return g.fromOpenLayersV3Layer(t)}},postLayerAddAction:function(p,q){o.info("post layer add fired");if(d.postAddLayerCache[q.id]){d.postAddLayerCache[q.id]({map:p,layer:q})}k(p,d)},registerMapMouseMove:function(p,q){$(p.getViewport()).on("mousemove",q)},registerMapClick:function(p,q){if(q!=null){p.on("click",q)}},unRegisterMapClick:function(p,q){if(q!=null){p.un("click",q)}},registerMapMouseMoveEnd:function(p,q){$(p.getViewport()).on("mousemove",function(s,r){if(i.mousemoveTimeout!==undefined){window.clearTimeout(i.mousemoveTimeout)}i.mousemoveTimeout=window.setTimeout(function(){q(s,r)},100)})},registerMapEvent:function(q,p,r){q.on(p,r)},unRegisterMapEvent:function(q,p,r){q.un(p,r)},getCurrentMapExtent:function(q){var v=q.getView().calculateExtent(q.getSize());if(v==null){return null}var p=[];var u=ol.proj.transform([v[0],v[3]],q.getView().getProjection(),i.displayProjection||"EPSG:4326");var t=ol.proj.transform([v[2],v[3]],q.getView().getProjection(),i.displayProjection||"EPSG:4326");var r=ol.proj.transform([v[0],v[1]],q.getView().getProjection(),i.displayProjection||"EPSG:4326");var s=ol.proj.transform([v[2],v[1]],q.getView().getProjection(),i.displayProjection||"EPSG:4326");p.push(u);p.push(t);p.push(r);p.push(s);return p},isControlActive:function(q,s,u){if(u==="measureline"){return i.measureEventDrawInteraction!=null}var p=q.getControls();for(var r=0;r<p.getLength();r++){var t=p.item(r);if(t.get("id")===s){return true}}return false},addControl:function(r,u,v,t,x,s){u=u.toLowerCase();var w={};var p;if(t){p=$("#"+t)[0]}if(u==="mouseposition"){v=v||{}}if(u==="overviewmap"&&v!=null&&v.maximized!=null){v.collapsed=!v.maximized}var q=m.createControl(u,v,p,s);q.set("id",x||q.get("id")||l.generateUuid());q.set("name",u||"");if(u==="overviewmap"){f(function(){r.addControl(q)},1000)}else{r.addControl(q)}w.id=q.get("id");return w},getControls:function(q){var p=[];var r=q.getControls();for(var s=0;s<r.getLength();s++){var t=r.item(s);p.push({id:t.metadata.id||t.get("id"),name:t.metadata.type})}return p},getControlById:function(r,t){var p;var q=r.getControls();for(var s=0;s<q.getLength();s++){var u=q.item(s);if(u.get("id")===t){p=u;break}}return p},activateControl:function(p,s){var r=i.isControlActive(p,s);var q=i._getCachedControl(s);if(!r&&q){p.addControl(q);i._removeCachedControl(s)}},_getCachedControl:function(r){i.cachedControls=i.cachedControls||[];for(var q=0;q<i.cachedControls.length;q++){var p=i.cachedControls[q];if(p.get("id")===r){return p}}return null},_removeCachedControl:function(r){i.cachedControls=i.cachedControls||[];for(var q=0;q<i.cachedControls.length;q++){var p=i.cachedControls[q];if(p.get("id")===r){i.cachedControls[q]=null}}return null},deactivateControl:function(p,t){var r=i.isControlActive(p,t);var q=i._getCachedControl(t);var s=i.getControlById(p,t);if(r&&!q){i.cachedControls.push(s);p.removeControl(s)}},registerControlEvent:function(s,t,r,u){var q=s.getControls();var p=null;q.forEach(function(v){if(v.get("id")===t){p=v}});if(p==null){if(r==="measurepartial"){i.initMeasureEventLayer(s);i.handleMeasurePartial(s,i.measureEventVectorLayer,i.measureEventDrawInteraction,u)}if(r==="measure"){i.initMeasureEventLayer(s);i.handleMeasure(s,i.measureEventVectorLayer,i.measureEventDrawInteraction,u)}}else{p.on(r,u)}},initMeasureEventLayer:function(p){if(i.measureEventVectorLayer){p.removeLayer(i.measureEventVectorLayer)}if(i.measureEventDrawInteraction){p.removeInteraction(i.measureEventDrawInteraction)}i.measureEventSource=i.measureEventSource||new ol.source.Vector();i.measureEventVectorLayer=i.measureEventVectorLayer||new ol.layer.Vector({source:i.measureEventSource,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})})});i.measureEventVectorLayer.set("id",l.generateUuid());i.measureEventDrawInteraction=i.measureEventDrawInteraction||new ol.interaction.Draw({source:i.measureEventSource,type:"LineString",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.7)"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"})})})});p.addLayer(i.measureEventVectorLayer);p.addInteraction(i.measureEventDrawInteraction)},handleMeasurePartial:function(p,q,r,s){r.on("drawstart",function(u){var t=false;var v=u.feature;i.measurePointerMoveEvent=function(w){t=!!w.dragging};i.measureSingleClickTimeout=null;i.measurePointerUpEvent=function(w){if(i.measureSingleClickTimeout){f.cancel(i.measureSingleClickTimeout)}if(!t){i.measureSingleClickTimeout=f(function(){if(!i.measureIsDrawEndComplete){w.feature=v;s(w)}else{i.measureIsDrawEndComplete=false}},10)}};i.measurePointerDownEvent=function(x){var w=new Date(new Date()+250);if(!t&&i.measureSingleClickTimeout!=null&&w<i.measureSingleClickTimeout){i.measureIsDoubleClick=true}i.measureSingleClickTimeout=new Date()};p.on("pointerup",i.measurePointerUpEvent);p.on("pointermove",i.measurePointerMoveEvent);p.on("pointerdown",i.measurePointerDownEvent);s(u)},i)},handleMeasure:function(p,q,r,s){i.measureIsDrawEndComplete=false;r.on("drawend",function(t){p.un("pointerup",i.measurePointerUpEvent);p.un("pointermove",i.measurePointerMoveEvent);p.un("pointermove",i.measurePointerDownEvent);s(t);i.measureIsDrawEndComplete=true},i)},unRegisterControlEvent:function(s,t,r,u){var q=s.getControls();var p=null;q.forEach(function(v){if(v.get("id")===t){p=v}});if(p==null){if(r==="measure"&&i.measureEventDrawInteraction){s.removeInteraction(i.measureEventDrawInteraction);s.removeLayer(i.measureEventVectorLayer);i.measureEventVectorLayer=null;i.measureEventDrawInteraction=null;i.measureEventSource=null;s.un("pointerup",i.measurePointerUpEvent);s.un("pointermove",i.measurePointerMoveEvent);s.un("pointermove",i.measurePointerDownEvent)}if(r==="measurepartial"&&i.measureEventDrawInteraction){s.removeInteraction(i.measureEventDrawInteraction);s.removeLayer(i.measureEventVectorLayer);i.measureEventVectorLayer=null;i.measureEventDrawInteraction=null;i.measureEventSource=null;s.un("pointerup",i.measurePointerUpEvent);s.un("pointermove",i.measurePointerMoveEvent);s.un("pointermove",i.measurePointerDownEvent)}}else{p.un(r,u)}},getLayers:function(p){var q=[];angular.forEach(p.getLayers(),function(r){q.push(g.fromOpenLayersV3Layer(r))});return q},_getLayersBy:function(r,q,p){var t=r.getLayers();var s=[];t.forEach(function(v){var u=v.get(q);if(u&&u.indexOf(p)!==-1){s.push(v)}});return s},getLayersByName:function(p,q){if(typeof q!=="string"&&typeof q!=="number"){throw new TypeError("Expected string or number")}return d.getLayersBy(p,"name",q)},setLayerVisibility:function(r,q,p){if(typeof p!=="string"&&typeof p!=="boolean"){throw new TypeError('Invalid visibility value "'+p+'"')}var s=d.getLayerBy(r,"id",q);s.setVisible(p)},createBoundingBox:function(p,s){var t=[];for(var r=0;r<s.length;r++){var u=s[r];t.push(new ol.geom.Point(u))}var q=new ol.geom.GeometryCollection(t);return q.getExtent()},createBounds:function(r,t,p){if(p){var q=r.getView();var u=ol.proj.transform([t[0][0],t[0][1]],q.getProjection(),p);var s=ol.proj.transform([t[0][0],t[0][1]],q.getProjection(),p);return[u[0],u[1],s[0],s[1]]}return[t[0][0],t[0][1],t[1][0],t[1][1]]},zoomToExtent:function(p,q){},zoomToLayer:function(q,p){var r=d.getLayerBy(q,"id",p);if(r==null){throw new ReferenceError('Layer not found - id: "'+p+'".')}var s=r.getExtent();if(s==null){return}q.getView().fitExtent(s,q.getSize())},zoomTo:function(p,q){if(typeof q==="object"){throw new TypeError("Expected number")}p.getView().setZoom(q)},getMapElementId:function(p){return p.getTarget()},getProjection:function(p){return p.getView().getProjection().getCode()},getDisplayProjection:function(p){return i.displayProjection||"ESPG:4326"},setBaseLayer:function(q,p){var r=i._getLayersBy(q,"isBaseLayer",true);r.forEach(function(s){if(s.get("id")===p){s.setVisible(true)}else{s.setVisible(false)}})},setCenter:function(s,t,u,q){var p=[u,t];if(q==null){s.getView().setCenter(p)}else{var r=ol.proj.transform(p,q,s.getView().getProjection());s.getView().setCenter(r)}},setInitialPositionAndZoom:function(p,q){if(i.getParameterByName("zoom")!==""&&q.centerPosition!=null){throw new Error("NotImplemented")}},isBaseLayer:function(r,q){var u=r.getLayers();var p=null;var s=0;var t=false;u.forEach(function(v){if(v.get("id")===q&&!t){p=s;t=true}s++});return p===0},setOpacity:function(q,p,r){if(typeof r==="object"){throw new TypeError("Expected number")}var s=d.getLayerBy(q,"id",p);s.setOpacity(r)},mapResized:function(p){p.updateSize();for(var q=0;q<p.getLayers().length;q++){p.getLayers()[q].redraw(true)}},setMapMarker:function(t,z,u,q,y){var x=d.getLayerBy(t,"name",u);var w=t.getCoordinateFromPixel([z.x,z.y]);var s=new ol.Feature({geometry:new ol.geom.Point(w)});var r=l.generateUuid();s.setId(r);var v=new ol.style.Style({image:new ol.style.Icon(({anchor:[0.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",opacity:y.opacity||1,src:q}))});s.setStyle(v);if(x!=null){x.getSource().addFeature(s)}else{var p=new ol.source.Vector();p.addFeature(s);x=new ol.layer.Vector({source:p,format:new ol.format.GeoJSON()});x.set("name",u);t.addLayer(x)}return{id:r,groupName:u}},removeMapMarker:function(q,u){for(var t=0;t<q.getLayers().getLength();t++){var s=q.getLayers().item(t);var v=s.getSource();if(typeof v.getFeatures==="function"&&v.getFeatures().length>0){for(var r=0;r<v.getFeatures().length;r++){var p=v.getFeatures()[r];if(p.getId()===u){v.removeFeature(p);break}}break}}},getLonLatFromPixel:function(s,r,t,q){if(r==null){throw new ReferenceError("'x' value cannot be null or undefined")}if(t==null){throw new ReferenceError("'y' value cannot be null or undefined")}var p=s.getCoordinateFromPixel([r,t]);if(q){p=ol.proj.transform(p,s.getView().getProjection(),q)}else{if(i.displayProjection&&i.displayProjection!==s.getView().getProjection()){p=ol.proj.transform(p,s.getView().getProjection(),i.displayProjection)}}return{lon:p[0],lat:p[1]}},getPixelFromLonLat:function(q,s,r){if(s==null){throw new ReferenceError("'lon' value cannot be null or undefined")}if(r==null){throw new ReferenceError("'lat' value cannot be null or undefined")}var t=[s,r];if(i.displayProjection!==q.getView().getProjection().getCode()){t=ol.proj.transform(t,i.displayProjection,q.getView().getProjection())}var p=q.getPixelFromCoordinate(t);if(p==null){q.renderSync();p=q.getPixelFromCoordinate(t)}return{x:p[0],y:p[1]}},getPointFromEvent:function(p){return{x:p.pixel[0],y:p.pixel[1]}},drawPolyLine:function(s,A,u,z){if(!u){u=l.generateUuid()}var w=d._getLayersBy(s,"name",u);var t;var p=new ol.source.Vector();var q=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})});var r=[A[0].lon,A[0].lat];var y=[A[1].lon,A[1].lat];var x=new ol.geom.LineString([r,y]);var v=z||"EPSG:4326";x.transform(v,s.getView().getProjection());var B=new ol.Feature({geometry:x,name:u});B.setId(l.generateUuid());if(w.length>0){t=w[0];if(!(t.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+u+"' corresponds to a layer with an invalid source. Layer source must support features.")}t.setStyle(q)}else{t=new ol.layer.Vector({source:p,style:q,format:new ol.format.GeoJSON()});t.set("name",u);s.addLayer(t)}t.getSource().addFeature(B)},startRemoveSelectedFeature:function(q,r){var t=d._getLayersBy(q,"name",r);if(!t||t.length===0){o.warn('Layer "'+r+"' not found. Remove selected layer interaction not added.");return}var s=t[0];var p=new ol.interaction.Select();p.on("select",function(B){var A=s.getSource();if(A.removeFeature instanceof Function){if(B.selected instanceof Array){for(var w=0;w<B.selected.length;w++){var v=B.selected[w];for(var u=0;u<A.getFeatures().length;u++){var y=A.getFeatures()[u];if(y.get("id")===v.get("id")){A.removeFeature(y)}}}}else{for(var x=0;x<A.getFeatures().length;x++){var z=A.getFeatures()[x];if(z.get("id")===B.selected.get("id")){A.removeFeature(z);break}}}}else{throw new Error("No valid layer found with name - "+r+" - to remove selected features.")}p.getFeatures().clear()});q.addInteraction(p);h(q,"removeFeaturesControl",p)},stopRemoveSelectedFeature:function(p){var q=e(p,"removeFeaturesControl");if(q){p.removeInteraction(q);h(p,"removeFeaturesControl",null)}},removeFeature:function(p,q,r){var s=d.getLayersBy(p,"name",q);s.removeFeatures(r)},startDrawingOnLayer:function(s,u,v){var y=e(s,"removeFeaturesControl");if(y){s.removeInteraction(y)}var r;switch(v.featureType.toLowerCase()){case"point":r="Point";break;case"line":case"linestring":r="LineString";break;case"box":case"polygon":r="Polygon";break;case"circle":r="Circle"}var w=d._getLayersBy(s,"name",u||v.layerName);var t;var p=new ol.source.Vector();var q=new ol.style.Style({fill:new ol.style.Fill({color:v.fillColor||v.color,radius:v.fillRadius||v.radius}),stroke:new ol.style.Stroke({color:v.strokeColor||v.color,width:v.strokeRadius||v.radius,opacity:v.strokeOpacity||v.opacity}),image:new ol.style.Circle({radius:v.circleRadius||v.radius,fill:new ol.style.Fill({color:v.circleColor||v.color})})});if(w.length>0){t=w[0];if(!(t.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+u||v.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}t.setStyle(q);p=t.getSource()}else{t=new ol.layer.Vector({source:p,style:q,format:new ol.format.GeoJSON()});t.set("name",u||v.layerName);s.addLayer(t)}var z=e(s,"featureDrawingInteraction");if(!z){var x=new ol.interaction.Draw({source:p,type:(r),format:new ol.format.GeoJSON()});x.on("drawend",function(A){if(A.feature){A.feature.set("id",l.generateUuid())}});h(s,"featureDrawingInteraction",x);s.addInteraction(x)}},stopDrawing:function(p){var q=e(p,"featureDrawingInteraction");if(q){p.removeInteraction(q);h(p,"featureDrawingInteraction",null)}},drawLabel:function(s,u,w){var x=d._getLayersBy(s,"name",u||w.layerName);var t;var p=new ol.source.Vector();var z=w.align==="cm"?"center":w.align||w.textAlign;var v=new ol.style.Text({textAlign:z,textBaseline:w.baseline,font:(w.fontWeight||w.weight||"normal")+" "+(w.fontSize||w.size||"12px")+" "+(w.font||"sans-serif"),text:w.text,fill:new ol.style.Fill({color:w.fillColor||w.color,width:w.fillWdith||w.width||1}),stroke:new ol.style.Stroke({color:w.outlineColor||w.color,width:w.outlineWidth||w.width||1}),offsetX:w.offsetX||0,offsetY:w.offsetY||(w.labelYOffset*-1)||15,rotation:w.rotation});var q=new ol.style.Style({image:new ol.style.Circle({radius:w.circleRadius||w.radius,fill:new ol.style.Fill({color:w.fillColor||w.color||"#000000"}),stroke:new ol.style.Stroke({color:w.strokeColor||w.color||"#000000",width:w.strokeRadius||w.radius})}),text:v});if(x.length>0){t=x[0];if(!(t.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+u||w.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}}else{t=new ol.layer.Vector({source:p,style:q,format:new ol.format.GeoJSON()});t.set("name",u||w.layerName);s.addLayer(t)}var r=ol.proj.transform([w.lon,w.lat],(w.projection||i.displayProjection),s.getView().getProjection());var B=new ol.geom.Point(r);var y=new ol.Feature({geometry:B});y.setId(l.generateUuid());y.setStyle(q);t.getSource().addFeature(y);var A=new ol.format.GeoJSON();return angular.fromJson(A.writeFeature(y))},drawLabelWithPoint:function(z,H,s){var y=d._getLayersBy(z,"name",H||s.layerName);var r;var B=new ol.source.Vector();var p=s.align==="cm"?"center":s.align||s.textAlign;var x=new ol.style.Text({textAlign:p,textBaseline:s.baseline,font:(s.fontWeight||s.weight||"normal")+" "+(s.fontSize||s.size||"12px")+" "+(s.font||"sans-serif"),text:s.text,fill:new ol.style.Fill({color:s.fillColor||s.color,width:s.fillWdith||s.width||1}),stroke:new ol.style.Stroke({color:s.outlineColor||s.color,width:s.outlineWidth||s.width||1}),offsetX:s.offsetX||0,offsetY:s.offsetY||(s.labelYOffset*-1)||15,rotation:s.rotation});var v;var I=s.fillColor||s.color||"#000000";var E=s.fillOpacity||s.opacity||0.5;if(I.indexOf("#")===0){v=l.convertHexAndOpacityToRgbArray(I,E)}else{v=s.fillColor||s.color}var C;var t=s.fillColor||s.color||"#000000";var u=s.strokeOpacity||s.opacity||1;if(t.indexOf("#")===0){C=l.convertHexAndOpacityToRgbArray(t,u)}else{C=s.strokeColor||s.color}var G=new ol.style.Style({image:new ol.style.Circle({radius:s.pointRadius||s.radius||"2",fill:new ol.style.Fill({color:v}),stroke:new ol.style.Stroke({color:C,width:s.strokeRadius||s.radius})}),text:x});if(y.length>0){r=y[0];if(!(r.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+H||s.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}}else{r=new ol.layer.Vector({source:B,format:new ol.format.GeoJSON()});r.set("name",H||s.layerName);z.addLayer(r)}var A=ol.proj.transform([s.lon,s.lat],(s.projection||i.displayProjection),z.getView().getProjection());var D=new ol.geom.Point(A);var q=new ol.Feature({geometry:D});q.setId(l.generateUuid());q.setStyle(G);r.getSource().addFeature(q);var w=[q];var F=new ol.format.GeoJSON();return angular.fromJson(F.writeFeatures([q]))},getFeatureInfo:function(t,q,z,y,v,w,A){if(OpenLayers==null){throw new Error("NotImplemented")}o.warn("getFeatureInfo not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server");A=A||0;var F=j.defer();var D=(w instanceof ol.MapBrowserPointerEvent)?w.pixel:w;var C=new OpenLayers.Pixel(D[0],D[1]);var u=C.add(-A,A);var s=C.add(A,-A);var B=t.getCoordinateFromPixel([u.x,u.y]);var x=t.getCoordinateFromPixel([s.x,s.y]);var p=new OpenLayers.Bounds(B[0],B[1],x[0],x[1]);var E=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:q,version:"1.1.0",srsName:t.getView().getProjection().getCode(),featureType:z,featurePrefix:y,geometryName:v,maxFeatures:100});var r=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:p});E.read({filter:r,callback:function(H){if(H.success()){var J=new OpenLayers.Format.GeoJSON();var G=J.write(H.features);var K=angular.fromJson(G);for(var I=0;I<K.features.length;I++){K.features[I].crs={type:"name",properties:{name:t.getView().getProjection().getCode()}}}F.resolve(K)}}});return F.promise},getFeatureInfoFromLayer:function(y,r,w,s,I){if(OpenLayers==null){throw new Error("NotImplemented")}o.warn("getFeatureInfoFromLayer not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server");I=I||0;var H=(s instanceof ol.SelectEvent)?s.pixel:s;var p=new OpenLayers.Pixel(H.x,H.y);var D=p.add(-I,I);var q=p.add(I,-I);var B=y.getCoordinateFromPixel([D.x,D.y]);var x=y.getCoordinateFromPixel([q.x,q.y]);var u=new OpenLayers.Bounds(B[0],B[1],x[0],x[1]);var v=d._getLayersBy(y,"id",w);var J;if(v.length>0){J=v[0]}else{throw new Error("Invalid layer id")}var z,C;var t=J.getSource().getParams()["LAYERS"];var F=(OpenLayers.Util.isArray(t)?t[0]:t).split(":");if(F.length>1){C=F[0]}z=F.pop();var G={url:J.getSource().getUrls()[0],featureType:z,featurePrefix:C,srsName:J.projection&&J.projection.getCode()||J.map&&J.map.getProjectionObject().getCode(),version:"1.1.0"};var E=new OpenLayers.Protocol.WFS(OpenLayers.Util.applyDefaults(null,G));var A=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:u});E.read({filter:A,callback:function(L){if(L.success()){var N=new OpenLayers.Format.GeoJSON();var K=N.write(L.features);var O=angular.fromJson(K);for(var M=0;M<O.features.length;M++){O.features[M].crs={type:"name",properties:{name:y.projection}}}r(O)}}})},createWfsClient:function(r,u,t,q,v,s,p){throw new Error("NotImplemented")},addWfsClient:function(q){i.wfsClientCache=i.wfsClientCache||[];var p=l.generateUuid();i.wfsClientCache[p]=q;return{clientId:p}},is3dSupported:function(p){return window.olcs!=null},is3d:function(p){return b!=null?b.getEnabled():false},switchTo3dView:function(p){if(b){b.setEnabled(true)}else{b=new olcs.OLCesium({map:p,target:p.getTarget()});var r=b.getCesiumScene();if(n.cesiumOptions!=null&&n.cesiumOptions.includeCustomTerrainProvider){var q=new Cesium.CesiumTerrainProvider({url:n.cesiumOptions.customTerrainProviderUrl});r.terrainProvider=q}f(function(){i.syncMapControlsWithOl3Cesium(p,p.getTarget())});b.setEnabled(true)}},switchTo2dView:function(p){if(b){b.setEnabled(false);i.syncMapControlsWithOl3(p,p.getTarget())}},syncMapControlsWithOl3Cesium:function(q,r){var p=q.getControls();var s=$("#"+r)[0];p.forEach(function(w){if(w instanceof ol.control.MousePosition&&s){var v=b.getCesiumScene();var u=v.globe.ellipsoid;var t=new Cesium.ScreenSpaceEventHandler(v.canvas);t.setInputAction(function(x){var A=v.camera.pickEllipsoid(x.endPosition,u);if(A){var z=u.cartesianToCartographic(A);var y=Cesium.Math.toDegrees(z.longitude);var B=Cesium.Math.toDegrees(z.latitude);$(".ol-mouse-position")[0].innerText=w.getCoordinateFormat()([y,B])}},Cesium.ScreenSpaceEventType.MOUSE_MOVE);a=t}if(w instanceof ol.control.ScaleLine){q.render()}})},syncMapControlsWithOl3:function(p,q){},searchWfs:function(q,p,s,r){throw new Error("NotImplemented")},getMeasureFromEvent:function(q,u){if(u.feature==null&&u.geometry==null){throw new Error("Feature cannot be null in Measure event")}if(u.geometry!=null&&u.geometry instanceof Array&&u.geometry.length===2){u.feature=new ol.Feature(new ol.geom.Point(u.geometry))}if(u.geometry!=null&&u.geometry instanceof Array&&u.geometry.length>2){u.feature=new ol.Feature(new ol.geom.LineString(u.geometry))}var x=u.feature.clone();var v=x.getGeometry().transform(q.getView().getProjection(),i.displayProjection||"EPSG:4326");var w=new ol.format.GeoJSON();var s=w.writeFeature(x);var r=angular.fromJson(s);var p=i.getGeometryLength(q,v);var t="m";if(p>1000){t="km";p=(p/1000)}return{measurement:p,units:t,geoJson:r.geometry}},getGeometryLength:function(q,s){var v=s.getCoordinates();var u=0;var p=new ol.Sphere(6378137);for(var r=0,t=v.length-1;r<t;++r){u+=p.haversineDistance(v[r],v[r+1])}return u},wfsClientCache:{}};function k(q,u){for(var p in u.postAddLayerCache){if(u.postAddLayerCache.hasOwnProperty(p)){var r=false;for(var t=0;t<q.getLayers().length;t++){var s=q.getLayers()[t];if(p===s.id){r=true}}if(!r){u.postAddLayerCache[p]=null}}}}return i}])})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.mapservices",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.map.openlayersv2","gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.map.openlayersv3","gawebtoolkit.mapservices.data.openlayersv2","gawebtoolkit.mapservices.data.openlayersv3"]);app.factory("GeoLayer",["GAWTUtils",function(b){var a=function(g,e,f,c,d){this.id=g;this.name=e;this.type=f;this.visibility=c;this.opacity=d};a.fromOpenLayersV2Layer=function(d){var f=d.id.indexOf("_ArcGISCache_")===-1;var e;if(f){e=d.geoLayerType}else{e="ArcGISCache"}var c;if(typeof d.opacity==="string"){c=Number(d.opacity)}else{c=d.opacity}return new a(d.id,d.name,e,d.visibility,c)};a.fromOpenLayersV3Layer=function(d){var e=d.geoLayerType||d.get("geoLayerType");var c;if(typeof d.get("opacity")==="string"){c=Number(d.get("opacity"))}else{c=d.get("opacity")}if(!d.get("id")){d.set("id",b.generateUuid())}return new a(d.get("id"),d.get("name"),e,d.get("visible"),c)};return a}]);angular.module("gawebtoolkit.ui.templates",[]).run(["$templateCache",function(a){a.put("src/main/js/ui/components/base-layer-selector/base-layer-selector.html",'<select title="Base layer selector" fix-ie-select ng-options="layer.id as layer.name for layer in layersData"\n        ng-model="selectedBaseLayerId"></select>\n');a.put("src/main/js/ui/components/deprecated/dialog-toggle.html",'<button type="button" ng-click="toggleDialog()"><div ng-transclude></div></button>');a.put("src/main/js/ui/components/deprecated/layers-dialog.html",'<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}">\n    <div ng-repeat="layer in layersData">\n        <ga-layer-control map-controller="mapController" layer-data="layer"></ga-layer-control>\n    </div>\n</div>\n');a.put("src/main/js/ui/components/deprecated/search-wfs.html",'<input type="text" class="search-box" ng-model="query"\n       ng-class="{typeAheadLoading:waitingForResponse}" placeholder="{{placeHolder}}"/>\n<input type="image" class="button search-button" ng-click="searchButtonClicked()"\n       accesskey="4" alt="Search using your entered search criteria"\n       title="Search using your entered search criteria"\n       src="{{searchIconUrl}}">');a.put("src/main/js/ui/components/deprecated/static-dialog.html",'<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}">\n    <div ng-transclude></div>\n</div>');a.put("src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html",'<input type="text" class="search-box" placeholder="Place name search" ng-model="query"\n       ng-class="{typeAheadLoading:waitingForResponse}"\n       typeahead="result as result.properties.name for result in getSearchResults($viewValue)"\n       typeahead-template-url="{{resultTemplateUrl}}"\n       typeahead-on-select="onSelected($item, $model, $label)"\n       typeahead-wait-ms="200" typeahead-editable="true"/>\n<input type="image" class="button search-button" accesskey="4"\n       ng-click="searchButtonClicked()"\n       alt="Search using your entered search criteria" title="Search using your entered search criteria"\n       src="{{searchIconUrl}}"/>');a.put("src/main/js/ui/components/google-place-name-search/google-place-name-search.html",'<input type="text" class="search-box" placeholder="{{placeHolder}}"/>\n<input type="image" class="button search-button" accesskey="4"\n       alt="Search using your entered search criteria" title="Search using your entered search criteria"\n       src="{{searchIconUrl}}"/>');a.put("src/main/js/ui/components/layer-control/layer-control.html",'<label for="{{elementId}}" class="checkbox" style="display:inline-block;width:65%">\n    <input id="{{elementId}}" type="checkbox" ng-model="layerData.visibility" ng-click="layerClicked()"\n           ng-disabled="layerDisabled"/>{{layerData.name}}\n</label>\n<div style="display:inline;width:30%" ng-transclude></div>\n<div ng-show="layerData.visibility" class="gaLayerControlSliderContainer">\n    <ga-layer-opacity-slider\n            map-controller="mapController"\n            layer-opacity="layerData.opacity"\n            layer-id="{{layerData.id}}"\n            layer-disabled="layerDisabled"\n            on-opacity-change="changeOpacity(layerId,opacity)"\n            title-text="Opacity control for layer - {{layerData.name}}">\n    </ga-layer-opacity-slider>\n</div>\n');a.put("src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html",'<button ng-click="toggleClicked()" class="gaUiToggleOff" type="button">\n    <div ng-transclude></div>\n</button>');a.put("src/main/js/ui/components/layers-drop-down/layers-drop-down.html",'<div>\n    <select fix-ie-select ng-model="selectedModel" ng-change="selectLayer()"\n            ng-options="dropDownLayer.id as dropDownLayer.name for dropDownLayer in layersData">\n    </select>\n</div>');a.put("src/main/js/ui/components/measure-toggle/measure-toggle.html",'<button type="button" ng-click="handleToggle()" class="gaUiToggleOff">\n    <span ng-transclude></span>\n</button>');a.put("src/main/js/ui/components/opacity-slider/opacity-slider.html",'<div ui-jq="slider" ui-options="getSliderOptions()"></div>')}]);(function(){var a=angular.module("gawebtoolkit.ui.components.base-layer-selector",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaBaseLayerSelector",["$timeout",function(b){return{restrict:"E",templateUrl:"src/main/js/ui/components/base-layer-selector/base-layer-selector.html",replace:true,scope:{layersData:"=",mapController:"=",controllerEmitEventName:"@"},controller:["$scope",function(d){var c=this;c.selectBaseLayer=function(e){d.selectedBaseLayerId=e};d.$emit(d.controllerEmitEventName,c)}],link:function(c){c.$watch("selectedBaseLayerId",function(e){if(e!=null){c.mapController.setBaseLayer(e)}});c.$watch("layersData",function(e){if(e){for(var f=0;f<e.length;f++){if(c.layersData[f].visibility===true){d(c.layersData[f])}}}});var d=function(e){b(function(){c.selectedBaseLayerId=e.id})}},transclude:true}}])})();(function(){angular.module("gawebtoolkit.ui.components",["gawebtoolkit.ui.components.opacity-slider","gawebtoolkit.ui.components.layer-control","gawebtoolkit.ui.components.layers-drop-down","gawebtoolkit.ui.components.base-layer-selector","gawebtoolkit.ui.components.google-place-name-search","gawebtoolkit.ui.components.geo-place-name-search","gawebtoolkit.ui.components.layer-interaction-toggle","gawebtoolkit.ui.components.deprecated","gawebtoolkit.ui.components.measure-toggle"])})();(function(){var a=angular.module("gawebtoolkit.ui.components.deprecated",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaDialogToggle",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/dialog-toggle.html",transclude:true,scope:{gaDialogController:"=",gaToggleClicked:"&"},link:function(b){b.toggleDialog=function(){var c=!b.gaDialogController.isClosed();if(!c){b.gaDialogController.openDialog()}else{b.gaDialogController.closeDialog()}b.gaToggleClicked({dialogController:b.gaDialogController})}}}}]);a.directive("gaStaticDialog",["$timeout","GAWTUtils",function(b,c){return{restrict:"AE",templateUrl:"src/main/js/ui/components/deprecated/static-dialog.html",scope:{controllerEmitEventName:"@",dialogConfig:"=",dialogWindowResize:"&",dialogClosed:"&",dialogOpened:"&"},controller:["$scope",function(e){$(window).bind("resize",function(){if(e.dialogWindowResize!=null){e.dialogConfig=angular.extend(e.dialogConfig,e.dialogWindowResize())}e.dialogConfig.autoOpen=!e.isClosed;$("#"+e.dialogId).dialog(e.dialogConfig)});e.dialogId=c.generateUuid();var d=this;d.openDialog=function(){$("#"+e.dialogId).dialog("open");e.isClosed=false;e.dialogOpened()};d.closeDialog=function(){$("#"+e.dialogId).dialog("close");e.isClosed=true;e.dialogClosed()};d.isClosed=function(){return e.isClosed};e.$emit(e.controllerEmitEventName,d)}],link:function(d){d.$on("$destroy",function(){$("#"+d.dialogId).dialog("destroy").remove()});var e=d.$watch("dialogConfig",function(f){if(f!=null){d.dialogReady=true;$("#"+d.dialogId).bind("dialogclose",function(){d.isClosed=true;b(function(){d.$apply()});d.dialogClosed()});d.isClosed=!f.autoOpen;e()}})},transclude:true}}]);a.directive("gaLayersDialog",["GAWTUtils",function(b){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/layers-dialog.html",scope:{layersData:"=",dialogConfig:"=",mapController:"="},controller:["$scope",function(d){$(window).bind("resize",function(){d.dialogConfig.autoOpen=!d.isClosed;$("#"+d.dialogId).dialog(d.dialogConfig)});d.dialogId=b.generateUuid();d.isClosed=!d.dialogConfig.autoOpen;var c=this;c.openDialog=function(){$("#"+d.dialogId).dialog("open");d.isClosed=false};c.closeDialog=function(){$("#"+d.dialogId).dialog("close");d.isClosed=true};c.isClosed=function(){return d.isClosed};d.$emit("layersDialogReady",c)}],link:function(e,d,c){e.filterBaseLayers=function(f){var g=e.mapController.isBaseLayer(f.id);return !g};e.$on("$destroy",function(){$("#"+e.dialogId).dialog("destroy").remove()});e.$watch(c.uiRefresh,function(){$("#"+e.dialogId).bind("dialogclose",function(){e.isClosed=!e.isClosed})})},transclude:true}}]);a.directive("gaSearchWfs",["$q","$interpolate","$log",function(b,d,c){return{restrict:"EA",templateUrl:"src/main/js/ui/components/deprecated/search-wfs.html",scope:{resultTemplateUrl:"@",mapController:"=",searchEndPoints:"=",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",primaryWfsProperty:"@",searchIconUrl:"@",placeHolder:"@",activateKey:"@"},controller:["$scope",function(e){e.waitingForResponse=false}],link:function(h,g,e){g.bind("keydown",function(m){if(m.keyCode==h.activateKey){h.searchButtonClicked();h.$apply()}});var f=[];var i;h.limitResults=10;h.$watch("searchEndPoints",function(m){if(m){if(h.mapController==null){return}f=[];for(var n=0;n<h.searchEndPoints.length;n++){var o=h.mapController.createWfsClient(h.searchEndPoints[n].url,h.searchEndPoints[n].featureType,h.searchEndPoints[n].featurePrefix,h.searchEndPoints[n].version,h.searchEndPoints[n].geometryName,h.searchEndPoints[n].datumProjection,h.searchEndPoints[n].isLonLatOrderValid);var p=h.mapController.addWfsClient(o);p.endPointId=h.searchEndPoints[n].id;f.push(p);i=h.searchEndPoints[n].featureAttributes}}});if(e.searchEndPoints==null){if(h.mapController!=null){var k=h.mapController.createWfsClient(h.url,h.featureType,h.featurePrefix,h.version,h.geometryName,h.datumProjection);f.push(h.mapController.addWfsClient(k))}}function l(m){return m.replace("'","").replace('"',"").replace("%","").replace("*","")}var j=function(q){q=l(q);h.searchResults=[];var n=b.defer();var p=0;var m=[];h.waitingForResponse=true;for(var o=0;o<f.length;o++){var r=f[o];h.mapController.searchWfs(f[o].clientId,q,i).then(function(t){if(t==null){c.error("Search server is unavailable.");n.resolve([]);return}p++;for(var s=0;s<t.features.length;s++){t.features[s].endPointId=r.endPointId;m.push(t.features[s])}if(p===f.length){n.resolve(m);h.waitingForResponse=false}})}return n.promise};h.getSearchResults=function(m){if(m!=null&&m.length>=3){return j(m).then(function(n){h.onResults({data:n});return n.slice(0,10)})}else{return[]}};h.onSelected=function(m){h.onResultsSelected({item:m})};h.searchButtonClicked=function(){if(typeof h.query==="object"&&h.query.properties!=null){h.query=h.query.properties[h.primaryWfsProperty]}if(h.query!=null){return j(h.query).then(function(m){h.onPerformSearch({data:m});return m})}}},transclude:true}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.geo-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoNamesPlaceSearch",["$http","$q","$timeout",function(d,b,c){return{restrict:"E",templateUrl:"src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html",scope:{mapController:"=",searchIconUrl:"@",geoNamesApiKey:"@",zoomLevel:"@",countryCode:"@",resultTemplateUrl:"@",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",activateKey:"@"},controller:["$scope",function(e){}],link:function(g,e){var f=e.find('input[type="text"]')[0];e.bind("keydown",function(i){if(i.keyCode==g.activateKey){if(g.typeAheadSelected){return}g.searchButtonClicked();g.$apply()}});var h=function(l,j){if(typeof l==="object"){l=l.properties.name}g.searchResults=[];var i=b.defer();g.waitingForResponse=true;var k="http://api.geonames.org/searchJSON?q="+encodeURIComponent(l).replace("%20","+")+"&maxRows="+j+"&country="+g.countryCode.toUpperCase()+"&username="+g.geoNamesApiKey;d.get(k).success(function(o){g.waitingForResponse=false;var n=[];for(var m=0;m<o.geonames.length;m++){var p=o.geonames[m];n.push(g.convertGeoNameToGeoJson(p))}i.resolve(n)});return i.promise};g.getSearchResults=function(i){if(!(i!=null&&i.length>=3)){return[]}return h(i,10).then(function(j){if(g.searchInProgress){return[]}g.onResults({data:j});return j})};g.onSelected=function(i){g.typeAheadSelected=true;c(function(){g.typeAheadSelected=false},50);g.onResultsSelected({item:i})};g.searchButtonClicked=function(){g.searchInProgress=true;if(g.query!=null){return h(g.query,50).then(function(i){g.searchInProgress=false;g.onPerformSearch({data:i});return i})}};g.convertGeoNameToGeoJson=function(j){var i={type:"Feature",geometry:{type:"Point",coordinates:[j.lng,j.lat]},crs:{type:"name",properties:{name:"EPSG:4326"}}};i.properties={};for(var k in j){if(j.hasOwnProperty(k)){i.properties[k]=j[k]}}return i}}}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.google-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("googlePlaceNameSearch",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/google-place-name-search/google-place-name-search.html",scope:{mapController:"=",searchIconUrl:"@",zoomLevel:"@",countryCode:"@"},controller:["$scope",function(b){}],link:function(d,b){var c=b.find('input[type="text"]')[0];var e=new google.maps.places.Autocomplete(c,{componentRestrictions:{country:d.countryCode}});google.maps.event.addListener(e,"place_changed",function(){var f=e.getPlace();if(!f.geometry){return}d.mapController.zoomTo(d.zoomLevel);d.mapController.setCenter(f.geometry.location.k,f.geometry.location.A,"EPSG:4326")})}}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.layer-control",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayerControl",["GAWTUtils",function(c){return{restrict:"E",templateUrl:"src/main/js/ui/components/layer-control/layer-control.html",scope:{layerData:"=",mapController:"=",onVisible:"&",onHidden:"&",onOpacityChange:"&",layerDisabled:"=",onStartLoading:"&",onFinishedLoading:"&"},controller:["$scope",function(d){d.elementId=c.generateUuid()}],compile:function b(){return{post:function d(g){var f=function(){g.onStartLoading({layerId:g.layerData.id})};var h=function(){g.onFinishedLoading({layerId:g.layerData.id})};g.$watch("layerData",function(i){if(i!=null){g.layerData.visibility=g.layerData.visibility===true||g.layerData.visibility==="true";if(g.mapController==null){throw new Error("mapController is not available")}if(g.layerData.id!=null){g.mapController.registerLayerEvent(g.layerData.id,"loadstart",f);g.mapController.registerLayerEvent(g.layerData.id,"loadend",h)}}})},pre:function e(f){f.changeOpacity=function(g,h){f.onOpacityChange({layerId:g,opacity:h})};f.layerClicked=function(){f.layerData.visibility=!f.layerData.visibility;f.mapController.setLayerVisibility(f.layerData.id,f.layerData.visibility);if(f.layerData.visibility){f.onVisible({layerId:f.layerData.id})}else{f.onHidden({layerId:f.layerData.id})}}}}},transclude:true}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.layer-interaction-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayerInteractionToggle",[function(){return{restrict:"E",replace:"true",templateUrl:"src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html",transclude:true,scope:{toggleIconSource:"@",controllerEmitEventName:"@",toggleOnCallback:"&",toggleOffCallback:"&",onLayerClickCallback:"&",mapController:"=",layerInteractionId:"="},controller:["$scope",function(c){var b=this;b.activate=function(){c.activate()};b.deactivate=function(){c.deactivate()};b.isToggleActive=function(){return c.isToggleOn};c.$emit(c.controllerEmitEventName,b)}],link:function(c,b){c.isToggleOn=false;c.activate=function(){c.mapController.registerMapClick(d);b.removeClass("gaUiToggleOff");b.addClass("gaUiToggleOn");c.isToggleOn=true;c.toggleOnCallback()};c.deactivate=function(){c.mapController.unRegisterMapClick(d);b.removeClass("gaUiToggleOn");b.addClass("gaUiToggleOff");c.isToggleOn=false;c.toggleOffCallback()};c.toggleClicked=function(){c.isToggleOn=!c.isToggleOn;if(c.isToggleOn){c.activate()}else{c.deactivate()}};var d=function(g){var f=c.mapController.getPointFromEvent(g);c.onLayerClickCallback({point:f,interactionId:c.layerInteractionId})}}}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.layers-drop-down",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayersDropDown",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/layers-drop-down/layers-drop-down.html",replace:false,scope:{layersData:"=",selectedModel:"=",controllerEmitEventName:"@",onSelectedLayerChanged:"&",onLayersInitialised:"&",layerGroupId:"@",includeNone:"@"},controller:["$scope",function(c){var b=this;c.selectLayer=function(){c.onSelectedLayerChanged({layerId:c.selectedModel,groupId:c.layerGroupId})};b.selectLayer=c.selectLayer;c.$emit(c.controllerEmitEventName,b)}],link:function(b){b.$watch("layersData",function(c){if(c&&!b.selectedModel){if(b.includeNone&&b.layersData[0].id!=="$none$"){b.layersData.unshift({id:"$none$",name:"None"})}b.selectedModel=c[0].id;b.onLayersInitialised({layerId:b.selectedModel,groupId:b.layerGroupId})}})},transclude:true}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.measure-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaMeasureToggle",[function(){return{restrict:"EA",templateUrl:"src/main/js/ui/components/measure-toggle/measure-toggle.html",scope:{resolveStyle:"&",toggleOnCallback:"&",toggleOffCallback:"&",onFinish:"&",onUpdate:"&",mapControlId:"@",controllerEmitEventName:"@",mapController:"="},controller:["$scope",function(c){var b=this;b.activate=function(){c.activate()};b.deactivate=function(){c.deactivate()};b.isToggleActive=function(){return c.mapController.isControlActive(c.mapControlId)};c.$emit(c.controllerEmitEventName,b)}],link:function(c,b){c.handleMeasurements=function(e){var d=c.mapController.getMeasureFromEvent(e);c.onFinish({event:d})};c.handlePartialMeasure=function(e){var d=c.mapController.getMeasureFromEvent(e);c.onUpdate({event:d})};c.activate=function(){c.mapController.activateControl(c.mapControlId);c.mapController.registerControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.registerControlEvent(c.mapControlId,"measurepartial",c.handlePartialMeasure);b.removeClass("gaUiToggleOff");b.addClass("gaUiToggleOn");c.toggleOnCallback()};c.deactivate=function(){c.mapController.deactivateControl(c.mapControlId);c.mapController.unRegisterControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.unRegisterControlEvent(c.mapControlId,"measurepartial",c.handlePartialMeasure);b.removeClass("gaUiToggleOn");b.addClass("gaUiToggleOff");c.toggleOffCallback()};c.handleToggle=function(){if(c.mapController.isControlActive(c.mapControlId,"measureline")){c.deactivate()}else{c.activate()}};c.$on("$destroy",function(){c.mapController.unRegisterControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.unRegisterControlEvent(c.mapControlId,"measurepartial",c.handleMeasurements)})},transclude:true,replace:"true"}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.opacity-slider",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayerOpacitySlider",["$timeout",function(b){return{restrict:"E",templateUrl:"src/main/js/ui/components/opacity-slider/opacity-slider.html",replace:true,scope:{layerId:"@",layerOpacity:"=",mapController:"=",layerDisabled:"=",titleText:"@",onOpacityChange:"&"},controller:["$scope",function(c){c.changeOpacitySlide=function(f,d){c.layerOpacity=d.value;b(function(){c.$apply();c.onOpacityChange({layerId:c.layerId,opacity:c.layerOpacity})})};c.getSliderOptions=function(){return{min:0,max:1,range:false,step:0.01,slide:c.changeOpacitySlide,value:c.layerOpacity,disabled:c.layerDisabled}}}],link:function(d,c){d.$watch("layerOpacity",function(f,e){if(f&&e!==f){$(c).slider(d.getSliderOptions());if(d.layerId){d.mapController.setOpacity(d.layerId,f)}}});b(function(){c.find(".ui-slider-handle").attr("title",d.titleText)})},transclude:true}}])})();var angular=angular||{};var console=console||{};var $=$||{};var google=google||{};angular.module("gawebtoolkit.ui",["gawebtoolkit.ui.directives","gawebtoolkit.ui.templates","gawebtoolkit.ui.components","ui.utils","gawebtoolkit.utils"]);var app=angular.module("gawebtoolkit.ui.directives",["gawebtoolkit.utils"]);app.directive("gaZoomToExtentButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{extentPoints:"=",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){var b=a.mapController.createBounds(a.extentPoints);a.beforeZoom({points:b});a.mapController.zoomToExtent(b)}},transclude:true}}]);app.directive("gaZoomToCenterPositionAnchor",[function(){return{restrict:"E",template:'<a ng-click="zoomTo()"><div ng-transclude></div></a>',scope:{geoJsonCoord:"=",projection:"@",mapController:"=",zoomLevel:"@"},link:function(a){a.zoomTo=function(){a.mapController.setCenter(a.geoJsonCoord[1],a.geoJsonCoord[0],a.projection);a.mapController.zoomTo(a.zoomLevel)}},transclude:true}}]);app.directive("gaZoomToLayerButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{layerId:"@",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){a.mapController.zoomToLayer(a.layerId)}},transclude:true}}]);app.directive("gaToggle",[function(){var a='<button type="button" ng-click="toggle()"><div ng-transclude></div></button>';return{restrict:"E",replace:"true",template:a,transclude:true,scope:{gaToggleClicked:"&"},link:function(b){b.toggle=function(){b.gaToggleClicked()}}}}]);app.directive("fixIeSelect",function(){return{restrict:"A",controller:["$scope","$element","$timeout",function(b,a,c){b.$watch("options",function(){var e=$("<option>");var d=a.css("width");a.css("width");a.addClass("repaint").removeClass("repaint");e.appendTo(a).remove();c(function(){a.css("width","auto")});e=null})}]}});(function(){var a=angular.module("gawebtoolkit.vendor.bing-layers",["gawebtoolkit.core.layer-services"]);a.directive("gaBingLayer",["$timeout","$compile","GALayerService","$log",function(d,c,b,e){var g=["road","aerial","aerialwithlabels","birdseye","birdseyewithlabels"];var f=function(k){for(var h=0;h<g.length;h++){var j=g[h];if(j===k.toLowerCase()){return true}}return false};return{restrict:"E",require:"^gaMap",scope:{layerType:"@",visibility:"@",wrapDateLine:"@",bingApiKey:"@",controllerEmitEventName:"@"},transclude:false,controller:["$scope",function(i){var h=this;if(i.controllerEmitEventName){i.$emit(i.controllerEmitEventName,h)}return h}],link:function(p,k,o,h){p.framework=h.getFrameworkVersion();p.mapAPI={};p.mapAPI.mapController=h;var m={},l;m=b.defaultLayerOptions(o,p.framework);m.layerType=m.layerType||m.bingLayerType;if(!f(m.layerType)){e.warn("Invalid Bing layer type - "+m.layerType+' used. Defaulting to "Road". Specify default Bing layer type in "ga.config" - bingLayerType');m.layerType="Road"}var n=function(){p.layerReady=true};var j=function(){p.constructionInProgress=true;m.mapElementId=h.getMapElementId();e.info("Bing "+m.layerType+" - constructing...");if(m.bingApiKey==null){throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'")}l=b.createBingLayer(m,p.framework);h.addLayer(l).then(function(q){p.layerDto=q;n();e.info("construction complete...");p.constructionInProgress=false},function(q){p.$emit(m.layerName+"_error",m);p.onError({message:q,layer:m});n();e.info("construction failed...");p.constructionInProgress=false})};o.$observe("visibility",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){h.setLayerVisibility(p.layerDto.id,p.visibility==="true")}});o.$observe("layerType",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){p.initialiseLayer()}});p.initCount=0;function i(){e.info("reconstructing layer...");var q=h.getLayers();var s=null;for(var r=0;r<q.length;r++){if(q[r].id===p.layerDto.id){s=r;break}}if(s!=null){h.removeLayerById(p.layerDto.id);p.layerDto=null;m=b.defaultLayerOptions(o,p.framework);m.initialExtent=h.getInitialExtent();m.format=p.format;if(m.bingApiKey==null){throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'")}l=b.createBingLayer(m,p.framework);h.addLayer(l).then(function(t){p.layerDto=t;n();if(p.layerDto!=null){var u=s-h.getLayers().length+1;h.raiseLayerDrawOrder(p.layerDto.id,u)}})}}p.initialiseLayer=function(){e.info("initialising layer...");if(p.layerDto!=null){i()}else{if(p.layerReady&&p.constructionInProgress){e.info("...")}else{j()}}};p.$on("$destroy",function(){if(p.layerDto){h.removeLayerById(p.layerDto.id)}$(window).off("resize.Viewport")});p.initialiseLayer()}}}])})();(function(){var a=angular.module("gawebtoolkit.vendor.google-layers",["gawebtoolkit.core.layer-services"]);a.directive("gaGoogleLayer",["$timeout","$compile","GALayerService","$log",function(e,d,b,g){var f=["street","hybrid","satellite","terrain"];var c=function(k){for(var h=0;h<f.length;h++){var j=f[h];if(j===k.toLowerCase()){return true}}return false};return{restrict:"E",require:"^gaMap",scope:{layerType:"@",visibility:"@",controllerEmitEventName:"@"},transclude:false,controller:["$scope",function(i){var h=this;if(i.controllerEmitEventName){i.$emit(i.controllerEmitEventName,h)}return h}],link:function(p,k,o,h){p.framework=h.getFrameworkVersion();p.mapAPI={};p.mapAPI.mapController=h;var m={},l;m=b.defaultLayerOptions(o,p.framework);m.layerType=m.layerType||m.googleLayerType;if(!c(m.layerType)){g.warn("Invalid Google layer type - "+m.layerType+' used. Defaulting to "Hybrid". Specify default Google layer type in "ga.config" - googleLayerType');m.layerType="Hybrid"}var n=function(){p.layerReady=true};var j=function(){p.constructionInProgress=true;m.mapElementId=h.getMapElementId();g.info("Google "+p.layerType+" - constructing...");l=b.createGoogleLayer(m,p.framework);h.addLayer(l).then(function(q){p.layerDto=q;n();g.info("construction complete...");p.constructionInProgress=false},function(q){p.$emit(m.layerName+"_error",m);p.onError({message:q,layer:m});n();g.info("construction failed...");p.constructionInProgress=false})};o.$observe("visibility",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){h.setLayerVisibility(p.layerDto.id,p.visibility==="true"||p.visibility===true)}});o.$observe("layerType",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){p.initialiseLayer()}});p.initCount=0;function i(){g.info("reconstructing layer...");var q=h.getLayers();var s=null;for(var r=0;r<q.length;r++){if(q[r].id===p.layerDto.id){s=r;break}}if(s!=null){h.removeLayerById(p.layerDto.id);p.layerDto=null;m=b.defaultLayerOptions(o,p.framework);m.initialExtent=h.getInitialExtent();m.format=p.format;l=b.createGoogleLayer(m,p.framework);h.addLayer(l).then(function(t){p.layerDto=t;n();if(p.layerDto!=null){var u=s-h.getLayers().length+1;h.raiseLayerDrawOrder(p.layerDto.id,u)}})}}p.initialiseLayer=function(){g.info("initialising layer...");if(p.layerDto!=null){i()}else{if(p.layerReady&&p.constructionInProgress){g.info("...")}else{j()}}};p.$on("$destroy",function(){if(p.layerDto){h.removeLayerById(p.layerDto.id)}$(window).off("resize.Viewport")});p.initialiseLayer()}}}])})();(function(){var a=angular.module("gawebtoolkit.vendor.osm-layers",["gawebtoolkit.core.layer-services"]);a.directive("gaOsmLayer",["$timeout","$compile","GALayerService","$log",function(d,c,b,e){return{restrict:"E",require:"^gaMap",scope:{wrapDateLine:"@",visibility:"@",controllerEmitEventName:"@"},transclude:false,controller:["$scope",function(g){var f=this;if(g.controllerEmitEventName){g.$emit(g.controllerEmitEventName,f)}return f}],link:function(n,i,m,f){n.framework=f.getFrameworkVersion();n.mapAPI={};n.mapAPI.mapController=f;var k={},j;k=b.defaultLayerOptions(m,n.framework);var l=function(){n.layerReady=true};var h=function(){n.constructionInProgress=true;k.mapElementId=f.getMapElementId();e.info("OpenStreetMaps Cycle - constructing...");j=b.createOsmLayer(k,n.framework);f.addLayer(j).then(function(o){n.layerDto=o;l();e.info("construction complete...");n.constructionInProgress=false},function(o){n.$emit(k.layerName+"_error",k);n.onError({message:o,layer:k});l();e.info("construction failed...");n.constructionInProgress=false})};m.$observe("visibility",function(){if(n.layerReady&&f&&n.layerDto!=null&&n.layerDto.id){f.setLayerVisibility(n.layerDto.id,n.visibility==="true")}});n.initCount=0;function g(){e.info("reconstructing layer...");var o=f.getLayers();var q=null;for(var p=0;p<o.length;p++){if(o[p].id===n.layerDto.id){q=p;break}}if(q!=null){f.removeLayerById(n.layerDto.id);n.layerDto=null;k=b.defaultLayerOptions(m,n.framework);k.initialExtent=f.getInitialExtent();k.format=n.format;j=b.createLayer(k,n.framework);f.addLayer(j).then(function(r){n.layerDto=r;l();if(n.layerDto!=null){var s=q-f.getLayers().length+1;f.raiseLayerDrawOrder(n.layerDto.id,s)}})}}n.initialiseLayer=function(){e.info("initialising layer...");if(n.layerDto!=null){g()}else{if(n.layerReady&&n.constructionInProgress){e.info("...")}else{h()}}};n.$on("$destroy",function(){if(n.layerDto){f.removeLayerById(n.layerDto.id)}$(window).off("resize.Viewport")});n.initialiseLayer()}}}])})();(function(){angular.module("gawebtoolkit.vendor-layers",["gawebtoolkit.vendor.google-layers","gawebtoolkit.vendor.bing-layers","gawebtoolkit.vendor.osm-layers"])})();