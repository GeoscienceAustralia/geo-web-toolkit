var angular=angular||{};var jQuery=jQuery||{};var console=console||{};var app=angular.module("gawebtoolkit.config",[]);app.directive("gaMapConfig",["$compile","$http","$q","$interpolate","$timeout","$parse","$log",function(c,h,a,g,b,d,f){return{restrict:"E",scope:true,controller:["$scope","$element","$attrs",function(k,j,i){k.loadConfigData=function(){var l;if(i.configValue!=null){k.configLocal=true}if(i.gaConfigPath!=null&&i.gaConfigPath.indexOf("{{")!==-1){l=k.$eval(g(i.gaConfigPath))}else{l=i.gaConfigPath}if(i.staticConfig==="true"){l=l+".json"}var n=function(p){f.info("config http request success");if(p){f.info("config http request data present")}if(i.preConfig){var q=d(i.preConfig);k.gaConfigTemp=q(k,{config:p})}else{k.gaConfigTemp=p}k.$emit("configDataLoaded",k.gaConfigTemp);k.$broadcast("configDataLoaded",k.gaConfigTemp);if(i.postConfig){var o=d(i.postConfig);o(k,{config:k.gaConfigTemp})}};f.info("config loading...");var m=function(q,o,r,p){f.error("Failed to load config - "+o)};if(l!=null&&l.length>0){h({method:"GET",url:l}).success(n).error(m)}if(k.configLocal){b(function(){n(k.$eval(i.configValue))},1000)}}}],compile:function e(n,l){var m;var j;if(l.templatePath!=null){var k=a.defer();h.get(l.templatePath).success(function(p){j=c(p);k.resolve(j)});m=k.promise}return{post:function i(r,q,p){},pre:function o(r,q,p){m.then(function(s){q.html(s(r));r.loadConfigData()})}}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.core.control-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMapControl",[function(){return{restrict:"E",require:"^gaMap",scope:{mapControlName:"@",mapControlId:"@",controlOptions:"=",containerElementId:"@",preOptionsLoaded:"&",controlEnabled:"@"},link:function(c,b,a,d){if(!c.mapControlName){return}var e=c.preOptionsLoaded({options:c.controlOptions});c.controlOptions=e===undefined?c.controlOptions:e;c.controlDto=d.addControl(c.mapControlName,c.controlOptions,c.containerElementId,c.mapControlId);if(a.controlEnabled!=null){a.$observe("controlEnabled",function(){if(c.controlEnabled==="true"){d.activateControl(c.controlDto.id)}else{d.deactivateControl(c.controlDto.id)}})}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var jQuery=jQuery||{};angular.module("gawebtoolkit.core",["gawebtoolkit.mapservices","gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-directives","gawebtoolkit.vendor-layers","gawebtoolkit.core.layer-services","gawebtoolkit.core.data-services","gawebtoolkit.core.control-directives","gawebtoolkit.core.feature-directives","gawebtoolkit.core.marker-directives","gawebtoolkit.core.map-config","gawebtoolkit.utils"]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.data-services",["gawebtoolkit.mapservices"]);app.service("GADataService",["$log","ga.config","dataServiceLocator",function(c,a,b){return{getLayersByWMSCapabilities:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.getLayersByWMSCapabilities(f)},getWMSFeatures:function(e,d,j,g,f,k,i){var l=i||"olv2";var h=b.getImplementation(l);return h.getWMSFeatures(e,d,j,g,f,k)},getWMSFeaturesByLayerId:function(h,i,g,e,f){var j=f||"olv2";var d=b.getImplementation(j);return d.getLayersByWMSCapabilities(h,i,g,e)}}}]);app.service("dataServiceLocator",["$injector",function(b){var a={olv2:"olv2DataService",olv3:"olv3DataService"};return{getImplementation:function(c){return b.get(a[c])}}}]);var angular=angular||{};var app=angular.module("gawebtoolkit.core.feature-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaFeatureLayer",["$timeout","$compile","$q","GALayerService",function(d,c,b,a){return{restrict:"E",require:"^gaMap",scope:{url:"@",layerName:"@",visibility:"@",projection:"@",controllerEmitEventName:"@",postAddLayer:"&",onLayerDestroy:"&"},controller:["$scope",function(f){f.layerControllerIsReady=false;f.gaFeatures=[];f.featurePromises=[];var e=this;e.hide=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,false);return e};e.show=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,true);return e};e.setOpacity=function(h){f.mapAPI.mapController.setOpacity(f.layerDto.id,h);return e};e.getFeatures=function(){return f.mapAPI.mapController.getLayerFeatures(f.layerDto.id)};e.addFeature=function(j){if(j.then!==null&&typeof j.then==="function"){if(f.layerControllerIsReady){j.then(function(k){f.mapAPI.mapController.addFeatureToLayer(f.layerDto.id,k)})}else{f.featurePromises.push(j)}return j}else{var i=b.defer();if(f.layerControllerIsReady){var h=f.mapAPI.mapController.addFeatureToLayer(f.layerDto.id,j);g(i,h)}else{f.featurePromises.push(i.promise);g(i,j)}return i.promise}};var g=function(h,i){d(function(){h.resolve(i)})};e.createFeatureAsync=function(j,h){var i=b.defer();f.gaFeatures.push({deferred:i,feature:j,isLonLatOrderValid:h});return i.promise};e.createFeature=function(h){return f.mapAPI.mapController.createFeature(h)};e.removeFeature=function(h){f.mapAPI.mapController.removeFeatureFromLayer(f.layerDto.id,h)};e.isLayerControllerReady=function(){return f.layerControllerIsReady};if(f.controllerEmitEventName){f.$emit(f.controllerEmitEventName,e)}return e}],transclude:false,link:function(e,h,f,j){e.mapAPI={};e.mapAPI.mapController=j;var i=a.defaultLayerOptions(f,j.getFrameworkVersion());i.datumProjection=e.projection||j.getProjection();i.postAddLayer=e.postAddLayer;var g=a.createFeatureLayer(i,j.getFrameworkVersion());j.addLayer(g).then(function(k){e.layerDto=k;e.layerControllerIsReady=true;b.all(e.featurePromises).then(function(l){for(var n=0;n<l.length;n++){var m=l[n];j.addFeatureToLayer(e.layerDto.id,m)}})});e.$on("$destroy",function(){if(e.layerDto.id!=null){e.onLayerDestroy({map:j.getMapInstance()})}d(function(){a.cleanupLayer(j.getMapInstance(),e.layerDto.id)})});f.$observe("visibility",function(k){if(e.layerDto!=null){j.setLayerVisibility(e.layerDto.id,k)}})}}}]);app.directive("gaFeature",[function(){return{restrict:"E",require:"^gaFeatureLayer",scope:{visibility:"@",geoJsonFeature:"=",inputFormat:"@",isLonLatOrderValid:"@"},transclude:false,link:function(a,d,c,b){var f=true;var e=function(h,g){if(!h&&g){b.removeFeature(a.featureDto.id)}if(h&&h!==g){if(a.featureDto!=null&&a.featureDto.id.length>0){b.removeFeature(a.featureDto.id)}f=false;var i=b.createFeature(a.geoJsonFeature);b.addFeature(i).then(function(k){a.featureDto=k})}if(h&&f){var j=b.createFeature(a.geoJsonFeature);f=false;b.addFeature(j).then(function(k){a.featureDto=k})}};a.$on("$destroy",function(){if(a.featureDto!=null){b.removeFeature(a.featureDto.id)}if(a.geoJsonFeatureWatch!=null){a.geoJsonFeatureWatch()}});a.geoJsonFeatureWatch=a.$watch("geoJsonFeature",e)}}}]);var angular=angular||{};var $=$||{};var app=angular.module("gawebtoolkit.core.layer-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.layer-services","gawebtoolkit.core.map-services"]);app.directive("gaMapLayer",["$timeout","$compile","GALayerService","$log",function(c,b,a,d){return{restrict:"E",require:"^gaMap",scope:{layerAttribution:"@",layerName:"@",layerUrl:"@",layers:"@",layerType:"@",wrapDateLine:"@",visibility:"@",isBaseLayer:"@",opacity:"@",controllerEmitEventName:"@",refreshLayer:"@",maxZoomLevel:"@",minZoomLevel:"@",onError:"&",format:"@"},transclude:false,controller:["$scope",function(f){var e=this;e.hide=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,false);return e};e.show=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,true);return e};e.setOpacity=function(g){f.mapAPI.mapController.setOpacity(f.layerDto.id,g);return e};if(f.controllerEmitEventName){f.$emit(f.controllerEmitEventName,e)}return e}],link:function(n,i,m,e){n.framework=e.getFrameworkVersion();m.$observe("refreshLayer",function(p,o){if(p!==o){d.info("refresh for - "+n.layerName);n.initialiseLayer()}});n.mapAPI={};n.mapAPI.mapController=e;var k,j;var l=function(){n.layerReady=true};function g(){if(m.layers==null){m.layers="0"}if(m.wrapDateLine==null){m.wrapDateLine=true}if(m.visibility==null){m.visibility=true}if(m.layerType==null||m.layerType.length===0){if(m.layerUrl.indexOf("WMSServer")>0){m.layerType="WMS"}}}var h=function(){g();n.constructionInProgress=true;k=a.defaultLayerOptions(m,n.framework);k.initialExtent=e.getInitialExtent();k.mapElementId=e.getMapElementId();k.format=n.format;d.info(k.layerName+" - constructing...");if(k.layerType.length===0){return}j=a.createLayer(k,n.framework);e.addLayer(j).then(function(o){n.layerDto=o;l();d.info("construction complete...");n.constructionInProgress=false},function(o){n.$emit(k.layerName+"_error",k);n.onError({message:o,layer:k});l();d.info("construction failed...");n.constructionInProgress=false})};m.$observe("visibility",function(){if(n.layerReady&&e&&n.layerDto!=null&&n.layerDto.id){e.setLayerVisibility(n.layerDto.id,n.visibility==="true")}});m.$observe("opacity",function(){if(n.layerReady&&e&&n.layerDto!=null&&n.layerDto.id){e.setOpacity(n.layerDto.id,n.opacity)}});n.initCount=0;function f(){d.info("reconstructing layer...");var o=e.getLayers();var q=null;for(var p=0;p<o.length;p++){if(o[p].id===n.layerDto.id){q=p;break}}if(q!=null){e.removeLayerById(n.layerDto.id);n.layerDto=null;g();k=a.defaultLayerOptions(m,n.framework);k.initialExtent=e.getInitialExtent();k.format=n.format;j=a.createLayer(k,n.framework);e.addLayer(j).then(function(r){n.layerDto=r;l();if(n.layerDto!=null){var s=q-e.getLayers().length+1;e.raiseLayerDrawOrder(n.layerDto.id,s)}})}}n.initialiseLayer=function(){d.info("initialising layer...");if(n.layerDto!=null){f()}else{if(n.layerReady&&n.constructionInProgress){d.info("...")}else{h()}}};n.$on("$destroy",function(){if(n.layerDto){e.removeLayerById(n.layerDto.id)}$(window).off("resize.Viewport")});if(m.refreshLayer==null&&n.layerType!=null&&n.layerType.length>0){n.initialiseLayer()}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.layer-services",["gawebtoolkit.mapservices"]);app.service("GALayerService",["ga.config","mapLayerServiceLocator",function(b,a){return{createLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createLayer(e)},createFeatureLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createFeatureLayer(e)},createGoogleLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createGoogleLayer(e)},createBingLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createBingLayer(e)},createOsmLayer:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.createOsmLayer(e)},removeLayerByName:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayerByName(e,f)},removeLayersByName:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayersByName(e,f)},removeLayer:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayer(e,f)},removeLayerById:function(f,e,d){var g=d||"olv2";var c=a.getImplementation(g);c.removeLayerById(f,e)},getMarkerCountForLayerName:function(e,f,d){var g=d||"olv2";var c=a.getImplementation(g);return c.getMarkerCountForLayerName(e,f)},registerFeatureSelected:function(f,e,i,g,d){var h=d||"olv2";var c=a.getImplementation(h);return c.registerFeatureSelected(f,e,i,g)},defaultLayerOptions:function(e,d){var f=d||"olv2";var c=a.getImplementation(f);return c.defaultLayerOptions(e,new b())},createFeature:function(f,d,e){var g=e||"olv2";var c=a.getImplementation(g);return c.createFeature(f,d)},cleanupLayer:function(f,e,d){var g=d||"olv2";var c=a.getImplementation(g);return c.cleanupLayer(f,e)},registerLayerEvent:function(g,e,f,i,d){var h=d||"olv2";var c=a.getImplementation(h);c.registerLayerEvent(g,e,f,i)},unRegisterMapEvent:function(g,e,f,i,d){var h=d||"olv2";var c=a.getImplementation(h);c.unRegisterMapEvent(g,e,f,i)},addFeatureToLayer:function(f,e,g,d){var h=d||"olv2";var c=a.getImplementation(h);return c.addFeatureToLayer(f,e,g)},parselatLong:function(c){if(!c){return null}var e,d;e=c.split(",");d={lat:"",lon:""};d.lat=e[0];d.lon=e[1];return d},filterFeatureLayer:function(g,e,i,f,d){var h=d||"olv2";var c=a.getImplementation(h);c.filterFeatureLayer(g,e,i,f)},getLayerFeatures:function(f,e,d){var g=d||"olv2";var c=a.getImplementation(g);return c.getLayerFeatures(f,e)},removeFeatureFromLayer:function(f,e,g,d){var h=d||"olv2";var c=a.getImplementation(h);return c.removeFeatureFromLayer(f,e,g)},raiseLayerDrawOrder:function(f,e,h,d){var g=d||"olv2";var c=a.getImplementation(g);return c.raiseLayerDrawOrder(f,e,h)}}}]);app.service("mapLayerServiceLocator",["$injector",function(b){var a={olv2:"olv2LayerService",olv3:"olv3LayerService"};return{getImplementation:function(c){return b.get(a[c])}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var app=angular.module("gawebtoolkit.core.map-config",[]);app.value("ga.config",function(){var a={standardTileSize:256,largeTileSize:1024,veryLargeTileSize:2048,minMapWidth:900,minMapHeight:600,panIncrement:30,smallPanIncrement:5,transitionEffect:"resize",visibility:true,isBaseLayer:false,wrapDateLine:true,sphericalMercator:true,bingLayerType:"Road",opacity:1,layerAttribution:"",displayInLayerSwitcher:true,projection:"EPSG:102100",displayProjection:"EPSG:4326",numZoomLevels:15,transparent:true,format:"image/png",tileSize:function(c){var b;if(c){if(c==="large"){b=new OpenLayers.Size(a.largeTileSize,a.largeTileSize)}else{if(c==="vlarge"){b=new OpenLayers.Size(a.veryLargeTileSize,a.veryLargeTileSize)}}}else{b=new OpenLayers.Size(a.standardTileSize,a.standardTileSize)}return b},layerType:"WMS"};return{defaultOptions:a,olv2Options:a,cesiumOptions:{includeCustomTerrainProvider:false,customTerrainProviderUrl:null},olv3Options:{renderer:"canvas"}}});var angular=angular||{};var $=$||{};var app=angular.module("gawebtoolkit.core.map-directives",["gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMap",["$timeout","$compile","GAMapService","GALayerService","GADataService","$q","$log",function(d,c,g,a,f,b,e){return{restrict:"E",scope:{mapElementId:"@",datumProjection:"@",displayProjection:"@",centerPosition:"@",zoomLevel:"@",isStaticMap:"@",initialExtent:"=",framework:"@"},controller:["$scope",function(j){e.info("map creation started...");$("#"+j.mapElementId).empty();j.initialPositionSet=false;j.layerPromises=[];j.layerDtoPromises=[];function i(){var l=$("ga-map-layer,ga-feature-layer,ga-marker-layer");var r=h.getLayers();var k=0;for(var o=0;o<l.length;o++){var m=l[o];var q=$(m).isolateScope();var s=q.layerDto!=null?q.layerDto.id:null;if(s!=null){for(var n=0;n<r.length;n++){var p=r[n];if(p.id===s){if(k!==n){}}}k++}}}var h=this;h.addLayer=function(l){var n=b.defer();var k=b.defer();if(l.then!==null&&typeof l.then==="function"){n=l;if(j.layersReady){l.then(function(o){if(o==null){e.info("failed to load layer")}else{var p=g.addLayer(j.mapInstance,o,j.framework);k.resolve(p);i();j.$emit("layerAdded",p)}})}else{j.layerPromises.push(n);j.layerDtoPromises.push(k)}}else{if(j.layersReady){var m=g.addLayer(j.mapInstance,l,j.framework);k.resolve(m);i();j.$emit("layerAdded",m)}else{j.layerPromises.push(n.promise);j.layerDtoPromises.push(k);n.resolve(l)}}return k.promise};h.getMapOptions=function(){return{mapElementId:j.mapElementId,datumProjection:j.datumProjection,displayProjection:j.displayProjection,centerPosition:j.centerPosition,zoomLevel:j.zoomLevel,initialExtent:j.initialExtent}};h.createLayer=function(k){var l=a.defaultLayerOptions(k,j.framework);return a.createLayer(l,j.framework)};h.zoomToMaxExtent=function(){g.zoomToMaxExtent(j.mapInstance,j.framework)};h.currentZoomLevel=function(){return g.currentZoomLevel(j.mapInstance,j.framework)};h.registerMapMouseMove=function(k){g.registerMapMouseMove(j.mapInstance,k,j.framework)};h.registerMapMouseMoveEnd=function(k){g.registerMapMouseMoveEnd(j.mapInstance,k,j.framework)};h.registerMapClick=function(k){g.registerMapClick(j.mapInstance,k,j.framework)};h.unRegisterMapClick=function(k){g.unRegisterMapClick(j.mapInstance,k,j.framework)};h.addControl=function(m,n,k,l){return g.addControl(j.mapInstance,m,n,k,l,h.getMapOptions(),j.framework)};h.getLonLatFromPixel=function(l,m,k){return g.getLonLatFromPixel(j.mapInstance,l,m,k,j.framework)};h.getPixelFromLonLat=function(l,k){return g.getPixelFromLonLat(j.mapInstance,l,k,j.framework)};h.getPointFromEvent=function(k){return g.getPointFromEvent(k,j.framework)};h.getLayers=function(){return g.getLayers(j.mapInstance,j.framework)};h.getLayersByName=function(k){return g.getLayersByName(j.mapInstance,k,j.framework)};h.zoomToLayer=function(k){g.zoomToLayer(j.mapInstance,k,j.framework)};h.getProjection=function(){return j.datumProjection};h.getDisplayProjection=function(){return j.displayProjection};h.setLayerVisibility=function(l,k){g.setLayerVisibility(j.mapInstance,l,k,j.framework)};h.createBoundingBox=function(k){return g.createBoundingBox(j.mapInstance,k,j.framework)};h.createBounds=function(l,k){return g.createBounds(j.mapInstance,l,k,j.framework)};h.zoomToExtent=function(k){g.zoomToExtent(j.mapInstance,k,j.framework)};h.zoomTo=function(k){g.zoomTo(j.mapInstance,k,j.framework)};h.setBaseLayer=function(k){g.setBaseLayer(j.mapInstance,k,j.framework)};h.setCenter=function(l,m,k){g.setCenter(j.mapInstance,l,m,k,j.framework)};h.getInitialExtent=function(){return j.initialExtent};h.setInitialPositionAndZoom=function(){var k={mapElementId:j.mapElementId,datumProjection:j.datumProjection,displayProjection:j.displayProjection,centerPosition:j.centerPosition,zoomLevel:j.zoomLevel,initialExtent:j.initialExtent};if(!j.centerPosition){j.centerPosition={lon:0,lat:0}}if(!j.initialPositionSet){g.setInitialPositionAndZoom(j.mapInstance,k,j.framework)}j.initialPositionSet=true};h.isBaseLayer=function(k){return g.isBaseLayer(j.mapInstance,k,j.framework)};h.getMapInstance=function(){return j.mapInstance};h.setOpacity=function(k,l){g.setOpacity(j.mapInstance,k,l,j.framework)};h.getMapElementId=function(){return j.mapElementId};h.setMapMarker=function(k,n,m,l){g.setMapMarker(j.mapInstance,k,n,m,l,j.framework)};h.removeLayerByName=function(k){a.removeLayerByName(j.mapInstance,k,j.framework)};h.removeLayersByName=function(k){a.removeLayersByName(j.mapInstance,k,j.framework)};h.removeLayer=function(k){a.removeLayer(j.mapInstance,k,j.framework)};h.removeLayerById=function(k){a.removeLayerById(j.mapInstance,k,j.framework)};h.getMarkerCountForLayerName=function(k){return a.getMarkerCountForLayerName(j.mapInstance,k,j.framework)};h.drawPolyLine=function(l,k){g.drawPolyLine(j.mapInstance,l,k,j.framework)};h.removeSelectedFeature=function(k){return g.removeSelectedFeature(j.mapInstance,k,j.framework)};h.removeFeature=function(k,l){return g.removeFeature(j.mapInstance,k,l,j.framework)};h.startDrawingOnLayer=function(l,k){return g.startDrawingOnLayer(j.mapInstance,l,k,j.framework)};h.stopDrawing=function(){return g.stopDrawing(j.mapInstance,j.framework)};h.drawLabel=function(l,k){return g.drawLabel(j.mapInstance,l,k,j.framework)};h.drawLabelWithPoint=function(l,k){return g.drawLabelWithPoint(j.mapInstance,l,k,j.framework)};h.isControlActive=function(k,l){return g.isControlActive(j.mapInstance,k,l,j.framework)};h.getLayersByWMSCapabilities=function(k){return f.getLayersByWMSCapabilities(k,j.framework)};h.getWMSFeatures=function(k,m,o,l,n){return f.getWMSFeatures(j.mapInstance,k,m,o,l,n,j.framework)};h.getWMSFeaturesByLayerId=function(l,k,m){return f.getWMSFeaturesByLayerId(j.mapInstance,l,k,m,j.framework)};h.registerFeatureSelected=function(k,m,l){return a.registerFeatureSelected(j.mapInstance,k,m,l,j.framework)};h.getFeatureInfo=function(q,m,o,n,p,k,l){return g.getFeatureInfo(j.mapInstance,q,m,o,n,p,k,l,j.framework)};h.getFeatureInfoFromLayer=function(n,l,k,m){return g.getFeatureInfoFromLayer(j.mapInstance,n,l,k,m,j.framework)};h.resetMapFired=function(){j.$emit("resetMapFired")};h.activateControl=function(k){g.activateControl(j.mapInstance,k,j.framework)};h.deactivateControl=function(k){g.deactivateControl(j.mapInstance,k,j.framework)};h.registerControlEvent=function(l,k,m){g.registerControlEvent(j.mapInstance,l,k,m,j.framework)};h.unRegisterControlEvent=function(l,k,m){g.unRegisterControlEvent(j.mapInstance,l,k,m,j.framework)};h.registerMapEvent=function(k,l){g.registerMapEvent(j.mapInstance,k,l,j.framework)};h.registerLayerEvent=function(k,l,m){a.registerLayerEvent(j.mapInstance,k,l,m,j.framework)};h.unRegisterLayerEvent=function(k,l,m){a.unRegisterLayerEvent(j.mapInstance,k,l,m,j.framework)};h.unRegisterMapEvent=function(k,l){g.unRegisterMapEvent(j.mapInstance,k,l,j.framework)};h.getCurrentMapExtent=function(){return g.getCurrentMapExtent(j.mapInstance,j.framework)};h.switch3d=function(){if(!g.is3dSupported(j.mapInstance,j.framework)){return}if(!g.is3d(j.mapInstance,j.framework)){g.switchTo3dView(j.mapInstance,j.framework)}else{g.switchTo2dView(j.mapInstance,j.framework)}};h.is3d=function(){if(!g.is3dSupported(j.mapInstance,j.framework)){return false}return g.is3d(j.mapInstance,j.framework)};h.filterFeatureLayer=function(k,m,l){a.filterFeatureLayer(j.mapInstance,k,m,l,j.framework)};h.getLayerFeatures=function(k){return a.getLayerFeatures(j.mapInstance,k,j.framework)};h.createFeature=function(k){return a.createFeature(j.mapInstance,k,j.framework)};h.addFeatureToLayer=function(k,l){return a.addFeatureToLayer(j.mapInstance,k,l,j.framework)};h.createWfsClient=function(m,p,o,l,q,n,k){return g.createWfsClient(m,p,o,l,q,n,k,j.framework)};h.addWfsClient=function(k){return g.addWfsClient(k,j.framework)};h.searchWfs=function(k,m,l){return g.searchWfs(j.mapInstance,k,m,l,j.framework)};h.getMeasureFromEvent=function(k){return g.getMeasureFromEvent(j.mapInstance,k,j.framework)};h.removeFeatureFromLayer=function(k,l){a.removeFeatureFromLayer(j.mapInstance,k,l,j.framework)};h.raiseLayerDrawOrder=function(k,l){a.raiseLayerDrawOrder(j.mapInstance,k,l,j.framework)};h.getFrameworkVersion=function(){return j.framework};j.gaMap=h;$(window).bind("resize",function(){g.mapResized(j.mapInstance,j.framework)});j.mapInstance=g.initialiseMap({mapElementId:j.mapElementId,datumProjection:j.datumProjection,displayProjection:j.displayProjection,initialExtent:j.initialExtent,centerPosition:j.centerPosition,zoomLevel:j.zoomLevel,isStaticMap:j.isStaticMap},j.framework);j.$emit("mapInstanceReady",j.mapInstance);j.$emit("mapControllerReady",h);j.$broadcast("mapControllerReady",h);j.$on("$destroy",function(){e.info("map destruction started...");$(window).off("resize.Viewport");d(function(){e.info("map destruction finishing...");e.info("removing "+j.gaMap.getLayers().length+" layers...");var m=j.gaMap.getLayers();for(var l=0;l<m.length;l++){var k=m[l];j.gaMap.removeLayerById(k.id)}})})}],link:function(k,j,i){d(function(){b.allSettled(k.layerPromises).then(function(l){h(l)},function(l){h(l)})});function h(p){e.info("resolving all layers");var l=[];for(var n=0;n<p.length;n++){var m=p[n];if(typeof m==="string"){k.layerDtoPromises[n].reject(m)}else{var o=g.addLayer(k.mapInstance,m,k.framework);k.layerDtoPromises[n].resolve(o);l.push(o)}}k.$emit("layersReady",l);k.$broadcast("layersReady",l);k.layersReady=true;k.gaMap.setInitialPositionAndZoom()}},transclude:false}}]);app.config(["$provide",function(a){a.decorator("$q",["$delegate",function(c){var b=c;b.allSettled=b.allSettled||function(h){var f=b.defer();if(angular.isArray(h)){var e=[];var g=[];var d=false;angular.forEach(h,function(k,j){e[j]=false});var i=function(l,m,k,j){var n=true;angular.forEach(l,function(o){if(!o){n=false}});if(n){if(j){k.reject(m)}else{k.resolve(m)}}};angular.forEach(h,function(k,j){b.when(k).then(function(l){e[j]=true;g[j]=l;i(e,g,f,d)},function(l){e[j]=true;g[j]=l;d=true;i(e,g,f,d)})})}else{throw"allSettled can only handle an array of promises (for now)"}return f.promise};return b}])}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.map-services",["gawebtoolkit.mapservices"]);app.service("GAMapService",["$log","ga.config","mapServiceLocator",function(c,a,b){return{initialiseMap:function(g,f){var i=f||"olv2";var d=b.getImplementation(i);try{return d.initialiseMap(g,new a())}catch(h){c.error("Failed to initialise map");throw h}},zoomToMaxExtent:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);d.zoomToMaxExtent(f)},zoomTo:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.zoomTo(f,g)},currentZoomLevel:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.currentZoomLevel(f)},addLayer:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.addLayer(f,g)},registerMapMouseMove:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.registerMapMouseMove(f,h)},registerMapMouseMoveEnd:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.registerMapMouseMoveEnd(f,h)},registerMapClick:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.registerMapClick(f,h)},unRegisterMapClick:function(f,h,e){var g=e||"olv2";var d=b.getImplementation(g);d.unRegisterMapClick(f,h)},registerMapEvent:function(g,f,i,e){var h=e||"olv2",d=b.getImplementation(h);d.registerMapEvent(g,f,i,e)},unRegisterMapEvent:function(g,f,i,e){var h=e||"olv2",d=b.getImplementation(h);d.unRegisterMapEvent(g,f,i,e)},getCurrentMapExtent:function(f,e){var g=e||"olv2",d=b.getImplementation(g);return d.getCurrentMapExtent(f)},addControl:function(d,g,j,f,l,e,i){var k=i||"olv2";var h=b.getImplementation(k);return h.addControl(d,g,j,f,l,e)},isControlActive:function(f,g,h,e){var i=e||"olv2";var d=b.getImplementation(i);return d.isControlActive(f,g,h)},activateControl:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.activateControl(f,g)},deactivateControl:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.deactivateControl(f,g)},registerControlEvent:function(g,h,f,j,e){var i=e||"olv2";var d=b.getImplementation(i);d.registerControlEvent(g,h,f,j)},unRegisterControlEvent:function(g,h,f,j,e){var i=e||"olv2";var d=b.getImplementation(i);d.unRegisterControlEvent(g,h,f,j)},getLayers:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.getLayers(f)},getLayersByName:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.getLayersByName(f,g)},zoomToLayer:function(g,f,e){var h=e||"olv2";var d=b.getImplementation(h);d.zoomToLayer(g,f)},setLayerVisibility:function(h,g,f,e){var i=e||"olv2";var d=b.getImplementation(i);d.setLayerVisibility(h,g,f)},createBoundingBox:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.createBoundingBox(f,g)},createBounds:function(g,h,e,f){var i=f||"olv2";var d=b.getImplementation(i);return d.createBounds(g,h,e)},zoomToExtent:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.zoomToExtent(f,g)},setCenter:function(g,h,i,e,f){var j=f||"olv2";var d=b.getImplementation(j);d.setCenter(g,h,i,e)},setInitialPositionAndZoom:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);d.setInitialPositionAndZoom(f,g,new a())},setBaseLayer:function(g,f,e){var h=e||"olv2";var d=b.getImplementation(h);d.setBaseLayer(g,f)},isBaseLayer:function(g,f,e){var h=e||"olv2";var d=b.getImplementation(h);return d.isBaseLayer(g,f)},setOpacity:function(g,f,h,e){var i=e||"olv2";var d=b.getImplementation(i);d.setOpacity(g,f,h)},mapResized:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);d.mapResized(f)},setMapMarker:function(f,i,j,h,g,e){var k=e||"olv2";var d=b.getImplementation(k);d.setMapMarker(f,i,j,h,g)},getLonLatFromPixel:function(h,f,j,e,g){var i=g||"olv2";var d=b.getImplementation(i);return d.getLonLatFromPixel(h,f,j,e)},getPixelFromLonLat:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.getPixelFromLonLat(f,h,g)},getPointFromEvent:function(g,f){var h=f||"olv2";var d=b.getImplementation(h);return d.getPointFromEvent(g)},drawPolyLine:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.drawPolyLine(f,h,g)},removeSelectedFeature:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.removeSelectedFeature(f,g)},removeFeature:function(f,g,h,e){var i=e||"olv2";var d=b.getImplementation(i);return d.removeFeature(f,g,h)},drawFeature:function(f,g,e){var h=e||"olv2";var d=b.getImplementation(h);return d.drawFeature(f,g)},startDrawingOnLayer:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.startDrawingOnLayer(f,h,g)},stopDrawing:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.stopDrawing(f)},drawLabel:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.drawLabel(f,h,g)},drawLabelWithPoint:function(f,h,g,e){var i=e||"olv2";var d=b.getImplementation(i);return d.drawLabelWithPoint(f,h,g)},createWfsClient:function(d,k,h,i,e,g,f,l){var m=l||"olv2";var j=b.getImplementation(m);return j.createWfsClient(d,k,h,i,e,g,f)},getFeatureInfo:function(e,n,d,i,g,f,l,k,j){var m=j||"olv2";var h=b.getImplementation(m);return h.getFeatureInfo(e,n,d,i,g,f,l,k)},getFeatureInfoFromLayer:function(i,k,g,e,h,f){var j=f||"olv2";var d=b.getImplementation(j);return d.getFeatureInfoFromLayer(i,k,g,e,h)},getMeasureFromEvent:function(g,h,f){var i=f||"olv2";var d=b.getImplementation(i);return d.getMeasureFromEvent(g,h)},addWfsClient:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.addWfsClient(f)},is3dSupported:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.is3dSupported(f)},is3d:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.is3d(f)},switchTo3dView:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.switchTo3dView(f)},switchTo2dView:function(f,e){var g=e||"olv2";var d=b.getImplementation(g);return d.switchTo2dView(f)},searchWfs:function(g,e,i,h,f){var j=f||"olv2";var d=b.getImplementation(j);return d.searchWfs(g,e,i,h)}}}]);app.service("mapServiceLocator",["$injector",function(b){var a={olv2:"olv2MapService",olv3:"olv3MapService"};return{getImplementation:function(c){return b.get(a[c])}}}]);var angular=angular||{};var app=angular.module("gawebtoolkit.core.marker-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMapMarker",[function(){return{restrict:"E",require:"^gaMap",scope:{markerIcon:"@",markerLong:"@",markerLat:"@",markerId:"@",mapMarkerClicked:"&"},link:function(c,b,a,d){b.bind("click",function(){c.mapMarkerClicked({id:c.markerId})});if(!c.mapControlName){return}d.addControl(c.mapControlName,c.controlOptions,b)}}}]);var angular=angular||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.utils",[]);app.service("GAWTUtils",[function(){return{generateUuid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(d){var b=Math.random()*16|0,a=d=="x"?b:(b&3|8);return a.toString(16)})},convertHexToRgb:function(d){function b(f){return parseInt((c(f)).substring(0,2),16)}function a(f){return parseInt((c(f)).substring(2,4),16)}function e(f){return parseInt((c(f)).substring(4,6),16)}function c(f){return(f.charAt(0)=="#")?f.substring(1,7):f}return[b(d),a(d),e(d)]},convertHexAndOpacityToRgbArray:function(e,c){function b(g){return parseInt((d(g)).substring(0,2),16)}function a(g){return parseInt((d(g)).substring(2,4),16)}function f(g){return parseInt((d(g)).substring(4,6),16)}function d(g){return(g.charAt(0)=="#")?g.substring(1,7):g}return[b(e),a(e),f(e),c]}}}]);(function(){var b=angular.module("gawebtoolkit.mapservices.data.openlayersv2",[]);var a=["$q","$http",function(d,f){function c(j,l,r,m){var q=j.projection;var h=j.getExtent();var w=h.toBBOX();var u=(event instanceof MouseEvent)?l.xy:l;var t=j.getSize().h/2;var o=j.getSize().w/2;var s=new OpenLayers.Geometry.Point(o,t);var k=j.getSize().w;var n=j.getSize().h;var g={x:u.x,y:u.y};var i;if(j.getSize().w>=2050){if(u.x>s.x){if(u.y>s.y){var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,s.y));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(j.getSize().w,j.getSize().h));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat);g.x=u.x-o;g.y=u.y-t}else{var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,0));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(j.getSize().w,j.getSize().h));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat);g.x=u.x-o}}else{if(u.y>s.y){var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,s.y));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,j.getSize().h));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat);g.y=u.y-t}else{var v=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,0));var p=j.getLonLatFromPixel(new OpenLayers.Geometry.Point(s.x,s.y));i=new OpenLayers.Bounds(v.lon,p.lat,p.lon,v.lat)}}w=i.toBBOX();n=Math.floor(t);k=Math.floor(o)}return OpenLayers.Util.extend({service:"WMS",version:r,request:"GetFeatureInfo",bbox:w,feature_count:100,height:n,width:k,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:m},(parseFloat(r)>=1.3)?{crs:q,i:parseInt(g.x),j:parseInt(g.y)}:{srs:q,x:parseInt(g.x),y:parseInt(g.y)})}function e(i){var g;var h;if(i&&typeof i==="string"&&i.indexOf("application/vnd.ogc.gml/3")===0){h="application/vnd.ogc.gml/3"}else{h=i}switch(h){case"application/vnd.ogc.gml":g=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":g=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":g=OpenLayers.Format.Text;break;case"application/json":g=OpenLayers.Format.GeoJSON;break;default:g=OpenLayers.Format.WMSGetFeatureInfo;break}return g}return{getLayersByWMSCapabilities:function(h){var g=d.defer();f.get(h+"?request=GetCapabilities").success(function(l,i,n,j){var m=new OpenLayers.Format.WMSCapabilities();var k=m.read(l).capability.layers;g.resolve(k)});return g.promise},getWMSFeatures:function(h,g,m,l,i,o){var j=o||"text/xml";var p=d.defer();var k=c(h,i,l,j);if(m.length!==0){k=OpenLayers.Util.extend({layers:m,query_layers:m},k)}OpenLayers.Util.applyDefaults(k,{});var n={url:g,params:OpenLayers.Util.upperCaseObject(k),callback:function(s){var t=new (e(j))();var r=t.read(s.responseText);var u=new OpenLayers.Format.GeoJSON();var q=angular.fromJson(u.write(r));p.resolve(q)},scope:this};OpenLayers.Request.GET(n);return p.promise},getWMSFeaturesByLayerId:function(k,h,m,u){var j=function(x){var i;if(x.params.STYLES){i=x.params.STYLES}else{if(OpenLayers.Util.isArray(x.params.LAYERS)){i=new Array(x.params.LAYERS.length)}else{i=x.params.LAYERS.toString().replace(/[^,]/g,"")}}return i};var w=d.defer();var r=[],v=[];var o=[k.getLayersBy("id",m)[0]];for(var n=0,q=o.length;n<q;n++){if(o[n].params.LAYERS!=null){r=r.concat(o[n].params.LAYERS);v=v.concat(j(o[n]))}}var g=o[0];var p=k.getProjection();var s=g.projection;if(s&&s.equals(k.getProjectionObject())){p=s.getCode()}var l=OpenLayers.Util.extend({service:"WMS",version:g.params.VERSION,request:"GetFeatureInfo",exceptions:g.params.EXCEPTIONS,bbox:k.getExtent().toBBOX(null,g.reverseAxisOrder()),feature_count:100,height:k.getSize().h,width:k.getSize().w,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:g.params.INFO_FORMAT||"text/xml"},(parseFloat(g.params.VERSION)>=1.3)?{crs:p,i:parseInt(u.x),j:parseInt(u.y)}:{srs:p,x:parseInt(u.x),y:parseInt(u.y)});if(r.length!==0){l=OpenLayers.Util.extend({layers:r,query_layers:r,styles:v},l)}OpenLayers.Util.applyDefaults(l,{});var t={url:h,params:OpenLayers.Util.upperCaseObject(l),callback:function(y){var z=new OpenLayers.Format.WMSGetFeatureInfo();var x=z.read(y.responseText);var A=new OpenLayers.Format.GeoJSON();var i=angular.fromJson(A.write(x));w.resolve(i)},scope:this};OpenLayers.Request.GET(t);return w.promise}}}];b.service("WMSDataService",a);b.service("olv2DataService",a)})();(function(){var b=angular.module("gawebtoolkit.mapservices.data.openlayersv3",[]);var a=["$q","$http",function(d,f){function c(o,j,i,n){var y=o.getView().getProjection().getCode();var k=o.getView().calculateExtent(o.getSize());var w=new OpenLayers.Bounds(k[0],k[1],k[2],k[3]);var g=w.toBBOX();var u=(j instanceof ol.MapBrowserPointerEvent)?j.pixel:j;var r=o.getSize()[1]/2;var l=o.getSize()[0]/2;var v=[l,r];var h=o.getSize()[0];var t=o.getSize()[1];var q={x:u[0],y:u[1]};var p;if(o.getSize()[0]>=2050){if(u[0]>v[0]){if(u[1]>v[1]){var s=o.getCoordinateFromPixel([v[0],v[1]]);var m=o.getCoordinateFromPixel([o.getSize()[0],o.getSize()[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1]);q.x=u[0]-l;q.y=u[1]-r}else{var s=o.getCoordinateFromPixel([v[0],0]);var m=o.getCoordinateFromPixel([o.getSize()[0],o.getSize()[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1]);q.x=u[0]-l}}else{if(u[1]>v[1]){var s=o.getCoordinateFromPixel([0,v[1]]);var m=o.getCoordinateFromPixel([v[0],o.getSize()[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1]);q.y=u[1]-r}else{var s=o.getCoordinateFromPixel([0,0]);var m=o.getCoordinateFromPixel([v[0],v[1]]);p=new OpenLayers.Bounds(s[0],m[1],m[0],s[1])}}g=p.toBBOX();t=Math.floor(r);h=Math.floor(l)}var x=OpenLayers.Util.extend({service:"WMS",version:i,request:"GetFeatureInfo",bbox:g,feature_count:100,height:t,width:h,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:n},(parseFloat(i)>=1.3)?{crs:y,i:parseInt(q.x),j:parseInt(q.y)}:{srs:y,x:parseInt(q.x),y:parseInt(q.y)});return x}function e(i){var g;var h;if(i&&typeof i==="string"&&i.indexOf("application/vnd.ogc.gml/3")===0){h="application/vnd.ogc.gml/3"}else{h=i}switch(h){case"application/vnd.ogc.gml":g=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":g=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":g=OpenLayers.Format.Text;break;case"application/json":g=OpenLayers.Format.GeoJSON;break;default:g=OpenLayers.Format.WMSGetFeatureInfo;break}return g}return{getLayersByWMSCapabilities:function(h){var g=d.defer();f.get(h+"?request=GetCapabilities").success(function(l,i,n,j){var m=new OpenLayers.Format.WMSCapabilities();var k=m.read(l).capability.layers;g.resolve(k)});return g.promise},getWMSFeatures:function(h,g,m,l,i,o){var j=o||"text/xml";var p=d.defer();var k=c(h,i,l,j);if(m.length!==0){k=OpenLayers.Util.extend({layers:m,query_layers:m},k)}OpenLayers.Util.applyDefaults(k,{});var n={url:g,params:OpenLayers.Util.upperCaseObject(k),callback:function(s){var t=new (e(j))();var r=t.read(s.responseText);var u=new OpenLayers.Format.GeoJSON();var q=angular.fromJson(u.write(r));p.resolve(q)},scope:this};OpenLayers.Request.GET(n);return p.promise},getWMSFeaturesByLayerId:function(k,h,m,t){var j=function(w){var i;if(w.getParams().STYLES){i=w.getParams().STYLES}else{if(OpenLayers.Util.isArray(w.getParams().LAYERS)){i=new Array(w.getParams().LAYERS.length)}else{i=w.getParams().LAYERS.toString().replace(/[^,]/g,"")}}return i};var v=d.defer();var r=[],u=[];var o=[k.getLayersBy("id",m)[0]];for(var n=0,q=o.length;n<q;n++){if(o[n].getParams().LAYERS!=null){r=r.concat(o[n].getParams().LAYERS);u=u.concat(j(o[n]))}}var g=o[0];var p=k.getView().getProjection().getCode();var l=OpenLayers.Util.extend({service:"WMS",version:g.getParams().VERSION,request:"GetFeatureInfo",bbox:k.getExtent().toBBOX(null),feature_count:100,height:k.getSize()[1],width:k.getSize()[0],format:OpenLayers.Format.WMSGetFeatureInfo,info_format:g.params.INFO_FORMAT||"text/xml"},(parseFloat(g.params.VERSION)>=1.3)?{crs:p,i:parseInt(t.x),j:parseInt(t.y)}:{srs:p,x:parseInt(t.x),y:parseInt(t.y)});if(r.length!==0){l=OpenLayers.Util.extend({layers:r,query_layers:r,styles:u},l)}OpenLayers.Util.applyDefaults(l,{});var s={url:h,params:OpenLayers.Util.upperCaseObject(l),callback:function(x){var y=new OpenLayers.Format.WMSGetFeatureInfo();var w=y.read(x.responseText);var z=new OpenLayers.Format.GeoJSON();var i=angular.fromJson(z.write(w));v.resolve(i)},scope:this};OpenLayers.Request.GET(s);return v.promise}}}];b.service("olv3DataService",a)})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var google=google||{};var app=angular.module("gawebtoolkit.mapservices.layer.openlayersv2",[]);app.service("olv2LayerService",["$log","$q","$timeout",function(d,b,c){var a={xyzTileCachePath:"/tile/${z}/${y}/${x}",createLayer:function(e){var f;switch(e.layerType){case"WMS":f=a.createWMSLayer(e);break;case"XYZTileCache":f=a.createXYZLayer(e);break;case"ArcGISCache":f=a.createArcGISCacheLayer(e);break;case"Vector":f=a.createFeatureLayer(e);break;case"GoogleStreet":case"GoogleHybrid":case"GoogleSatellite":case"GoogleTerrain":f=a.createGoogleMapsLayer(e);break;default:throw new Error("Invalid layerType used to create layer of name "+e.layerName+" - with layerType - "+e.layerType)}f.geoLayerType=e.layerType;return f},createGoogleLayer:function(f){if(f.layerType==null){throw new Error("'layerType' not specified for creating a Google Maps layer. Please specify a valid layer type, eg 'hybrid")}var g;switch(f.layerType.toLocaleLowerCase()){case"hybrid":g=google.maps.MapTypeId.HYBRID;break;case"satellite":g=google.maps.MapTypeId.SATELLITE;break;case"street":g=google.maps.MapTypeId.STREET;break;case"terrain":g=google.maps.MapTypeId.TERRAIN;break;default:g=google.maps.MapTypeId.HYBRID;break}var e={visibility:f.visibility===true||f.visibility==="true",type:g};return new OpenLayers.Layer.Google(f.layerType,e)},createBingLayer:function(f){var h;var g=f.layerName;switch(f.layerType.toLocaleLowerCase()){case"aerial":h="Aerial";g=g||"Bing Aerial";break;case"aerialwithlabels":h="AerialWithLabels";g=g||"Bing Aerial With Labels";break;case"birdseye":h="Birdseye";g=g||"Bing Birdseye";break;case"birdseyewithlabels":h="BirdseyeWithLabels";g=g||"Bing Birdseye With Labels";break;case"road":h="Road";g=g||"Bing Roads";break;default:h="Road";g=g||"Bing Roads";break}var e=new OpenLayers.Layer.Bing({key:f.bingApiKey,type:h,name:g,visibility:f.visibility===true||f.visibility==="true"});e.wrapDateLine=f.wrapDateLine||false;return e},createOsmLayer:function(f){var e=new OpenLayers.Layer.OSM(f.layerName||"OpenCycleMap");e.wrapDateLine=f.wrapDateLine||false;e.visibility=f.visibility===true||f.visibility==="true";return e},createFeatureLayer:function(e){var f;if(e.url==null){f=new OpenLayers.Layer.Vector(e.layerName)}else{a.postAddLayerCache=a.postAddLayerCache||[];f=new OpenLayers.Layer.Vector(e.layerName,{strategies:[new OpenLayers.Strategy.Fixed()],styleMap:new OpenLayers.StyleMap({"default":new OpenLayers.Style({pointRadius:"10",fillOpacity:0.6,fillColor:"#ffcc66",strokeColor:"#cc6633"}),select:{fillColor:"#8aeeef"}}),protocol:new OpenLayers.Protocol.WFS({url:e.url,featureType:e.wfsFeatureType,featurePrefix:e.wfsFeaturePrefix,version:e.wfsVersion,geometryName:e.wfsGeometryName,srsName:e.datumProjection}),visibility:e.visibility})}if(e.postAddLayer!=null){a.postAddLayerCache[f.id]=e.postAddLayer}return f},createGoogleMapsLayer:function(f){var g;switch(f.layerType){case"GoogleStreet":g=google.maps.MapTypeId.STREET;break;case"GoogleHybrid":g=google.maps.MapTypeId.HYBRID;break;case"GoogleSatellite":g=google.maps.MapTypeId.SATELLITE;break;case"GoogleTerrain":g=google.maps.MapTypeId.TERRAIN;break}var e={wrapDateLine:f.wrapDateLine,transitionEffect:f.transitionEffect,visibility:f.visibility===true||f.visibility==="true",isBaseLayer:f.isBaseLayer===true||f.isBaseLayer==="true",tileSize:f.tileSize(f.tileType),sphericalMercator:f.sphericalMercator,centerPosition:f.centerPosition,attribution:f.layerAttribution,numZoomLevels:20,type:g,animationEnabled:true};return new OpenLayers.Layer.Google(f.layerName,e)},clearFeatureLayer:function(f,e){},createXYZLayer:function(e){var f={layerName:e.layerName,layerUrl:e.layerUrl,options:{wrapDateLine:e.wrapDateLine,transitionEffect:e.transitionEffect,visibility:e.visibility===true||e.visibility==="true",isBaseLayer:e.isBaseLayer===true||e.isBaseLayer==="true",tileSize:e.tileSize(e.tileType),sphericalMercator:e.sphericalMercator,centerPosition:e.centerPosition,attribution:e.layerAttribution,opacity:e.opacity}};if(f.options.isBaseLayer){if(e.resolutions){f.options.resolutions=e.resolutions}if(e.zoomOffset){f.options.zoomOffset=e.zoomOffset}}if(e.maxZoomLevel!=null){if(e.maxZoomLevel.length>0){f.options.numZoomLevels=parseInt(e.maxZoomLevel)}}return new OpenLayers.Layer.XYZ(f.layerName,f.layerUrl+a.xyzTileCachePath,f.options)},createWMSLayer:function(e){var f={layerName:e.layerName,layerUrl:e.layerUrl,layers:e.layers,wrapDateLine:e.wrapDateLine,visibility:e.visibility===true||e.visibility==="true",isBaseLayer:e.isBaseLayer===true||e.isBaseLayer==="true",transitionEffect:e.transitionEffect,tileSize:e.tileSize(e.tileType),sphericalMercator:e.sphericalMercator,tileType:e.tileType,projection:e.datumProjection,transparent:e.transparent,attribution:e.layerAttribution,opacity:e.opacity};if(e.maxZoomLevel!=null){if(e.maxZoomLevel.length>0){f.numZoomLevels=parseInt(e.maxZoomLevel)}}return new OpenLayers.Layer.WMS(f.layerName,f.layerUrl,{layers:f.layers,format:f.format,transparent:f.transparent},f)},createArcGISCacheLayer:function(g){var f=b.defer();var h=new OpenLayers.Protocol.Script();var e=c(function(){f.reject("LayerTimeout")},10000);h.createRequest(g.layerUrl,{f:"json",pretty:"true"},function(j){c.cancel(e);if(j.error!=null&&j.error.code!=null){f.reject("LayerError - "+j.error.code);return}var k={layerName:g.layerName,layerUrl:g.layerUrl,options:{transitionEffect:g.transitionEffect,visibility:g.visibility===true||g.visibility==="true",isBaseLayer:g.isBaseLayer===true||g.isBaseLayer==="true",tileSize:g.tileSize(),alwaysInRange:false,displayInLayerSwitcher:false,opacity:g.opacity,attribution:g.layerAttribution}};if(g.maxZoomLevel!=null){if(g.maxZoomLevel.length>0){k.options.numZoomLevels=parseInt(g.maxZoomLevel)}}if(j){k.options.layerInfo=j;if(k.options.numZoomLevels==null){k.options.numZoomLevels=j.tileInfo.lods.length+1}}var i=new OpenLayers.Layer.ArcGISCache(k.layerName,k.layerUrl,k.options);f.resolve(i)});return f.promise},defaultLayerOptions:function(f,e){var g=angular.extend(e.defaultOptions,f);g.centerPosition=a.parselatLong(g.centerPosition);return g},cleanupLayer:function(f,e){if(f.layers==null||f.layers.length===0){return}var g=a.getLayerById(f,e);if(g!=null){f.removeLayer(g)}},createFeature:function(g,f){var e;if(g.projection!==f.crs.properties.name){e=new OpenLayers.Format.GeoJSON({externalProjection:f.crs.properties.name,internalProjection:g.projection})}else{e=new OpenLayers.Format.GeoJSON()}return e.read(angular.toJson(f),f.type)},addFeatureToLayer:function(g,f,i){var h=a.getLayerById(g,f);if(i instanceof Array){h.addFeatures(i)}else{h.addFeatures([i])}var j=new OpenLayers.Format.GeoJSON();var e=angular.fromJson(j.write(i));e.id=i.id;return e},parselatLong:function(e){if(!e){return null}return angular.fromJson(e)},getLayerById:function(g,e){var f;for(var h=0;h<g.layers.length;h++){if(g.layers[h].id===e){f=g.layers[h];break}}return f},removeLayerByName:function(e,f){var g=e.getLayersByName(f);if(g.length>0){e.removeLayer(g[0])}},removeLayersByName:function(e,f){var h=e.getLayersByName(f);for(var g=0;g<h.length;g++){e.removeLayer(h[g])}},removeLayer:function(e,f){e.removeLayer(f)},removeLayerById:function(f,e){var g=f.getLayersBy("id",e)[0];f.removeLayer(g)},removeFeatureFromLayer:function(f,e,i){var h=f.getLayersBy("id",e)[0];var g=h.getFeatureById(i);h.removeFeatures(g)},registerFeatureSelected:function(f,e,l,i){var h=f.getLayersBy("id",e)[0];var j=h.geoLayerType;var g;if(j==="WMS"){g=OpenLayers.Protocol.WFS.fromWMSLayer(h)}var k=f.getControl("ctrlGetFeature");if(k){f.removeControl(k)}k=new OpenLayers.Control.GetFeature({protocol:g,box:true,hover:true,multipleKey:"shiftKey",toggleKey:"ctrlKey"});k.metadata=k.metadata||{};k.metadata.type="getfeature";k.events.register("featureselected",i,l);return{id:"ctrlGetFeature",name:"getfeature"}},registerLayerEvent:function(g,e,f,i){var h=g.getLayersBy("id",e)[0];h.events.register(f,h,i)},unRegisterLayerEvent:function(g,e,f,i){var h=g.getLayersBy("id",e)[0];h.events.unregister(f,h,i)},getMarkerCountForLayerName:function(e,f){var h=e.getLayersByName(f);var g=0;if(h.length>0){g=h[0].markers==null?0:h[0].markers.length}return g},filterFeatureLayer:function(f,g,m,n){var l=a.getLayerById(f,g);var k=a.parseFeatureAttributes(n);var h=[];for(var j=0;j<k.length;j++){h.push(new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:k[j],matchCase:false,value:m.toUpperCase()+"*"}))}var e=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:h});if(e.filters.length===1){l.filter=h[0];l.refresh({force:true})}else{l.filter=e;l.refresh({force:true})}},parseFeatureAttributes:function(e){if(!e){return null}var f=[];if(e.indexOf(",")===-1){f.push(e)}else{f=e.split(",")}return f},getLayerFeatures:function(f,e){var j=[];var h=a.getLayerById(f,e);for(var g=0;g<h.features.length;g++){j.push(h.features[g])}return j},raiseLayerDrawOrder:function(f,e,h){var g=a.getLayerById(f,e);f.raiseLayer(g,h)},postAddLayerCache:{}};return a}]);(function(){var a=angular.module("gawebtoolkit.mapservices.layer.openlayersv3",[]);a.service("olv3LayerService",["$log","$q","$timeout","GeoLayer","GAWTUtils",function(f,c,d,e,g){var b={xyzTileCachePath:"/tile/{z}/{y}/{x}",createLayer:function(h){var i;switch(h.layerType){case"WMS":i=b.createWMSLayer(h);break;case"XYZTileCache":i=b.createXYZLayer(h);break;case"ArcGISCache":i=b.createArcGISCacheLayer(h);break;case"Vector":i=b.createFeatureLayer(h);break;case"GoogleStreet":case"GoogleHybrid":case"GoogleSatellite":case"GoogleTerrain":throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.");default:throw new Error("Invalid layerType used to create layer of name "+h.layerName+" - with layerType - "+h.layerType)}i.geoLayerType=h.layerType;if(h.maxZoomLevel){i.geoMaxZoom=parseInt(h.maxZoomLevel)}if(h.minZoomLevel){i.geoMinZoom=parseInt(h.minZoomLevel)}return i},createFeatureLayer:function(h){var i;if(h.url==null){i=new ol.layer.Vector({source:new ol.source.Vector(),format:new ol.format.GeoJSON()})}else{b.postAddLayerCache=b.postAddLayerCache||[];var j=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.6)"}),stroke:new ol.style.Stroke({color:"#319FD3",width:1}),text:new ol.style.Text({font:"12px Calibri,sans-serif",fill:new ol.style.Fill({color:"#000"}),stroke:new ol.style.Stroke({color:"#fff",width:3})})});i=new ol.layer.Vector({source:new ol.source.Vector({url:h.url,format:new ol.format.GeoJSON(),style:j})})}i.set("name",h.layerName);i.set("isBaseLayer",h.isBaseLayer||false);return i},createGoogleLayer:function(h){throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.")},createBingLayer:function(h){var k;var j=h.layerName;switch(h.layerType.toLocaleLowerCase()){case"aerial":k="Aerial";j=j||"Bing Aerial";break;case"aerialwithlabels":k="AerialWithLabels";j=j||"Bing Aerial With Labels";break;case"birdseye":k="Birdseye";j=j||"Bing Birdseye";break;case"birdseyewithlabels":k="BirdseyeWithLabels";j=j||"Bing Birdseye With Labels";break;case"road":k="Road";j=j||"Bing Roads";break;default:k="Road";break}var i=new ol.layer.Tile({source:new ol.source.BingMaps({key:h.bingApiKey,imagerySet:k})});i.set("name",j);i.setVisible(h.visibility===true||h.visibility==="true");return i},createOsmLayer:function(h){var i=new ol.layer.Tile({source:new ol.source.OSM()});i.setVisible(h.visibility===true||h.visibility==="true");return i},clearFeatureLayer:function(i,h){},createXYZLayer:function(j){var i={url:j.layerUrl+b.xyzTileCachePath,crossOrigin:"*/*"};if(j.layerAttribution!=null){i.attributions=[new ol.Attribution({html:j.layerAttribution})]}var k={opacity:j.opacity,source:new ol.source.XYZ(i),visible:j.visibility===true||j.visibility==="true"};var h=new ol.layer.Tile(k);h.set("name",j.layerName);h.set("isBaseLayer",j.isBaseLayer||false);return h},createWMSLayer:function(j){var i={};i.url=j.layerUrl;i.crossOrigin="anonymous";i.params={LAYERS:j.layers,TILED:true};if(j.format){i.params.FORMAT=j.format}i.wrapX=true;if(j.wrapDateLine!=null){i.wrapX=j.wrapDateLine==="true"||j.wrapDateLine===true}i.serverType=("mapserver");if(j.layerAttribution!=null){i.attributions=[new ol.Attribution({html:j.layerAttribution})]}var l=new ol.source.TileWMS(i);var k={};k.source=l;k.visible=j.visibility==="true"||j.visibility===true;k.opacity=j.opacity;var h=new ol.layer.Tile(k);h.set("name",j.layerName);h.set("isBaseLayer",j.isBaseLayer||false);return h},createArcGISCacheLayer:function(j){var i={url:j.layerUrl+b.xyzTileCachePath,crossOrigin:"*/*"};var k={opacity:j.opacity,source:new ol.source.XYZ(i),visible:j.visibility===true||j.visibility==="true"};var h=new ol.layer.Tile(k);h.set("name",j.layerName);h.set("isBaseLayer",j.isBaseLayer||false);return h},defaultLayerOptions:function(i,h){var j=angular.extend(h.defaultOptions,i);j.centerPosition=b.parselatLong(j.centerPosition);return j},cleanupLayer:function(i,h){var j=b.getLayerBy(i,"id",h);if(j!=null){i.removeLayer(j)}},createFeature:function(j,i){var h;if(j.getView().getProjection()!==i.crs.properties.name){h=new ol.format.GeoJSON({defaultDataProjection:i.crs.properties.name})}else{h=new new ol.format.GeoJSON({defaultDataProjection:j.getView().getProjection()})}return h.readFeature(angular.toJson(i),{dataProjection:i.crs.properties.name,featureProjection:j.getView().getProjection()})},addFeatureToLayer:function(j,i,m){var l=b.getLayerById(j,i);var o=l.getSource();if(typeof o.getFeatures!=="function"){throw new Error("Layer does not have a valid source for features.")}var n=new ol.format.GeoJSON();var k;if(m instanceof Array){o.addFeatures(m);k=n.writeFeatures(m)}else{o.addFeature(m);k=n.writeFeature(m)}var h=angular.fromJson(k);m.id=m.getId()||g.generateUuid();h.id=m.id;return h},parselatLong:function(h){if(!h){return null}return angular.fromJson(h)},getLayerById:function(i,h){return b.getLayerBy(i,"id",h)},getLayerBy:function(j,i,h){var k=null;var l=false;j.getLayers().forEach(function(m){if(h===m.get(i)&&l===false){k=m;l=true}});return k},getLayerByName:function(h,i){return b.getLayerBy(h,"name",i)},getLayersBy:function(j,i,h){var l=j.getLayers();var k=[];l.forEach(function(n){var m=n.get(i);if(m&&m.indexOf(h)!==-1){k.push(e.fromOpenLayersV3Layer(n))}});return k},_getLayersBy:function(j,i,h){var l=j.getLayers();var k=[];l.forEach(function(n){var m=n.get(i);if(m&&m.indexOf(h)!==-1){k.push(n)}});return k},removeLayerByName:function(h,i){var j=b._getLayersBy(h,"name",i);if(j.length>0){h.removeLayer(j[0])}},removeLayersByName:function(h,j){var l=b._getLayersBy(h,"name",j);for(var k=0;k<l.length;k++){h.removeLayer(l[k])}},removeLayer:function(h,i){h.removeLayer(i)},removeLayerById:function(i,h){var j=b._getLayersBy(i,"id",h)[0];i.removeLayer(j)},removeFeatureFromLayer:function(j,h,o){var m=b.getLayerById(j,h);var n=m.getSource().getFeatures();for(var l=0;l<n.length;l++){var k=n[l];if(k.id===o){m.getSource().removeFeature(k);break}}},registerFeatureSelected:function(k,j,o,n){b.registeredInteractions=b.registeredInteractions||[];for(var m=0;m<b.registeredInteractions.length;m++){var h=b.registeredInteractions[m];if(h.id===""+j+"_features"){k.removeInteraction(h.select)}}var l=new ol.interaction.Select({condition:ol.events.condition.click});l.on("select",function(i){if(i.target.get("id")===j){o(i)}});b.registeredInteractions.push({id:j+"_features",select:l});k.addInteraction(l)},registerLayerEvent:function(j,h,i,l){var k=b.getLayerBy(j,"id",h);k.getSource().on(i,l)},unRegisterLayerEvent:function(j,h,i,l){var k=b.getLayerBy(j,"id",h);k.getSource().un(i,l)},getMarkerCountForLayerName:function(h,i){var j=b.getLayerBy(h,"name",i);return j==null?0:typeof j.getSource().getFeatures==="undefined"?0:j.getSource().getFeatures().length},filterFeatureLayer:function(i,h,j){throw new Error("NotImplementedError")},parseFeatureAttributes:function(h){if(!h){return null}var i=[];if(h.indexOf(",")===-1){i.push(h)}else{i=h.split(",")}return i},getLayerFeatures:function(j,h){var m=[];var l=b.getLayerById(j,h);var o=l.getSource();if(o.getFeatures==null){return m}var p=o.getFeatures();for(var k=0;k<p.length;k++){var n=p[k];m.push(n)}return m},raiseLayerDrawOrder:function(j,k,r){var m=b.getLayerById(j,k);var p=j.getLayers();var o;for(var l=0;l<p.getLength();l++){var n=p.item(l);if(n.get("id")===k){o=l;break}}var h=o+r;var q=j.getLayers().getArray()[h];j.getLayers().getArray()[h]=m;j.getLayers().getArray()[o]=q;j.updateSize()},postAddLayerCache:{}};return b}])})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var darwin=darwin||{};var app=angular.module("gawebtoolkit.mapservices.controls.openlayersv2",[]);app.service("olv2MapControls",[function(){var b=[{name:"permalink",constructor:OpenLayers.Control.Permalink},{name:"overviewmap",constructor:OpenLayers.Control.OverviewMap},{name:"scale",constructor:OpenLayers.Control.Scale},{name:"scaleline",constructor:OpenLayers.Control.ScaleLine},{name:"panzoombar",constructor:OpenLayers.Control.PanZoomBar},{name:"zoomslider",constructor:OpenLayers.Control.PanZoomBar},{name:"zoom",constructor:OpenLayers.Control.Zoom},{name:"mouseposition",constructor:OpenLayers.Control.MousePosition},{name:"attribution",constructor:OpenLayers.Control.Attribution},{name:"measureline",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Path]},{name:"measurepolygon",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Polygon]},{name:"wmsgetfeatureinfo",constructor:OpenLayers.Control.WMSGetFeatureInfo}];var a={resolveSupportedControl:function(d){var f;for(var e=0;e<b.length;e++){var c=b[e];if(c.name===d){f=c;break}}return f},createControl:function(c,g,f){var e;if(f&&!g.div){g.div=f}var d=a.resolveSupportedControl(c);if(d==null||d.constructor==null){throw new Error("Error in map control construction. Unsupported control or missing source for control constructor.")}if(d.customParams){if(g){e=new d.constructor(d.customParams[0],g)}else{e=new d.constructor(d.customParams[0])}}else{if(g){e=new d.constructor(g)}else{e=new d.constructor()}}return e},registerControl:function(c,d){b.push({name:c,constructor:d})}};return a}]);(function(){var a=angular.module("gawebtoolkit.mapservices.controls.openlayersv3",[]);a.service("olv3MapControls",[function(){var c=[{name:"overviewmap",constructor:ol.control.OverviewMap},{name:"scaleline",constructor:ol.control.ScaleLine},{name:"zoomslider",constructor:ol.control.ZoomSlider},{name:"panzoombar",constructor:ol.control.ZoomSlider},{name:"zoom",constructor:ol.control.Zoom},{name:"mouseposition",constructor:ol.control.MousePosition,resolveCustomParams:d},{name:"attribution",constructor:ol.control.Attribution}];function d(i,h){var e={};var g=function(j){return(function(k){if(k[0]>180){k[0]=k[0]-360}if(k[0]<-180){k[0]=k[0]+360}if(k[1]>90){k[1]=k[1]-180}if(k[1]<-90){k[1]=k[1]+180}return ol.coordinate.toStringXY(k,j)})};var f=function(j){return(function(k){if(k[0]>180){k[0]=k[0]-360}if(k[0]<-180){k[0]=k[0]+360}if(k[1]>90){k[1]=k[1]-180}if(k[1]<-90){k[1]=k[1]+180}return j({lon:k[0],lat:k[1]})})};if(i.formatOutput!=null){e.coordinateFormat=f(i.formatOutput)}else{e.coordinateFormat=i.coordinateFormat==null?g(4):i.coordinateFormat(4)}e.projection=i.projection||h.displayProjection;return e}var b={resolveSupportedControl:function(f){var h;for(var g=0;g<c.length;g++){var e=c[g];if(e.name===f){h=e;break}}return h},createControl:function(f,l,e,h){var j;if(e&&!l.div){l.element=e}var m=b.resolveSupportedControl(f);if(m==null||m.constructor==null){var n="Error in map control construction for '"+f+"'. Unsupported control or missing source for control constructor.";n+="\r\nSupported controls names are: ";for(var k=0;k<c.length;k++){var g=c[k];n+="\r\n"+g.name}throw new Error(n)}if(m.resolveCustomParams){l=angular.extend(l,angular.copy(m.resolveCustomParams(l,h)));j=new m.constructor(l)}else{if(m.customParams){l=angular.extend(l,angular.copy(m.customParams[0]));j=new m.constructor(l)}else{if(l){j=new m.constructor(l)}else{j=new m.constructor()}}}return j},registerControl:function(e,f){c.push({name:e,constructor:f})}};return b}]);if(ol!=null&&ol.control!=null&&ol.control.ZoomSlider!=null){ol.control.ZoomSlider.prototype.getPositionForResolution_=function(c){try{var d=this.getMap().getView().getValueForResolutionFunction();return 1-d(c)}catch(b){}}}})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.mapservices.map.openlayersv2",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.controls.openlayersv2"]);app.service("olv2MapService",["olv2LayerService","olv2MapControls","GAWTUtils","GeoLayer","$q","$log",function(g,f,h,c,b,e){var a={initialiseMap:function(j,k){var i={};if(j.displayProjection==null){j.displayProjection=k.defaultOptions.displayProjection}a.displayProjection=j.displayProjection;if(j.datumProjection==null){j.datumProjection=k.defaultOptions.projection}i.projection=j.datumProjection;i.numZoomLevels=k.defaultOptions.numZoomLevels;i.displayProjection=j.displayProjection;if((!j.isStaticMap)&&(i.controls===undefined||i.controls===null)){i.controls=[new OpenLayers.Control.Navigation()]}else{i.controls=[]}return new OpenLayers.Map(j.mapElementId,i)},getParameterByName:function(i){i=i.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var k=new RegExp("[\\?&]"+i+"=([^&#]*)"),j=k.exec(document.URL);return j==null?"":decodeURIComponent(j[1].replace(/\+/g," "))},zoomToMaxExtent:function(i){i.zoomToMaxExtent()},currentZoomLevel:function(i){return i.getZoom()},addLayer:function(i,j){if(j.then!=null&&typeof j.then==="function"){j.then(function(k){i.addLayer(k);a.postLayerAddAction(i,j);return c.fromOpenLayersV2Layer(j)})}else{if(j.geoLayerType!=null&&j.geoLayerType.indexOf("Google")!==-1){i.zoomDuration=0}i.addLayer(j);a.postLayerAddAction(i,j);return c.fromOpenLayersV2Layer(j)}},postLayerAddAction:function(i,j){e.info("post layer add fired");if(g.postAddLayerCache[j.id]){g.postAddLayerCache[j.id]({map:i,layer:j})}d(i,g)},registerMapMouseMove:function(i,j){i.events.register("mousemove",i,j)},registerMapClick:function(i,j){i.events.register("click",i,j)},unRegisterMapClick:function(i,j){i.events.unregister("click",i,j)},registerMapMouseMoveEnd:function(i,j){i.events.register("moveend",i,j)},registerMapEvent:function(j,i,k){j.events.register(i,j,k)},unRegisterMapEvent:function(j,i,k){j.events.unregister(i,j,k)},getCurrentMapExtent:function(j){var l=j.getExtent();if(l==null){return null}l=l.transform(j.projection,a.displayProjection);var i=[];var o=[l.left,l.top];var n=[l.right,l.top];var k=[l.left,l.bottom];var m=[l.right,l.bottom];i.push(o);i.push(n);i.push(k);i.push(m);return i},isControlActive:function(k,m,o){var n;for(var l=0;k.controls.length;l++){var j=k.controls[l];if(j.id===m){n=j;break}}return n.active===true},addControl:function(k,n,o,m,q,l){n=n.toLowerCase();var p={};var i;if(m){i=$("#"+m)[0]}if(n==="mouseposition"){o=o||{}}var j=f.createControl(n,o,i);j.id=q||j.id;k.addControl(j);p.id=j.id;return p},getControls:function(k){var j=[];var l=k.controls;for(var m=0;m<l.length;m++){var n=l[m];j.push({id:n.metadata.id||n.id,name:n.metadata.type})}return j},getControlById:function(k,n){var j;var l=k.controls;for(var m=0;m<l.length;m++){var o=l[m];if(o.id===n){j=o;break}}return j},activateControl:function(i,j){var k=a.getControlById(i,j);k.activate()},deactivateControl:function(i,j){var k=a.getControlById(i,j);k.deactivate()},registerControlEvent:function(j,k,i,m){var l=a.getControlById(j,k);l.events.register(i,undefined,m)},unRegisterControlEvent:function(j,k,i,m){var l=a.getControlById(j,k);l.events.unregister(i,undefined,m)},getLayers:function(i){var j=[];angular.forEach(i.layers,function(k){j.push(c.fromOpenLayersV2Layer(k))});return j},getLayersByName:function(k,l){if(typeof l!=="string"&&typeof l!=="number"){throw new TypeError("Expected number")}var o=k.getLayersBy("name",l);var n=[];for(var m=0;m<o.length;m++){var j=o[m];n.push(c.fromOpenLayersV2Layer(j))}return n},setLayerVisibility:function(l,j,i){if(typeof i==="object"){throw new TypeError("Expected boolean")}var k=l.getLayersBy("id",j)[0];k.setVisibility(i)},createBoundingBox:function(j,l){var m=new OpenLayers.Bounds();for(var k=0;k<l.length;k++){m.extend(new OpenLayers.LonLat(l[k][0],l[k][1]))}return m.toBBOX()},createBounds:function(k,n,j){var o=new OpenLayers.Bounds();for(var m=0;m<n.length;m++){var l=new OpenLayers.LonLat(n[m][0],n[m][1]);l=l.transform(j,k.projection);o.extend(l)}return o},zoomToExtent:function(i,j){var k=a.createBounds(i,j,a.displayProjection);i.zoomToExtent(k,false)},zoomToLayer:function(j,i){var k=j.getLayersBy("id",i)[0];if(k==null){throw new ReferenceError('Layer not found - id: "'+i+'".')}var l=k.getExtent();j.zoomToExtent(l)},zoomTo:function(i,j){if(typeof j==="object"){throw new TypeError("Expected number")}i.zoomTo(j)},setBaseLayer:function(j,i){var k=j.getLayersBy("id",i)[0];j.setBaseLayer(k,false)},setCenter:function(k,m,n,i){var l=new OpenLayers.LonLat(n,m);if(i==null){k.setCenter(l)}else{var j=l.transform(new OpenLayers.Projection(i),new OpenLayers.Projection(k.getProjection()));k.setCenter(j)}},setInitialPositionAndZoom:function(m,r){if(a.getParameterByName("zoom")!==""&&r.centerPosition!=null){var s=new OpenLayers.LonLat(a.getParameterByName("lon"),a.getParameterByName("lat")).transform();var q=new OpenLayers.Projection(a.displayProjection);var t=new OpenLayers.Projection(m.getProjection());var j=s.transform(q,t);m.setCenter(j,a.getParameterByName("zoom"))}else{if(r.initialExtent!=null){var i=a.createBounds(m,r.initialExtent,a.displayProjection);m.zoomToExtent(i,true)}else{if(r.centerPosition){var o=JSON.parse(r.centerPosition);var l=new OpenLayers.LonLat(o[0],o[1]);var n=new OpenLayers.Projection(a.displayProjection);var p=new OpenLayers.Projection(m.getProjection());var k=l.transform(n,p);m.setCenter(k,r.zoomLevel)}else{m.zoomToMaxExtent()}}}},isBaseLayer:function(n,k){var j=false;var m;var l=n.layers.length;for(var o=0;o<l;o++){if(n.layers[o].id===k){m=n.layers[o];break}}if(m){if(m.id.indexOf("ArcGISCache")!==-1){j=m.options.isBaseLayer}else{j=m.isBaseLayer}}else{j=false}return j},setOpacity:function(j,i,k){if(typeof k==="object"){throw new TypeError("Expected number")}var l=j.getLayersBy("id",i)[0];l.setOpacity(k)},mapResized:function(j){j.updateSize();for(var k=0;k<j.layers.length;k++){j.layers[k].redraw(true)}},setMapMarker:function(j,r,n,i,p){var o=j.getLayersBy("name",n);var s=j.getLonLatFromPixel(r);var t=new OpenLayers.Size(p.width,p.height);var l=new OpenLayers.Pixel(-(t.w/2),-t.h);var q=new OpenLayers.Icon(i,t,l);var m=new OpenLayers.Marker(s,q.clone());m.map=j;if(o!=null&&o.length>0){o[0].addMarker(m)}else{var k=new OpenLayers.Layer.Markers(n);j.addLayer(k);k.addMarker(m)}},getLonLatFromPixel:function(l,k,m,j){if(k==null){throw new ReferenceError("'x' value cannot be null or undefined")}if(m==null){throw new ReferenceError("'y' value cannot be null or undefined")}var i=l.getLonLatFromPixel({x:k,y:m});if(j){i=i.transform(l.projection,j)}else{if(a.displayProjection&&a.displayProjection!==l.projection){i=i.transform(l.projection,a.displayProjection)}}return i},getPixelFromLonLat:function(i,k,j){if(k==null){throw new ReferenceError("'lon' value cannot be null or undefined")}if(j==null){throw new ReferenceError("'lat' value cannot be null or undefined")}return i.getPixelFromLonLat(new OpenLayers.LonLat(k,j))},getPointFromEvent:function(i){return{x:i.xy.x,y:i.xy.y}},drawPolyLine:function(j,q,l,p){var i=new OpenLayers.Geometry.Point(q[0].lon,q[0].lat);var o=new OpenLayers.Geometry.Point(q[1].lon,q[1].lat);var n=p||"EPSG:4326";var k=new OpenLayers.Layer.Vector(l);var r=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([o,i]).transform(new OpenLayers.Projection(n),j.getProjection()));var m=OpenLayers.Util.applyDefaults(m,OpenLayers.Feature.Vector.style["default"]);m.strokeWidth=4;r.style=m;k.addFeatures([r]);j.addLayer(k)},removeSelectedFeature:function(j,k){var m=j.getLayersByName(k);function i(n){m[0].removeFeatures(n)}var l=new OpenLayers.Control.SelectFeature(m[0],{onSelect:i});j.addControl(l);return l},removeFeature:function(i,j,k){var l=i.getLayersByName(j);l[0].removeFeatures(k)},startDrawingOnLayer:function(j,l,k){var m=j.getLayersByName(l||k.layerName);var i;if(m.length>0){i=m[0]}else{i=new OpenLayers.Layer.Vector(k.layerName);j.addLayer(i)}i.style={fillColor:k.fillColor||k.color,fillOpacity:k.fillOpacity||k.opacity,pointRadius:k.pointRadius||k.radius,strokeColor:k.strokeColor||k.color,strokeOpacity:k.strokeOpacity||k.opacity};var n;if(k.featureType.toLowerCase()==="point"){n=new OpenLayers.Control.DrawFeature(i,OpenLayers.Handler.Point)}else{if(k.featureType.toLowerCase()==="line"||k.featureType.toLowerCase()==="linestring"){n=new OpenLayers.Control.DrawFeature(i,OpenLayers.Handler.Path)}else{if(k.featureType.toLowerCase()==="box"){n=new OpenLayers.Control.DrawFeature(i,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4,irregular:true}})}else{if(k.featureType.toLowerCase()==="polygon"){n=new OpenLayers.Control.DrawFeature(i,OpenLayers.Handler.Polygon)}}}}j.addControl(n);a.drawingControl=n;n.activate()},stopDrawing:function(i){if(a.drawingControl){a.drawingControl.deactivate();i.removeControl(a.drawingControl)}},drawLabel:function(j,n,o){var p=j.getLayersByName(n||o.layerName);var k;if(p.length>0){k=p[0]}else{k=new OpenLayers.Layer.Vector(n||o.layerName);j.addLayer(k)}var r=new OpenLayers.Geometry.Point(o.lon,o.lat).transform(new OpenLayers.Projection(o.projection),j.getProjection());var q=new OpenLayers.Feature.Vector(r);k.style={label:o.text,fontColor:o.fontColor||o.color,fontSize:o.fontSize,align:o.align,labelSelect:true};k.addFeatures([q]);var m=h.generateUuid();q.id=m;var l=new OpenLayers.Format.GeoJSON();var i=l.write(q);var s=angular.fromJson(i);s.id=m;return s},drawLabelWithPoint:function(j,n,o){var p=j.getLayersByName(n||o.layerName);var k;if(p.length>0){k=p[0]}else{k=new OpenLayers.Layer.Vector(n||o.layerName);j.addLayer(k)}var r=new OpenLayers.Geometry.Point(o.lon,o.lat).transform(new OpenLayers.Projection(o.projection),j.getProjection());var q=new OpenLayers.Feature.Vector(r);var l=h.generateUuid();q.id=l;k.style={label:o.text,pointRadius:o.pointRadius||"8",fontColor:o.fontColor||o.color||"#000000",fontSize:o.fontSize||"14px",align:o.align||"cm",labelYOffset:o.labelYOffset||15,labelSelect:true,fillColor:o.pointColor||o.color||"#000000",strokeColor:o.pointColor||o.color||"#000000",fillOpacity:o.pointOpacity||o.fillOpacity||0.5,strokeOpacity:o.pointOpacity||o.strokeOpacity||1};k.addFeatures([q]);var m=new OpenLayers.Format.GeoJSON();var i=m.write([q]);var s=angular.fromJson(i);s.features[0].id=l;return s},getFeatureInfo:function(m,j,s,r,o,p,t){t=t||0;var y=b.defer();var w=event instanceof MouseEvent?p.xy:p;var v=new OpenLayers.Pixel(w.x,w.y);var n=v.add(-t,t);var l=v.add(t,-t);var u=m.getLonLatFromPixel(n);var q=m.getLonLatFromPixel(l);var i=new OpenLayers.Bounds(u.lon,u.lat,q.lon,q.lat);var x=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:j,version:"1.1.0",srsName:m.projection,featureType:s,featurePrefix:r,geometryName:o,maxFeatures:100});var k=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:i});x.read({filter:k,callback:function(A){if(A.success()){var C=new OpenLayers.Format.GeoJSON();var z=C.write(A.features);var D=angular.fromJson(z);for(var B=0;B<D.features.length;B++){D.features[B].crs={type:"name",properties:{name:m.projection}}}y.resolve(D)}}});return y.promise},getFeatureInfoFromLayer:function(l,w,p,n,s){s=s||0;var v=event instanceof MouseEvent?n.xy:n;var u=new OpenLayers.Pixel(v.x,v.y);var m=u.add(-s,s);var k=u.add(s,-s);var t=l.getLonLatFromPixel(m);var o=l.getLonLatFromPixel(k);var i=new OpenLayers.Bounds(t.lon,t.lat,o.lon,o.lat);var q=l.getLayersBy("id",p);var r;if(q.length>0){r=q[0]}else{throw new Error("Invalid layer id")}var x=OpenLayers.Protocol.WFS.fromWMSLayer(r);var j=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:i});x.read({filter:j,callback:function(z){if(z.success()){var B=new OpenLayers.Format.GeoJSON();var y=B.write(z.features);var C=angular.fromJson(y);for(var A=0;A<C.features.length;A++){C.features[A].crs={type:"name",properties:{name:l.projection}}}w(C)}}})},createWfsClient:function(k,n,m,j,p,l,i){var o=new OpenLayers.Protocol.WFS({url:k,featureType:n,featurePrefix:m,version:j,geometryName:p,srsName:l});o.isLonLatOrderValid=i;return o},addWfsClient:function(j){a.wfsClientCache=a.wfsClientCache||[];var i=h.generateUuid();a.wfsClientCache[i]=j;return{clientId:i}},is3dSupported:function(j,i){return false},is3d:function(j,i){return false},switchTo3dView:function(j,i){throw new Error("3D not supported in current map")},switchTo2dView:function(j,i){},searchWfs:function(m,i,p,o){var k=a.wfsClientCache[i];var l=b.defer();var j=function(r){if(r.priv.status!=="200"||r.priv.status===200){l.resolve(null);return}for(var t=0;t<r.features.length;t++){if(a.wfsClientCache[i].isLonLatOrderValid===false){var v=r.features[t].geometry.x;var w=r.features[t].geometry.y;r.features[t].geometry.x=w;r.features[t].geometry.y=v}}var u=new OpenLayers.Format.GeoJSON();var q=u.write(r.features);var x=angular.fromJson(q);for(var s=0;s<x.features.length;s++){x.features[s].crs={type:"name",properties:{name:k.srsName}}}l.resolve(x)};var n=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:o,matchCase:false,value:p.toUpperCase()+"*"});k.read({filter:n,callback:j});return l.promise},getMeasureFromEvent:function(i,m){var k;var l=new OpenLayers.Format.GeoJSON({externalProjection:a.displayProjection,internalProjection:i.projection});var j=l.write(m.geometry);k=angular.fromJson(j);return{measurement:m.measure,units:m.units,geoJson:k}},wfsClientCache:{}};function d(k,o){for(var j in o.postAddLayerCache){if(o.postAddLayerCache.hasOwnProperty(j)){var l=false;for(var n=0;n<k.layers.length;n++){var m=k.layers[n];if(j===m.id){l=true}}if(!l){o.postAddLayerCache[j]=null}}}}return a}]);(function(){var c=angular.module("gawebtoolkit.mapservices.map.openlayersv3",["gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.controls.openlayersv3"]);var b;var a;c.service("olv3MapService",["olv3LayerService","olv3MapControls","GAWTUtils","GeoLayer","ga.config","$q","$log","$timeout",function(d,k,j,f,l,h,m,e){var g={initialiseMap:function(r,t){var q={};var p={};if(r.datumProjection==null){m.warn("Datum projection has not been provided. Defaulting to EPSG:3857");r.datumProjection="EPSG:3857"}if(r.displayProjection==null){m.warn("Display projection has not been provided. Defaulting to EPSG:4326");r.displayProjection="EPSG:4326"}p.projection=ol.proj.get(r.datumProjection);if(r.centerPosition){var n=JSON.parse(r.centerPosition);p.center=ol.proj.transform([n[0],n[1]],r.displayProjection,r.datumProjection)}p.zoom=parseInt(r.zoomLevel);p.extent=p.projection.getExtent();var o=new ol.View(p);o.geoMaxZoom=28;o.geoMinZoom=0;q.target=r.mapElementId;q.renderer=l.olv3Options==null?"canvas":(l.olv3Options.renderer||"canvas");q.view=o;if(r.isStaticMap){q.interactions=[]}q.controls=[];g.displayProjection=r.displayProjection;var s=new ol.Map(q);window.setTimeout(function(){if(r.initialExtent){var u=[r.initialExtent[0][0],r.initialExtent[0][1],r.initialExtent[1][0],r.initialExtent[1][1]];var v=ol.proj.transformExtent(u,r.displayProjection,r.datumProjection);s.getView().fitExtent(v,s.getSize())}},10);return s},getParameterByName:function(n){n=n.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var p=new RegExp("[\\?&]"+n+"=([^&#]*)"),o=p.exec(document.URL);return o==null?"":decodeURIComponent(o[1].replace(/\+/g," "))},zoomToMaxExtent:function(n){n.getView().setZoom(18)},currentZoomLevel:function(n){return n.getView().getZoom()},addLayer:function(n,r){var s=r.geoMaxZoom||n.getView().geoMaxZoom;var p=r.geoMinZoom||n.getView().geoMinZoom;if(s<n.getView().geoMaxZoom||p>n.getView().geoMinZoom){var q=n.getView();var o={projection:q.getProjection(),center:q.getCenter(),zoom:q.getZoom(),maxZoom:s,minZoom:p};var t=new ol.View(o);n.setView(t)}if(r.disableDefaultUI){return}if(r.then!=null&&typeof r.then==="function"){r.then(function(u){n.addLayer(u);g.postLayerAddAction(n,r);return f.fromOpenLayersV3Layer(r)})}else{if(r.geoLayerType!=null&&r.geoLayerType.indexOf("Google")!==-1){n.zoomDuration=0}n.addLayer(r);g.postLayerAddAction(n,r);return f.fromOpenLayersV3Layer(r)}},postLayerAddAction:function(n,o){m.info("post layer add fired");if(d.postAddLayerCache[o.id]){d.postAddLayerCache[o.id]({map:n,layer:o})}i(n,d)},registerMapMouseMove:function(n,o){$(n.getViewport()).on("mousemove",o)},registerMapClick:function(n,o){if(o!=null){n.on("click",o)}},unRegisterMapClick:function(n,o){if(o!=null){n.un("click",o)}},registerMapMouseMoveEnd:function(n,o){$(n.getViewport()).on("mousemove",function(q,p){if(g.mousemoveTimeout!==undefined){window.clearTimeout(g.mousemoveTimeout)}g.mousemoveTimeout=window.setTimeout(function(){o(q,p)},100)})},registerMapEvent:function(o,n,p){o.on(n,p)},unRegisterMapEvent:function(o,n,p){o.un(n,p)},getCurrentMapExtent:function(o){var t=o.getView().calculateExtent(o.getSize());if(t==null){return null}var n=[];var s=ol.proj.transform([t[0],t[3]],o.getView().getProjection(),g.displayProjection);var r=ol.proj.transform([t[2],t[3]],o.getView().getProjection(),g.displayProjection);var p=ol.proj.transform([t[0],t[1]],o.getView().getProjection(),g.displayProjection);var q=ol.proj.transform([t[2],t[1]],o.getView().getProjection(),g.displayProjection);n.push(s);n.push(r);n.push(p);n.push(q);return n},isControlActive:function(o,q,s){if(s==="measureline"){return g.measureEventDrawInteraction!=null}var n=o.getControls();for(var p=0;p<n.getLength();p++){var r=n.item(p);if(r.get("id")===q){return true}}return false},addControl:function(p,s,t,r,v,q){s=s.toLowerCase();var u={};var n;if(r){n=$("#"+r)[0]}if(s==="mouseposition"){t=t||{}}if(s==="overviewmap"&&t!=null&&t.maximized!=null){t.collapsed=!t.maximized}var o=k.createControl(s,t,n,q);o.set("id",v||o.get("id")||j.generateUuid());o.set("name",s||"");if(s==="overviewmap"){e(function(){p.addControl(o)},1000)}else{p.addControl(o)}u.id=o.get("id");return u},getControls:function(o){var n=[];var p=o.getControls();for(var q=0;q<p.getLength();q++){var r=p.item(q);n.push({id:r.metadata.id||r.get("id"),name:r.metadata.type})}return n},getControlById:function(p,r){var n;var o=p.getControls();for(var q=0;q<o.getLength();q++){var s=o.item(q);if(s.get("id")===r){n=s;break}}return n},activateControl:function(n,q){var p=g.isControlActive(n,q);var o=g._getCachedControl(q);if(!p&&o){n.addControl(o);g._removeCachedControl(q)}},_getCachedControl:function(p){g.cachedControls=g.cachedControls||[];for(var o=0;o<g.cachedControls.length;o++){var n=g.cachedControls[o];if(n.get("id")===p){return n}}return null},_removeCachedControl:function(p){g.cachedControls=g.cachedControls||[];for(var o=0;o<g.cachedControls.length;o++){var n=g.cachedControls[o];if(n.get("id")===p){g.cachedControls[o]=null}}return null},deactivateControl:function(n,r){var p=g.isControlActive(n,r);var o=g._getCachedControl(r);var q=g.getControlById(n,r);if(p&&!o){g.cachedControls.push(q);n.removeControl(q)}},registerControlEvent:function(q,r,p,s){var o=q.getControls();var n=null;o.forEach(function(t){if(t.get("id")===r){n=t}});if(n==null){if(p==="measurepartial"){g.initMeasureEventLayer(q);g.handleMeasurePartial(q,g.measureEventVectorLayer,g.measureEventDrawInteraction,s)}if(p==="measure"){g.initMeasureEventLayer(q);g.handleMeasure(q,g.measureEventVectorLayer,g.measureEventDrawInteraction,s)}}else{n.on(p,s)}},initMeasureEventLayer:function(n){if(g.measureEventVectorLayer){n.removeLayer(g.measureEventVectorLayer)}g.measureEventSource=g.measureEventSource||new ol.source.Vector();g.measureEventVectorLayer=g.measureEventVectorLayer||new ol.layer.Vector({source:g.measureEventSource,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})})});g.measureEventVectorLayer.set("id",j.generateUuid());g.measureEventDrawInteraction=g.measureEventDrawInteraction||new ol.interaction.Draw({source:g.measureEventSource,type:"LineString",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.7)"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"})})})});n.addLayer(g.measureEventVectorLayer);n.addInteraction(g.measureEventDrawInteraction)},handleMeasurePartial:function(n,o,p,q){p.on("drawstart",function(s){var r=false;var t=s.feature;g.measurePointerMoveEvent=function(u){r=!!u.dragging};g.measureSingleClickTimeout=null;g.measurePointerUpEvent=function(u){if(g.measureSingleClickTimeout){e.cancel(g.measureSingleClickTimeout)}if(!r){g.measureSingleClickTimeout=e(function(){if(!g.measureIsDrawEndComplete){u.feature=t;q(u)}else{g.measureIsDrawEndComplete=false}},10)}};g.measurePointerDownEvent=function(v){var u=new Date(new Date()+250);if(!r&&g.measureSingleClickTimeout!=null&&u<g.measureSingleClickTimeout){g.measureIsDoubleClick=true}g.measureSingleClickTimeout=new Date()};n.on("pointerup",g.measurePointerUpEvent);n.on("pointermove",g.measurePointerMoveEvent);n.on("pointerdown",g.measurePointerDownEvent);q(s)},g)},handleMeasure:function(n,o,p,q){g.measureIsDrawEndComplete=false;p.on("drawend",function(r){n.un("pointerup",g.measurePointerUpEvent);n.un("pointermove",g.measurePointerMoveEvent);n.un("pointermove",g.measurePointerDownEvent);q(r);g.measureIsDrawEndComplete=true},g)},unRegisterControlEvent:function(q,r,p,s){var o=q.getControls();var n=null;o.forEach(function(t){if(t.get("id")===r){n=t}});if(n==null){if(p==="measure"&&g.measureEventDrawInteraction){q.removeInteraction(g.measureEventDrawInteraction);q.removeLayer(g.measureEventVectorLayer);g.measureEventVectorLayer=null;g.measureEventDrawInteraction=null;g.measureEventSource=null;q.un("pointerup",g.measurePointerUpEvent);q.un("pointermove",g.measurePointerMoveEvent);q.un("pointermove",g.measurePointerDownEvent)}if(p==="measurepartial"&&g.measureEventDrawInteraction){q.removeInteraction(g.measureEventDrawInteraction);q.removeLayer(g.measureEventVectorLayer);g.measureEventVectorLayer=null;g.measureEventDrawInteraction=null;g.measureEventSource=null;q.un("pointerup",g.measurePointerUpEvent);q.un("pointermove",g.measurePointerMoveEvent);q.un("pointermove",g.measurePointerDownEvent)}}else{n.un(p,s)}},getLayers:function(n){var o=[];angular.forEach(n.getLayers(),function(p){o.push(f.fromOpenLayersV3Layer(p))});return o},_getLayersBy:function(p,o,n){var r=p.getLayers();var q=[];r.forEach(function(t){var s=t.get(o);if(s&&s.indexOf(n)!==-1){q.push(t)}});return q},getLayersByName:function(n,o){if(typeof o!=="string"&&typeof o!=="number"){throw new TypeError("Expected string or number")}return d.getLayersBy(n,"name",o)},setLayerVisibility:function(p,o,n){if(typeof n!=="string"&&typeof n!=="boolean"){throw new TypeError('Invalid visibility value "'+n+'"')}var q=d.getLayerBy(p,"id",o);q.setVisible(n)},createBoundingBox:function(n,q){var r=[];for(var p=0;p<q.length;p++){var s=q[p];r.push(new ol.geom.Point(s))}var o=new ol.geom.GeometryCollection(r);return o.getExtent()},createBounds:function(p,r,n){if(n){var o=p.getView();var s=ol.proj.transform([r[0][0],r[0][1]],o.getProjection(),n);var q=ol.proj.transform([r[0][0],r[0][1]],o.getProjection(),n);return[s[0],s[1],q[0],q[1]]}return[r[0][0],r[0][1],r[1][0],r[1][1]]},zoomToExtent:function(n,o){},zoomToLayer:function(o,n){var p=d.getLayerBy(o,"id",n);if(p==null){throw new ReferenceError('Layer not found - id: "'+n+'".')}var q=p.getExtent();if(q==null){return}o.getView().fitExtent(q,o.getSize())},zoomTo:function(n,o){if(typeof o==="object"){throw new TypeError("Expected number")}n.getView().setZoom(o)},setBaseLayer:function(o,n){var p=g._getLayersBy(o,"isBaseLayer",true);p.forEach(function(q){if(q.get("id")===n){q.setVisible(true)}else{q.setVisible(false)}})},setCenter:function(q,r,s,o){var n=[s,r];if(o==null){q.getView().setCenter(n)}else{var p=ol.proj.transform(n,o,q.getView().getProjection());q.getView().setCenter(p)}},setInitialPositionAndZoom:function(n,o){if(g.getParameterByName("zoom")!==""&&o.centerPosition!=null){throw new Error("NotImplemented")}},isBaseLayer:function(p,o){var s=p.getLayers();var n=null;var q=0;var r=false;s.forEach(function(t){if(t.get("id")===o&&!r){n=q;r=true}q++});return n===0},setOpacity:function(o,n,p){if(typeof p==="object"){throw new TypeError("Expected number")}var q=d.getLayerBy(o,"id",n);q.setOpacity(p)},mapResized:function(n){n.updateSize();for(var o=0;o<n.getLayers().length;o++){n.getLayers()[o].redraw(true)}},setMapMarker:function(q,w,r,o,v){var u=d.getLayerBy(q,"name",r);var t=q.getCoordinateFromPixel([w.x,w.y]);var p=new ol.Feature({geometry:new ol.geom.Point(t)});var s=new ol.style.Style({image:new ol.style.Icon(({anchor:[0.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",opacity:v.opacity||1,src:o}))});p.setStyle(s);if(u!=null){u.getSource().addFeature(p)}else{var n=new ol.source.Vector();n.addFeature(p);u=new ol.layer.Vector({source:n,format:new ol.format.GeoJSON()});u.set("name",r);q.addLayer(u)}},getLonLatFromPixel:function(q,p,r,o){if(p==null){throw new ReferenceError("'x' value cannot be null or undefined")}if(r==null){throw new ReferenceError("'y' value cannot be null or undefined")}var n=q.getCoordinateFromPixel([p,r]);if(o){n=ol.proj.transform(n,q.getView().getProjection(),o)}else{if(g.displayProjection&&g.displayProjection!==q.getView().getProjection()){n=ol.proj.transform(n,q.getView().getProjection(),g.displayProjection)}}return{lon:n[0],lat:n[1]}},getPixelFromLonLat:function(n,p,o){if(p==null){throw new ReferenceError("'lon' value cannot be null or undefined")}if(o==null){throw new ReferenceError("'lat' value cannot be null or undefined")}return n.getPixelFromCoordinate([p,o])},getPointFromEvent:function(n){return{x:n.pixel[0],y:n.pixel[1]}},drawPolyLine:function(q,y,s,x){if(!s){s=j.generateUuid()}var u=d._getLayersBy(q,"name",s);var r;var n=new ol.source.Vector();var o=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})});var p=[y[0].lon,y[0].lat];var w=[y[1].lon,y[1].lat];var v=new ol.geom.LineString([p,w]);var t=x||"EPSG:4326";v.transform(t,q.getView().getProjection());var z=new ol.Feature({geometry:v,name:s});if(u.length>0){r=u[0];if(!(r.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+s||args.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}r.setStyle(o)}else{r=new ol.layer.Vector({source:n,style:o});r.set("name",s||args.layerName);q.addLayer(r)}r.getSource().addFeature(z)},removeSelectedFeature:function(o,p){var q=o.getLayersByName(p)[0];var n=new ol.interaction.Select();n.on("select",function(u){var t=q.getSource();if(t.removeFeature instanceof Function){if(u.selected instanceof Array){for(var s=0;s<u.selected.length;s++){var r=u.selected[s];t.removeFeature(r)}}else{t.removeFeature(u.selected)}}else{throw new Error("No valid layer found with name - "+p+" - to remove selected features.")}});o.addInteraction(n);return n},removeFeature:function(n,o,p){var q=d.getLayersBy(n,"name",o);q.removeFeatures(p)},startDrawingOnLayer:function(q,s,t){var o;switch(t.featureType.toLowerCase()){case"point":o="Point";break;case"linestring":o="LineString";break;case"polygon":o="Polygon";break;case"circle":o="Circle"}var u=d._getLayersBy(q,"name",s||t.layerName);var r;var n=new ol.source.Vector();var p=new ol.style.Style({fill:new ol.style.Fill({color:t.fillColor||t.color,radius:t.fillRadius||t.radius}),stroke:new ol.style.Stroke({color:t.strokeColor||t.color,width:t.strokeRadius||t.radius,opacity:t.strokeOpacity||t.opacity}),image:new ol.style.Circle({radius:t.circleRadius||t.radius,fill:new ol.style.Fill({color:t.circleColor||t.color})})});if(u.length>0){r=u[0];if(!(r.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+s||t.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}r.setStyle(p)}else{r=new ol.layer.Vector({source:n,style:p,format:new ol.format.GeoJSON()});r.set("name",t.layerName);q.addLayer(r)}var v=new ol.interaction.Draw({source:n,type:(o)});g.featureDrawingInteraction=v;q.addInteraction(v)},stopDrawing:function(n){if(g.featureDrawingInteraction){n.removeInteraction(g.featureDrawingInteraction)}},drawLabel:function(q,s,u){var v=d._getLayersBy(q,"name",s||u.layerName);var r;var n=new ol.source.Vector();var x=u.align==="cm"?"center":u.align||u.textAlign;var t=new ol.style.Text({textAlign:x,textBaseline:u.baseline,font:u.font,text:u.text,fill:new ol.style.Fill({color:u.fillColor||u.fontColor||u.color}),stroke:new ol.style.Stroke({color:u.outlineColor||u.color,width:u.outlineWidth||u.width}),offsetX:u.offsetX,offsetY:u.offsetY,rotation:u.rotation});var o=new ol.style.Style({image:new ol.style.Circle({radius:u.circleRadius||u.radius,fill:new ol.style.Fill({color:u.fillColor||u.color||"#000000"}),stroke:new ol.style.Stroke({color:u.strokeColor||u.color||"#000000",width:u.strokeRadius||u.radius})}),text:t});if(v.length>0){r=v[0];if(!(r.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+s||u.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}r.setStyle(o)}else{r=new ol.layer.Vector({source:n,style:o});r.set("name",s||u.layerName);q.addLayer(r)}var p=ol.proj.transform([u.lon,u.lat],u.projection,q.getView().getProjection());var z=new ol.geom.Point(p);var w=new ol.Feature({geometry:z});r.getSource().addFeature(w);r.setStyle(o);var y=new ol.format.GeoJSON();return angular.fromJson(y.writeFeature(w))},drawLabelWithPoint:function(w,E,p){var v=d._getLayersBy(w,"name",E||p.layerName);var o;var y=new ol.source.Vector();var u=new ol.style.Text({textAlign:p.align,textBaseline:p.baseline,font:(p.fontWeight||p.weight||"normal")+" "+(p.fontSize||p.size||"12px")+" "+(p.font||"sans-serif"),text:p.text,fill:new ol.style.Fill({color:p.fillColor||p.color,width:p.fillWdith||p.width||1}),stroke:new ol.style.Stroke({color:p.outlineColor||p.color,width:p.outlineWidth||p.width||1}),offsetX:p.offsetX||0,offsetY:p.offsetY||(p.labelYOffset*-1)||15,rotation:p.rotation});var s;var F=p.fillColor||p.color||"#000000";var B=p.fillOpacity||p.opacity||0.5;if(F.indexOf("#")===0){s=j.convertHexAndOpacityToRgbArray(F,B)}else{s=p.fillColor||p.color}var z;var q=p.fillColor||p.color||"#000000";var r=p.strokeOpacity||p.opacity||1;if(q.indexOf("#")===0){z=j.convertHexAndOpacityToRgbArray(q,r)}else{z=p.strokeColor||p.color}var D=new ol.style.Style({image:new ol.style.Circle({radius:p.pointRadius||p.radius||"2",fill:new ol.style.Fill({color:s}),stroke:new ol.style.Stroke({color:z,width:p.strokeRadius||p.radius})}),text:u});if(v.length>0){o=v[0];if(!(o.getSource().addFeature instanceof Function)){throw new Error("Layer name '"+E||p.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}o.setStyle(D)}else{o=new ol.layer.Vector({source:y,style:D,format:new ol.format.GeoJSON()});o.set("name",E||p.layerName);w.addLayer(o);o.setStyle(D)}var x=ol.proj.transform([p.lon,p.lat],p.projection||g.displayProjection,w.getView().getProjection());var A=new ol.geom.Point(x);var n=new ol.Feature({geometry:A});o.getSource().addFeatures([n]);var t=[n];var C=new ol.format.GeoJSON();return angular.fromJson(C.writeFeatures([n]))},getFeatureInfo:function(r,o,x,w,t,u,y){if(OpenLayers==null){throw new Error("NotImplemented")}m.warn("getFeatureInfo not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server");y=y||0;var D=h.defer();var B=(u instanceof ol.MapBrowserPointerEvent)?u.pixel:u;var A=new OpenLayers.Pixel(B[0],B[1]);var s=A.add(-y,y);var q=A.add(y,-y);var z=r.getCoordinateFromPixel([s.x,s.y]);var v=r.getCoordinateFromPixel([q.x,q.y]);var n=new OpenLayers.Bounds(z[0],z[1],v[0],v[1]);var C=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:o,version:"1.1.0",srsName:r.getView().getProjection().getCode(),featureType:x,featurePrefix:w,geometryName:t,maxFeatures:100});var p=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:n});C.read({filter:p,callback:function(F){if(F.success()){var H=new OpenLayers.Format.GeoJSON();var E=H.write(F.features);var I=angular.fromJson(E);for(var G=0;G<I.features.length;G++){I.features[G].crs={type:"name",properties:{name:r.getView().getProjection().getCode()}}}D.resolve(I)}}});return D.promise},getFeatureInfoFromLayer:function(w,p,u,q,G){if(OpenLayers==null){throw new Error("NotImplemented")}m.warn("getFeatureInfoFromLayer not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server");G=G||0;var F=(q instanceof ol.SelectEvent)?q.pixel:q;var n=new OpenLayers.Pixel(F.x,F.y);var B=n.add(-G,G);var o=n.add(G,-G);var z=w.getCoordinateFromPixel([B.x,B.y]);var v=w.getCoordinateFromPixel([o.x,o.y]);var s=new OpenLayers.Bounds(z[0],z[1],v[0],v[1]);var t=d._getLayersBy(w,"id",u);var H;if(t.length>0){H=t[0]}else{throw new Error("Invalid layer id")}var x,A;var r=H.getSource().getParams()["LAYERS"];var D=(OpenLayers.Util.isArray(r)?r[0]:r).split(":");if(D.length>1){A=D[0]}x=D.pop();var E={url:H.getSource().getUrls()[0],featureType:x,featurePrefix:A,srsName:H.projection&&H.projection.getCode()||H.map&&H.map.getProjectionObject().getCode(),version:"1.1.0"};var C=new OpenLayers.Protocol.WFS(OpenLayers.Util.applyDefaults(null,E));var y=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:s});C.read({filter:y,callback:function(J){if(J.success()){var L=new OpenLayers.Format.GeoJSON();var I=L.write(J.features);var M=angular.fromJson(I);for(var K=0;K<M.features.length;K++){M.features[K].crs={type:"name",properties:{name:w.projection}}}p(M)}}})},createWfsClient:function(p,s,r,o,t,q,n){throw new Error("NotImplemented")},addWfsClient:function(o){g.wfsClientCache=g.wfsClientCache||[];var n=j.generateUuid();g.wfsClientCache[n]=o;return{clientId:n}},is3dSupported:function(n){return window.olcs!=null},is3d:function(n){return b!=null?b.getEnabled():false},switchTo3dView:function(n){if(b){b.setEnabled(true)}else{b=new olcs.OLCesium({map:n,target:n.getTarget()});var p=b.getCesiumScene();if(l.cesiumOptions!=null&&l.cesiumOptions.includeCustomTerrainProvider){var o=new Cesium.CesiumTerrainProvider({url:l.cesiumOptions.customTerrainProviderUrl});p.terrainProvider=o}e(function(){g.syncMapControlsWithOl3Cesium(n,n.getTarget())});b.setEnabled(true)}},switchTo2dView:function(n){if(b){b.setEnabled(false);g.syncMapControlsWithOl3(n,n.getTarget())}},syncMapControlsWithOl3Cesium:function(o,p){var n=o.getControls();var q=$("#"+p)[0];n.forEach(function(u){if(u instanceof ol.control.MousePosition&&q){var t=b.getCesiumScene();var s=t.globe.ellipsoid;var r=new Cesium.ScreenSpaceEventHandler(t.canvas);r.setInputAction(function(v){var y=t.camera.pickEllipsoid(v.endPosition,s);if(y){var x=s.cartesianToCartographic(y);var w=Cesium.Math.toDegrees(x.longitude);var z=Cesium.Math.toDegrees(x.latitude);$(".ol-mouse-position")[0].innerText=u.getCoordinateFormat()([w,z])}},Cesium.ScreenSpaceEventType.MOUSE_MOVE);a=r}if(u instanceof ol.control.ScaleLine){o.render()}})},syncMapControlsWithOl3:function(n,o){},searchWfs:function(o,n,q,p){throw new Error("NotImplemented")},getMeasureFromEvent:function(o,s){if(s.feature==null&&s.geometry==null){throw new Error("Feature cannot be null in Measure event")}if(s.geometry!=null&&s.geometry instanceof Array&&s.geometry.length===2){s.feature=new ol.Feature(new ol.geom.Point(s.geometry))}if(s.geometry!=null&&s.geometry instanceof Array&&s.geometry.length>2){s.feature=new ol.Feature(new ol.geom.LineString(s.geometry))}var v=s.feature.clone();var t=v.getGeometry().transform(o.getView().getProjection(),g.displayProjection);var u=new ol.format.GeoJSON();var q=u.writeFeature(v);var p=angular.fromJson(q);var n=g.getGeometryLength(o,t);var r="m";if(n>1000){r="km";n=(n/1000)}return{measurement:n,units:r,geoJson:p.geometry}},getGeometryLength:function(o,q){var t=q.getCoordinates();var s=0;var n=new ol.Sphere(6378137);for(var p=0,r=t.length-1;p<r;++p){s+=n.haversineDistance(t[p],t[p+1])}return s},wfsClientCache:{}};function i(o,s){for(var n in s.postAddLayerCache){if(s.postAddLayerCache.hasOwnProperty(n)){var p=false;for(var r=0;r<o.getLayers().length;r++){var q=o.getLayers()[r];if(n===q.id){p=true}}if(!p){s.postAddLayerCache[n]=null}}}}return g}])})();var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.mapservices",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.map.openlayersv2","gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.map.openlayersv3","gawebtoolkit.mapservices.data.openlayersv2","gawebtoolkit.mapservices.data.openlayersv3"]);app.factory("GeoLayer",["GAWTUtils",function(b){var a=function(g,e,f,c,d){this.id=g;this.name=e;this.type=f;this.visibility=c;this.opacity=d};a.fromOpenLayersV2Layer=function(d){var f=d.id.indexOf("_ArcGISCache_")===-1;var e;if(f){e=d.geoLayerType}else{e="ArcGISCache"}var c;if(typeof d.opacity==="string"){c=Number(d.opacity)}else{c=d.opacity}return new a(d.id,d.name,e,d.visibility,c)};a.fromOpenLayersV3Layer=function(d){var e=d.geoLayerType;var c;if(typeof d.get("opacity")==="string"){c=Number(d.get("opacity"))}else{c=d.get("opacity")}if(!d.get("id")){d.set("id",b.generateUuid())}return new a(d.get("id"),d.get("name"),e,d.get("visible"),c)};return a}]);angular.module("gawebtoolkit.ui.templates",[]).run(["$templateCache",function(a){a.put("src/main/js/ui/components/base-layer-selector/base-layer-selector.html",'<select title="Base layer selector" fix-ie-select ng-options="layer.id as layer.name for layer in layersData"\n        ng-model="selectedBaseLayerId"></select>\n');a.put("src/main/js/ui/components/deprecated/dialog-toggle.html",'<button type="button" ng-click="toggleDialog()"><div ng-transclude></div></button>');a.put("src/main/js/ui/components/deprecated/layers-dialog.html",'<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}">\n    <div ng-repeat="layer in layersData">\n        <ga-layer-control map-controller="mapController" layer-data="layer"></ga-layer-control>\n    </div>\n</div>\n');a.put("src/main/js/ui/components/deprecated/search-wfs.html",'<input type="text" class="search-box" ng-model="query"\n       ng-class="{typeAheadLoading:waitingForResponse}" placeholder="{{placeHolder}}"/>\n<input type="image" class="button search-button" ng-click="searchButtonClicked()"\n       accesskey="4" alt="Search using your entered search criteria"\n       title="Search using your entered search criteria"\n       src="{{searchIconUrl}}">');a.put("src/main/js/ui/components/deprecated/static-dialog.html",'<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}">\n    <div ng-transclude></div>\n</div>');a.put("src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html",'<input type="text" class="search-box" placeholder="Place name search" ng-model="query"\n       ng-class="{typeAheadLoading:waitingForResponse}"\n       typeahead="result as result.properties.name for result in getSearchResults($viewValue)"\n       typeahead-template-url="{{resultTemplateUrl}}"\n       typeahead-on-select="onSelected($item, $model, $label)"\n       typeahead-wait-ms="200" typeahead-editable="true"/>\n<input type="image" class="button search-button" accesskey="4"\n       ng-click="searchButtonClicked()"\n       alt="Search using your entered search criteria" title="Search using your entered search criteria"\n       src="{{searchIconUrl}}"/>');a.put("src/main/js/ui/components/google-place-name-search/google-place-name-search.html",'<input type="text" class="search-box" placeholder="{{placeHolder}}"/>\n<input type="image" class="button search-button" accesskey="4"\n       alt="Search using your entered search criteria" title="Search using your entered search criteria"\n       src="{{searchIconUrl}}"/>');a.put("src/main/js/ui/components/layer-control/layer-control.html",'<label for="{{elementId}}" class="checkbox" style="display:inline-block;width:65%">\n    <input id="{{elementId}}" type="checkbox" ng-model="layerData.visibility" ng-click="layerClicked()"\n           ng-disabled="layerDisabled"/>{{layerData.name}}\n</label>\n<div style="display:inline;width:30%" ng-transclude></div>\n<div ng-show="layerData.visibility" class="gaLayerControlSliderContainer">\n    <ga-layer-opacity-slider\n            map-controller="mapController"\n            layer-opacity="layerData.opacity"\n            layer-id="{{layerData.id}}"\n            layer-disabled="layerDisabled"\n            on-opacity-change="changeOpacity(layerId,opacity)"\n            title-text="Opacity control for layer - {{layerData.name}}">\n    </ga-layer-opacity-slider>\n</div>\n');a.put("src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html",'<button ng-click="toggleClicked()" class="gaUiToggleOff" type="button">\n    <div ng-transclude></div>\n</button>');a.put("src/main/js/ui/components/layers-drop-down/layers-drop-down.html",'<div>\n    <select fix-ie-select ng-model="selectedModel" ng-change="selectLayer()"\n            ng-options="dropDownLayer.id as dropDownLayer.name for dropDownLayer in layersData">\n    </select>\n</div>');a.put("src/main/js/ui/components/measure-toggle/measure-toggle.html",'<button type="button" ng-click="handleToggle()" class="gaUiToggleOff">\n    <span ng-transclude></span>\n</button>');a.put("src/main/js/ui/components/opacity-slider/opacity-slider.html",'<div ui-jq="slider" ui-options="getSliderOptions()"></div>')}]);(function(){var a=angular.module("gawebtoolkit.ui.components.base-layer-selector",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaBaseLayerSelector",["$timeout",function(b){return{restrict:"E",templateUrl:"src/main/js/ui/components/base-layer-selector/base-layer-selector.html",replace:true,scope:{layersData:"=",mapController:"=",controllerEmitEventName:"@"},controller:["$scope",function(d){var c=this;c.selectBaseLayer=function(e){d.selectedBaseLayerId=e};d.$emit(d.controllerEmitEventName,c)}],link:function(c){c.$watch("selectedBaseLayerId",function(e){if(e!=null){c.mapController.setBaseLayer(e)}});c.$watch("layersData",function(e){if(e){for(var f=0;f<e.length;f++){if(c.layersData[f].visibility===true){d(c.layersData[f])}}}});var d=function(e){b(function(){c.selectedBaseLayerId=e.id})}},transclude:true}}])})();(function(){angular.module("gawebtoolkit.ui.components",["gawebtoolkit.ui.components.opacity-slider","gawebtoolkit.ui.components.layer-control","gawebtoolkit.ui.components.layers-drop-down","gawebtoolkit.ui.components.base-layer-selector","gawebtoolkit.ui.components.google-place-name-search","gawebtoolkit.ui.components.geo-place-name-search","gawebtoolkit.ui.components.layer-interaction-toggle","gawebtoolkit.ui.components.deprecated","gawebtoolkit.ui.components.measure-toggle"])})();(function(){var a=angular.module("gawebtoolkit.ui.components.deprecated",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaDialogToggle",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/dialog-toggle.html",transclude:true,scope:{gaDialogController:"=",gaToggleClicked:"&"},link:function(b){b.toggleDialog=function(){var c=!b.gaDialogController.isClosed();if(!c){b.gaDialogController.openDialog()}else{b.gaDialogController.closeDialog()}b.gaToggleClicked({dialogController:b.gaDialogController})}}}}]);a.directive("gaStaticDialog",["$timeout","GAWTUtils",function(b,c){return{restrict:"AE",templateUrl:"src/main/js/ui/components/deprecated/static-dialog.html",scope:{controllerEmitEventName:"@",dialogConfig:"=",dialogWindowResize:"&",dialogClosed:"&",dialogOpened:"&"},controller:["$scope",function(e){$(window).bind("resize",function(){if(e.dialogWindowResize!=null){e.dialogConfig=angular.extend(e.dialogConfig,e.dialogWindowResize())}e.dialogConfig.autoOpen=!e.isClosed;$("#"+e.dialogId).dialog(e.dialogConfig)});e.dialogId=c.generateUuid();var d=this;d.openDialog=function(){$("#"+e.dialogId).dialog("open");e.isClosed=false;e.dialogOpened()};d.closeDialog=function(){$("#"+e.dialogId).dialog("close");e.isClosed=true;e.dialogClosed()};d.isClosed=function(){return e.isClosed};e.$emit(e.controllerEmitEventName,d)}],link:function(d){d.$on("$destroy",function(){$("#"+d.dialogId).dialog("destroy").remove()});var e=d.$watch("dialogConfig",function(f){if(f!=null){d.dialogReady=true;$("#"+d.dialogId).bind("dialogclose",function(){d.isClosed=true;b(function(){d.$apply()});d.dialogClosed()});d.isClosed=!f.autoOpen;e()}})},transclude:true}}]);a.directive("gaLayersDialog",["GAWTUtils",function(b){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/layers-dialog.html",scope:{layersData:"=",dialogConfig:"=",mapController:"="},controller:["$scope",function(d){$(window).bind("resize",function(){d.dialogConfig.autoOpen=!d.isClosed;$("#"+d.dialogId).dialog(d.dialogConfig)});d.dialogId=b.generateUuid();d.isClosed=!d.dialogConfig.autoOpen;var c=this;c.openDialog=function(){$("#"+d.dialogId).dialog("open");d.isClosed=false};c.closeDialog=function(){$("#"+d.dialogId).dialog("close");d.isClosed=true};c.isClosed=function(){return d.isClosed};d.$emit("layersDialogReady",c)}],link:function(e,d,c){e.filterBaseLayers=function(f){var g=e.mapController.isBaseLayer(f.id);return !g};e.$on("$destroy",function(){$("#"+e.dialogId).dialog("destroy").remove()});e.$watch(c.uiRefresh,function(){$("#"+e.dialogId).bind("dialogclose",function(){e.isClosed=!e.isClosed})})},transclude:true}}]);a.directive("gaSearchWfs",["$q","$interpolate","$log",function(b,d,c){return{restrict:"EA",templateUrl:"src/main/js/ui/components/deprecated/search-wfs.html",scope:{resultTemplateUrl:"@",mapController:"=",searchEndPoints:"=",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",primaryWfsProperty:"@",searchIconUrl:"@",placeHolder:"@",activateKey:"@"},controller:["$scope",function(e){e.waitingForResponse=false}],link:function(h,g,e){g.bind("keydown",function(m){if(m.keyCode==h.activateKey){h.searchButtonClicked();h.$apply()}});var f=[];var i;h.limitResults=10;h.$watch("searchEndPoints",function(m){if(m){if(h.mapController==null){return}f=[];for(var n=0;n<h.searchEndPoints.length;n++){var o=h.mapController.createWfsClient(h.searchEndPoints[n].url,h.searchEndPoints[n].featureType,h.searchEndPoints[n].featurePrefix,h.searchEndPoints[n].version,h.searchEndPoints[n].geometryName,h.searchEndPoints[n].datumProjection,h.searchEndPoints[n].isLonLatOrderValid);var p=h.mapController.addWfsClient(o);p.endPointId=h.searchEndPoints[n].id;f.push(p);i=h.searchEndPoints[n].featureAttributes}}});if(e.searchEndPoints==null){if(h.mapController!=null){var k=h.mapController.createWfsClient(h.url,h.featureType,h.featurePrefix,h.version,h.geometryName,h.datumProjection);f.push(h.mapController.addWfsClient(k))}}function l(m){return m.replace("'","").replace('"',"").replace("%","").replace("*","")}var j=function(q){q=l(q);h.searchResults=[];var n=b.defer();var p=0;var m=[];h.waitingForResponse=true;for(var o=0;o<f.length;o++){var r=f[o];h.mapController.searchWfs(f[o].clientId,q,i).then(function(t){if(t==null){c.error("Search server is unavailable.");n.resolve([]);return}p++;for(var s=0;s<t.features.length;s++){t.features[s].endPointId=r.endPointId;m.push(t.features[s])}if(p===f.length){n.resolve(m);h.waitingForResponse=false}})}return n.promise};h.getSearchResults=function(m){if(m!=null&&m.length>=3){return j(m).then(function(n){h.onResults({data:n});return n.slice(0,10)})}else{return[]}};h.onSelected=function(m){h.onResultsSelected({item:m})};h.searchButtonClicked=function(){if(typeof h.query==="object"&&h.query.properties!=null){h.query=h.query.properties[h.primaryWfsProperty]}if(h.query!=null){return j(h.query).then(function(m){h.onPerformSearch({data:m});return m})}}},transclude:true}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.geo-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoNamesPlaceSearch",["$http","$q","$timeout",function(d,b,c){return{restrict:"E",templateUrl:"src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html",scope:{mapController:"=",searchIconUrl:"@",geoNamesApiKey:"@",zoomLevel:"@",countryCode:"@",resultTemplateUrl:"@",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",activateKey:"@"},controller:["$scope",function(e){}],link:function(g,e){var f=e.find('input[type="text"]')[0];e.bind("keydown",function(i){if(i.keyCode==g.activateKey){if(g.typeAheadSelected){return}g.searchButtonClicked();g.$apply()}});var h=function(l,j){if(typeof l==="object"){l=l.properties.name}g.searchResults=[];var i=b.defer();g.waitingForResponse=true;var k="http://api.geonames.org/searchJSON?q="+encodeURIComponent(l).replace("%20","+")+"&maxRows="+j+"&country="+g.countryCode.toUpperCase()+"&username="+g.geoNamesApiKey;d.get(k).success(function(o){g.waitingForResponse=false;var n=[];for(var m=0;m<o.geonames.length;m++){var p=o.geonames[m];n.push(g.convertGeoNameToGeoJson(p))}i.resolve(n)});return i.promise};g.getSearchResults=function(i){if(!(i!=null&&i.length>=3)){return[]}return h(i,10).then(function(j){if(g.searchInProgress){return[]}g.onResults({data:j});return j})};g.onSelected=function(i){g.typeAheadSelected=true;c(function(){g.typeAheadSelected=false},50);g.onResultsSelected({item:i})};g.searchButtonClicked=function(){g.searchInProgress=true;if(g.query!=null){return h(g.query,50).then(function(i){g.searchInProgress=false;g.onPerformSearch({data:i});return i})}};g.convertGeoNameToGeoJson=function(j){var i={type:"Feature",geometry:{type:"Point",coordinates:[j.lng,j.lat]},crs:{type:"name",properties:{name:"EPSG:4326"}}};i.properties={};for(var k in j){if(j.hasOwnProperty(k)){i.properties[k]=j[k]}}return i}}}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.google-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("googlePlaceNameSearch",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/google-place-name-search/google-place-name-search.html",scope:{mapController:"=",searchIconUrl:"@",zoomLevel:"@",countryCode:"@"},controller:["$scope",function(b){}],link:function(d,b){var c=b.find('input[type="text"]')[0];var e=new google.maps.places.Autocomplete(c,{componentRestrictions:{country:d.countryCode}});google.maps.event.addListener(e,"place_changed",function(){var f=e.getPlace();if(!f.geometry){return}d.mapController.zoomTo(d.zoomLevel);d.mapController.setCenter(f.geometry.location.k,f.geometry.location.A,"EPSG:4326")})}}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.layer-control",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayerControl",["GAWTUtils",function(c){return{restrict:"E",templateUrl:"src/main/js/ui/components/layer-control/layer-control.html",scope:{layerData:"=",mapController:"=",onVisible:"&",onHidden:"&",onOpacityChange:"&",layerDisabled:"=",onStartLoading:"&",onFinishedLoading:"&"},controller:["$scope",function(d){d.elementId=c.generateUuid()}],compile:function b(){return{post:function d(g){var f=function(){g.onStartLoading({layerId:g.layerData.id})};var h=function(){g.onFinishedLoading({layerId:g.layerData.id})};g.$watch("layerData",function(i){if(i!=null){g.layerData.visibility=g.layerData.visibility===true||g.layerData.visibility==="true";if(g.mapController==null){throw new Error("mapController is not available")}if(g.layerData.id!=null){g.mapController.registerLayerEvent(g.layerData.id,"loadstart",f);g.mapController.registerLayerEvent(g.layerData.id,"loadend",h)}}})},pre:function e(f){f.changeOpacity=function(g,h){f.onOpacityChange({layerId:g,opacity:h})};f.layerClicked=function(){f.layerData.visibility=!f.layerData.visibility;f.mapController.setLayerVisibility(f.layerData.id,f.layerData.visibility);if(f.layerData.visibility){f.onVisible({layerId:f.layerData.id})}else{f.onHidden({layerId:f.layerData.id})}}}}},transclude:true}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.layer-interaction-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayerInteractionToggle",[function(){return{restrict:"E",replace:"true",templateUrl:"src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html",transclude:true,scope:{toggleIconSource:"@",controllerEmitEventName:"@",toggleOnCallback:"&",toggleOffCallback:"&",onLayerClickCallback:"&",mapController:"=",layerInteractionId:"="},controller:["$scope",function(c){var b=this;b.activate=function(){c.activate()};b.deactivate=function(){c.deactivate()};b.isToggleActive=function(){return c.isToggleOn};c.$emit(c.controllerEmitEventName,b)}],link:function(c,b){c.isToggleOn=false;c.activate=function(){c.mapController.registerMapClick(d);b.removeClass("gaUiToggleOff");b.addClass("gaUiToggleOn");c.isToggleOn=true;c.toggleOnCallback()};c.deactivate=function(){c.mapController.unRegisterMapClick(d);b.removeClass("gaUiToggleOn");b.addClass("gaUiToggleOff");c.isToggleOn=false;c.toggleOffCallback()};c.toggleClicked=function(){c.isToggleOn=!c.isToggleOn;if(c.isToggleOn){c.activate()}else{c.deactivate()}};var d=function(g){var f=c.mapController.getPointFromEvent(g);c.onLayerClickCallback({point:f,interactionId:c.layerInteractionId})}}}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.layers-drop-down",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayersDropDown",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/layers-drop-down/layers-drop-down.html",replace:false,scope:{layersData:"=",selectedModel:"=",controllerEmitEventName:"@",onSelectedLayerChanged:"&",onLayersInitialised:"&",layerGroupId:"@",includeNone:"@"},controller:["$scope",function(c){var b=this;c.selectLayer=function(){c.onSelectedLayerChanged({layerId:c.selectedModel,groupId:c.layerGroupId})};b.selectLayer=c.selectLayer;c.$emit(c.controllerEmitEventName,b)}],link:function(b){b.$watch("layersData",function(c){if(c&&!b.selectedModel){if(b.includeNone&&b.layersData[0].id!=="$none$"){b.layersData.unshift({id:"$none$",name:"None"})}b.selectedModel=c[0].id;b.onLayersInitialised({layerId:b.selectedModel,groupId:b.layerGroupId})}})},transclude:true}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.measure-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaMeasureToggle",[function(){return{restrict:"EA",templateUrl:"src/main/js/ui/components/measure-toggle/measure-toggle.html",scope:{resolveStyle:"&",toggleOnCallback:"&",toggleOffCallback:"&",onFinish:"&",onUpdate:"&",mapControlId:"@",controllerEmitEventName:"@",mapController:"="},controller:["$scope",function(c){var b=this;b.activate=function(){c.activate()};b.deactivate=function(){c.deactivate()};b.isToggleActive=function(){return c.mapController.isControlActive(c.mapControlId)};c.$emit(c.controllerEmitEventName,b)}],link:function(c,b){c.handleMeasurements=function(e){var d=c.mapController.getMeasureFromEvent(e);c.onFinish({event:d})};c.handlePartialMeasure=function(e){var d=c.mapController.getMeasureFromEvent(e);c.onUpdate({event:d})};c.activate=function(){c.mapController.activateControl(c.mapControlId);c.mapController.registerControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.registerControlEvent(c.mapControlId,"measurepartial",c.handlePartialMeasure);b.removeClass("gaUiToggleOff");b.addClass("gaUiToggleOn");c.toggleOnCallback()};c.deactivate=function(){c.mapController.deactivateControl(c.mapControlId);c.mapController.unRegisterControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.unRegisterControlEvent(c.mapControlId,"measurepartial",c.handlePartialMeasure);b.removeClass("gaUiToggleOn");b.addClass("gaUiToggleOff");c.toggleOffCallback()};c.handleToggle=function(){if(c.mapController.isControlActive(c.mapControlId,"measureline")){c.deactivate()}else{c.activate()}};c.$on("$destroy",function(){c.mapController.unRegisterControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.unRegisterControlEvent(c.mapControlId,"measurepartial",c.handleMeasurements)})},transclude:true,replace:"true"}}])})();(function(){var a=angular.module("gawebtoolkit.ui.components.opacity-slider",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaLayerOpacitySlider",["$timeout",function(b){return{restrict:"E",templateUrl:"src/main/js/ui/components/opacity-slider/opacity-slider.html",replace:true,scope:{layerId:"@",layerOpacity:"=",mapController:"=",layerDisabled:"=",titleText:"@",onOpacityChange:"&"},controller:["$scope",function(c){c.changeOpacitySlide=function(f,d){c.layerOpacity=d.value;b(function(){c.$apply();c.onOpacityChange({layerId:c.layerId,opacity:c.layerOpacity})})};c.getSliderOptions=function(){return{min:0,max:1,range:false,step:0.01,slide:c.changeOpacitySlide,value:c.layerOpacity,disabled:c.layerDisabled}}}],link:function(d,c){d.$watch("layerOpacity",function(f,e){if(f&&e!==f){$(c).slider(d.getSliderOptions())}});b(function(){c.find(".ui-slider-handle").attr("title",d.titleText)})},transclude:true}}])})();var angular=angular||{};var console=console||{};var $=$||{};var google=google||{};angular.module("gawebtoolkit.ui",["gawebtoolkit.ui.directives","gawebtoolkit.ui.templates","gawebtoolkit.ui.components","ui.utils","gawebtoolkit.utils"]);var app=angular.module("gawebtoolkit.ui.directives",["gawebtoolkit.utils"]);app.directive("gaZoomToExtentButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{extentPoints:"=",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){var b=a.mapController.createBounds(a.extentPoints);a.beforeZoom({points:b});a.mapController.zoomToExtent(b)}},transclude:true}}]);app.directive("gaZoomToCenterPositionAnchor",[function(){return{restrict:"E",template:'<a ng-click="zoomTo()"><div ng-transclude></div></a>',scope:{geoJsonCoord:"=",projection:"@",mapController:"=",zoomLevel:"@"},link:function(a){a.zoomTo=function(){a.mapController.setCenter(a.geoJsonCoord[1],a.geoJsonCoord[0],a.projection);a.mapController.zoomTo(a.zoomLevel)}},transclude:true}}]);app.directive("gaZoomToLayerButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{layerId:"@",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){a.mapController.zoomToLayer(a.layerId)}},transclude:true}}]);app.directive("gaToggle",[function(){var a='<button type="button" ng-click="toggle()"><div ng-transclude></div></button>';return{restrict:"E",replace:"true",template:a,transclude:true,scope:{gaToggleClicked:"&"},link:function(b){b.toggle=function(){b.gaToggleClicked()}}}}]);app.directive("fixIeSelect",function(){return{restrict:"A",controller:["$scope","$element","$timeout",function(b,a,c){b.$watch("options",function(){var e=$("<option>");var d=a.css("width");a.css("width");a.addClass("repaint").removeClass("repaint");e.appendTo(a).remove();c(function(){a.css("width","auto")});e=null})}]}});(function(){var a=angular.module("gawebtoolkit.vendor.bing-layers",["gawebtoolkit.core.layer-services"]);a.directive("gaBingLayer",["$timeout","$compile","GALayerService","$log",function(d,c,b,e){var g=["road","aerial","aerialwithlabels","birdseye","birdseyewithlabels"];var f=function(k){for(var h=0;h<g.length;h++){var j=g[h];if(j===k.toLowerCase()){return true}}return false};return{restrict:"E",require:"^gaMap",scope:{layerType:"@",visibility:"@",wrapDateLine:"@",bingApiKey:"@",controllerEmitEventName:"@"},transclude:false,controller:["$scope",function(i){var h=this;if(i.controllerEmitEventName){i.$emit(i.controllerEmitEventName,h)}return h}],link:function(p,k,o,h){p.framework=h.getFrameworkVersion();p.mapAPI={};p.mapAPI.mapController=h;var m={},l;m=b.defaultLayerOptions(o,p.framework);m.layerType=m.layerType||m.bingLayerType;if(!f(m.layerType)){e.warn("Invalid Bing layer type - "+m.layerType+' used. Defaulting to "Road". Specify default Bing layer type in "ga.config" - bingLayerType');m.layerType="Road"}var n=function(){p.layerReady=true};var j=function(){p.constructionInProgress=true;m.mapElementId=h.getMapElementId();e.info("Bing "+m.layerType+" - constructing...");if(m.bingApiKey==null){throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'")}l=b.createBingLayer(m,p.framework);h.addLayer(l).then(function(q){p.layerDto=q;n();e.info("construction complete...");p.constructionInProgress=false},function(q){p.$emit(m.layerName+"_error",m);p.onError({message:q,layer:m});n();e.info("construction failed...");p.constructionInProgress=false})};o.$observe("visibility",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){h.setLayerVisibility(p.layerDto.id,p.visibility==="true")}});o.$observe("layerType",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){p.initialiseLayer()}});p.initCount=0;function i(){e.info("reconstructing layer...");var q=h.getLayers();var s=null;for(var r=0;r<q.length;r++){if(q[r].id===p.layerDto.id){s=r;break}}if(s!=null){h.removeLayerById(p.layerDto.id);p.layerDto=null;m=b.defaultLayerOptions(o,p.framework);m.initialExtent=h.getInitialExtent();m.format=p.format;if(m.bingApiKey==null){throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'")}l=b.createBingLayer(m,p.framework);h.addLayer(l).then(function(t){p.layerDto=t;n();if(p.layerDto!=null){var u=s-h.getLayers().length+1;h.raiseLayerDrawOrder(p.layerDto.id,u)}})}}p.initialiseLayer=function(){e.info("initialising layer...");if(p.layerDto!=null){i()}else{if(p.layerReady&&p.constructionInProgress){e.info("...")}else{j()}}};p.$on("$destroy",function(){if(p.layerDto){h.removeLayerById(p.layerDto.id)}$(window).off("resize.Viewport")});p.initialiseLayer()}}}])})();(function(){var a=angular.module("gawebtoolkit.vendor.google-layers",["gawebtoolkit.core.layer-services"]);a.directive("gaGoogleLayer",["$timeout","$compile","GALayerService","$log",function(e,d,b,g){var f=["street","hybrid","satellite","terrain"];var c=function(k){for(var h=0;h<f.length;h++){var j=f[h];if(j===k.toLowerCase()){return true}}return false};return{restrict:"E",require:"^gaMap",scope:{layerType:"@",visibility:"@",controllerEmitEventName:"@"},transclude:false,controller:["$scope",function(i){var h=this;if(i.controllerEmitEventName){i.$emit(i.controllerEmitEventName,h)}return h}],link:function(p,k,o,h){p.framework=h.getFrameworkVersion();p.mapAPI={};p.mapAPI.mapController=h;var m={},l;m=b.defaultLayerOptions(o,p.framework);m.layerType=m.layerType||m.googleLayerType;if(!c(m.layerType)){g.warn("Invalid Google layer type - "+m.layerType+' used. Defaulting to "Hybrid". Specify default Google layer type in "ga.config" - googleLayerType');m.layerType="Hybrid"}var n=function(){p.layerReady=true};var j=function(){p.constructionInProgress=true;m.mapElementId=h.getMapElementId();g.info("Google "+p.layerType+" - constructing...");l=b.createGoogleLayer(m,p.framework);h.addLayer(l).then(function(q){p.layerDto=q;n();g.info("construction complete...");p.constructionInProgress=false},function(q){p.$emit(m.layerName+"_error",m);p.onError({message:q,layer:m});n();g.info("construction failed...");p.constructionInProgress=false})};o.$observe("visibility",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){h.setLayerVisibility(p.layerDto.id,p.visibility==="true"||p.visibility===true)}});o.$observe("layerType",function(){if(p.layerReady&&h&&p.layerDto!=null&&p.layerDto.id){p.initialiseLayer()}});p.initCount=0;function i(){g.info("reconstructing layer...");var q=h.getLayers();var s=null;for(var r=0;r<q.length;r++){if(q[r].id===p.layerDto.id){s=r;break}}if(s!=null){h.removeLayerById(p.layerDto.id);p.layerDto=null;m=b.defaultLayerOptions(o,p.framework);m.initialExtent=h.getInitialExtent();m.format=p.format;l=b.createGoogleLayer(m,p.framework);h.addLayer(l).then(function(t){p.layerDto=t;n();if(p.layerDto!=null){var u=s-h.getLayers().length+1;h.raiseLayerDrawOrder(p.layerDto.id,u)}})}}p.initialiseLayer=function(){g.info("initialising layer...");if(p.layerDto!=null){i()}else{if(p.layerReady&&p.constructionInProgress){g.info("...")}else{j()}}};p.$on("$destroy",function(){if(p.layerDto){h.removeLayerById(p.layerDto.id)}$(window).off("resize.Viewport")});p.initialiseLayer()}}}])})();(function(){var a=angular.module("gawebtoolkit.vendor.osm-layers",["gawebtoolkit.core.layer-services"]);a.directive("gaOsmLayer",["$timeout","$compile","GALayerService","$log",function(d,c,b,e){return{restrict:"E",require:"^gaMap",scope:{wrapDateLine:"@",visibility:"@",controllerEmitEventName:"@"},transclude:false,controller:["$scope",function(g){var f=this;if(g.controllerEmitEventName){g.$emit(g.controllerEmitEventName,f)}return f}],link:function(n,i,m,f){n.framework=f.getFrameworkVersion();n.mapAPI={};n.mapAPI.mapController=f;var k={},j;k=b.defaultLayerOptions(m,n.framework);var l=function(){n.layerReady=true};var h=function(){n.constructionInProgress=true;k.mapElementId=f.getMapElementId();e.info("OpenStreetMaps Cycle - constructing...");j=b.createOsmLayer(k,n.framework);f.addLayer(j).then(function(o){n.layerDto=o;l();e.info("construction complete...");n.constructionInProgress=false},function(o){n.$emit(k.layerName+"_error",k);n.onError({message:o,layer:k});l();e.info("construction failed...");n.constructionInProgress=false})};m.$observe("visibility",function(){if(n.layerReady&&f&&n.layerDto!=null&&n.layerDto.id){f.setLayerVisibility(n.layerDto.id,n.visibility==="true")}});n.initCount=0;function g(){e.info("reconstructing layer...");var o=f.getLayers();var q=null;for(var p=0;p<o.length;p++){if(o[p].id===n.layerDto.id){q=p;break}}if(q!=null){f.removeLayerById(n.layerDto.id);n.layerDto=null;k=b.defaultLayerOptions(m,n.framework);k.initialExtent=f.getInitialExtent();k.format=n.format;j=b.createLayer(k,n.framework);f.addLayer(j).then(function(r){n.layerDto=r;l();if(n.layerDto!=null){var s=q-f.getLayers().length+1;f.raiseLayerDrawOrder(n.layerDto.id,s)}})}}n.initialiseLayer=function(){e.info("initialising layer...");if(n.layerDto!=null){g()}else{if(n.layerReady&&n.constructionInProgress){e.info("...")}else{h()}}};n.$on("$destroy",function(){if(n.layerDto){f.removeLayerById(n.layerDto.id)}$(window).off("resize.Viewport")});n.initialiseLayer()}}}])})();(function(){angular.module("gawebtoolkit.vendor-layers",["gawebtoolkit.vendor.google-layers","gawebtoolkit.vendor.bing-layers","gawebtoolkit.vendor.osm-layers"])})();