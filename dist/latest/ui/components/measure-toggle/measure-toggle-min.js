(function(){var a=angular.module("gawebtoolkit.ui.components.measure-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("gaMeasureToggle",[function(){return{restrict:"EA",templateUrl:"src/main/js/ui/components/measure-toggle/measure-toggle.html",scope:{resolveStyle:"&",toggleOnCallback:"&",toggleOffCallback:"&",onFinish:"&",onUpdate:"&",mapControlId:"@",controllerEmitEventName:"@",mapController:"="},controller:["$scope",function(c){var b=this;b.activate=function(){c.activate()};b.deactivate=function(){c.deactivate()};b.isToggleActive=function(){return c.mapController.isControlActive(c.mapControlId)};c.$emit(c.controllerEmitEventName,b)}],link:function(c,b){c.handleMeasurements=function(e){var d=c.mapController.getMeasureFromEvent(e);c.onFinish({event:d})};c.handlePartialMeasure=function(e){var d=c.mapController.getMeasureFromEvent(e);c.onUpdate({event:d})};c.activate=function(){c.mapController.activateControl(c.mapControlId);c.mapController.registerControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.registerControlEvent(c.mapControlId,"measurepartial",c.handlePartialMeasure);b.removeClass("gaUiToggleOff");b.addClass("gaUiToggleOn");c.toggleOnCallback()};c.deactivate=function(){c.mapController.deactivateControl(c.mapControlId);c.mapController.unRegisterControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.unRegisterControlEvent(c.mapControlId,"measurepartial",c.handlePartialMeasure);b.removeClass("gaUiToggleOn");b.addClass("gaUiToggleOff");c.toggleOffCallback()};c.handleToggle=function(){if(c.mapController.isControlActive(c.mapControlId,"measureline")){c.deactivate()}else{c.activate()}};c.$on("$destroy",function(){c.mapController.unRegisterControlEvent(c.mapControlId,"measure",c.handleMeasurements);c.mapController.unRegisterControlEvent(c.mapControlId,"measurepartial",c.handleMeasurements)})},transclude:true,replace:"true"}}])})();