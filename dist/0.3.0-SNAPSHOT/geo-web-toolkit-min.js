var angular=angular||{};var jQuery=jQuery||{};var console=console||{};var app=angular.module("gawebtoolkit.config",[]);app.directive("gaMapConfig",["$compile","$http","$q","$interpolate","$timeout","$parse","$log",function(c,h,a,g,b,d,f){return{restrict:"E",scope:true,controller:["$scope","$element","$attrs",function(k,j,i){k.loadConfigData=function(){var l;if(i.configValue!=null){k.configLocal=true}if(i.gaConfigPath!=null&&i.gaConfigPath.indexOf("{{")!==-1){l=k.$eval(g(i.gaConfigPath))}else{l=i.gaConfigPath}if(i.staticConfig==="true"){l=l+".json"}var n=function(p){f.info("config http request success");if(p){f.info("config http request data present")}if(i.preConfig){var q=d(i.preConfig);k.gaConfigTemp=q(k,{config:p})}else{k.gaConfigTemp=p}k.$emit("configDataLoaded",k.gaConfigTemp);k.$broadcast("configDataLoaded",k.gaConfigTemp);if(i.postConfig){var o=d(i.postConfig);o(k,{config:k.gaConfigTemp})}};f.info("config loading...");var m=function(q,o,r,p){f.error("Failed to load config - "+o)};if(l!=null&&l.length>0){f.info("config http request starting");f.info(l);h({method:"GET",url:l}).success(n).error(m)}f.info(k.configLocal);if(k.configLocal){b(function(){n(k.$eval(i.configValue))},1000)}}}],compile:function e(n,l){var m;var j;if(l.templatePath!=null){var k=a.defer();h.get(l.templatePath).success(function(p){j=c(p);k.resolve(j)});m=k.promise}return{post:function i(r,q,p){},pre:function o(r,q,p){m.then(function(s){q.html(s(r));r.loadConfigData()})}}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.core.control-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMapControl",[function(){return{restrict:"E",require:"^gaMap",scope:{mapControlName:"@",mapControlId:"@",controlOptions:"=",containerElementId:"@",controlEnabled:"@"},link:function(c,b,a,d){if(!c.mapControlName){return}c.controlDto=d.addControl(c.mapControlName,c.controlOptions,c.containerElementId,c.mapControlId);if(a.controlEnabled!=null){a.$observe("controlEnabled",function(){if(c.controlEnabled==="true"){d.activateControl(c.controlDto.id)}else{d.deactivateControl(c.controlDto.id)}})}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var jQuery=jQuery||{};angular.module("gawebtoolkit.core",["gawebtoolkit.mapservices","gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-directives","gawebtoolkit.core.layer-services","gawebtoolkit.core.control-directives","gawebtoolkit.core.feature-directives","gawebtoolkit.core.marker-directives","gawebtoolkit.core.map-config","gawebtoolkit.utils"]);var angular=angular||{};var app=angular.module("gawebtoolkit.core.feature-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaFeatureLayer",["$timeout","$compile","$q","GALayerService","$log",function(d,c,b,a,e){return{restrict:"E",require:"^gaMap",scope:{url:"@",layerName:"@",serverType:"@",wfsFeatureList:"@",wfsFilterValue:"@",wfsVersion:"@",wfsFeaturePrefix:"@",wfsFeatureType:"@",wfsFeatureNs:"@",wfsFeatureAttributes:"@",wfsGeometryName:"@",visibility:"@",controllerEmitEventName:"@",postAddLayer:"&",onLayerDestroy:"&",isLonLatOrderValid:"@",inputFormat:"@"},controller:["$scope",function(g){g.layerControllerIsReady=false;g.gaFeatures=[];g.featurePromises=[];var f=this;f.hide=function(){g.mapAPI.mapController.setLayerVisibility(g.layerDto.id,false);return f};f.show=function(){g.mapAPI.mapController.setLayerVisibility(g.layerDto.id,true);return f};f.setOpacity=function(i){g.mapAPI.mapController.setOpacity(g.layerDto.id,i);return f};f.getFeatures=function(){return g.mapAPI.mapController.getLayerFeatures(g.layerDto.id)};f.addFeature=function(k){if(k.then!==null&&typeof k.then==="function"){if(g.layerControllerIsReady){k.then(function(l){g.mapAPI.mapController.addFeatureToLayer(g.layerDto.id,l)})}else{g.featurePromises.push(k)}return k}else{var j=b.defer();if(g.layerControllerIsReady){var i=g.mapAPI.mapController.addFeatureToLayer(g.layerDto.id,k);h(j,i)}else{g.featurePromises.push(j.promise);h(j,k)}return j.promise}};var h=function(i,j){d(function(){i.resolve(j)})};f.createFeatureAsync=function(k,i){var j=b.defer();g.gaFeatures.push({deferred:j,feature:k,isLonLatOrderValid:i});return j.promise};f.createFeature=function(i){return g.mapAPI.mapController.createFeature(i)};f.removeFeature=function(i){g.mapAPI.mapController.removeFeatureFromLayer(g.layerDto.id,i)};f.isLayerControllerReady=function(){return g.layerControllerIsReady};if(g.controllerEmitEventName){g.$emit(g.controllerEmitEventName,f)}return f}],transclude:false,link:function(f,i,g,k){f.mapAPI={};f.mapAPI.mapController=k;var j=a.defaultLayerOptions(g);j.datumProjection=k.getProjection();j.postAddLayer=f.postAddLayer;var h=a.createFeatureLayer(j);k.addLayer(h).then(function(l){f.layerDto=l;f.layerControllerIsReady=true;b.all(f.featurePromises).then(function(m){for(var o=0;o<m.length;o++){var n=m[o];k.addFeatureToLayer(f.layerDto.id,n)}})});f.$on("$destroy",function(){if(f.layerDto.id!=null){f.onLayerDestroy({map:k.getMapInstance()})}d(function(){a.cleanupLayer(k.getMapInstance(),f.layerDto.id)})});g.$observe("wfsFilterValue",function(l){if(l){d(function(){k.filterFeatureLayer(f.layerDto.id,l,f.wfsFeatureAttributes)})}});g.$observe("visibility",function(l){if(f.layerDto!=null){k.setLayerVisibility(f.layerDto.id,l)}})}}}]);app.directive("gaFeature",[function(){return{restrict:"E",require:"^gaFeatureLayer",scope:{visibility:"@",geoJsonFeature:"=",inputFormat:"@",isLonLatOrderValid:"@"},transclude:false,link:function(a,d,c,b){var f=true;var e=function(h,g){if(!h&&g){b.removeFeature(a.featureDto.id)}if(h&&h!==g){if(a.featureDto!=null&&a.featureDto.id.length>0){b.removeFeature(a.featureDto.id)}f=false;var i=b.createFeature(a.geoJsonFeature);b.addFeature(i).then(function(k){a.featureDto=k})}if(h&&f){var j=b.createFeature(a.geoJsonFeature);f=false;b.addFeature(j).then(function(k){a.featureDto=k})}};a.$on("$destroy",function(){if(a.featureDto!=null){b.removeFeature(a.featureDto.id)}if(a.geoJsonFeatureWatch!=null){a.geoJsonFeatureWatch()}});a.geoJsonFeatureWatch=a.$watch("geoJsonFeature",e)}}}]);var angular=angular||{};var $=$||{};var app=angular.module("gawebtoolkit.core.layer-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.layer-services","gawebtoolkit.core.map-services"]);app.directive("gaMapLayer",["$timeout","$compile","GALayerService","$log",function(c,b,a,d){return{restrict:"E",require:"^gaMap",scope:{layerAttribution:"@",layerName:"@",layerUrl:"@",layers:"@",layerType:"@",wrapDateLine:"@",visibility:"@",isBaseLayer:"@",opacity:"@",controllerEmitEventName:"@",refreshLayer:"@",onError:"&"},transclude:false,controller:["$scope",function(f){var e=this;e.hide=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,false);return e};e.show=function(){f.mapAPI.mapController.setLayerVisibility(f.layerDto.id,true);return e};e.setOpacity=function(g){f.mapAPI.mapController.setOpacity(f.layerDto.id,g);return e};if(f.controllerEmitEventName){f.$emit(f.controllerEmitEventName,e)}return e}],link:function(n,i,m,e){m.$observe("refreshLayer",function(p,o){if(p!==o){d.info("refresh for - "+n.layerName);n.initialiseLayer()}});n.mapAPI={};n.mapAPI.mapController=e;var k,j;var l=function(){n.layerReady=true};function g(){if(m.layers==null){m.layers="0"}if(m.wrapDateLine==null){m.wrapDateLine=true}if(m.visibility==null){m.visibility=true}if(m.layerType==null||m.layerType.length===0){if(m.layerUrl.indexOf("WMSServer")>0){m.layerType="WMS"}}}var h=function(){g();n.constructionInProgress=true;k=a.defaultLayerOptions(m);d.info(k.layerName+" - constructing...");if(k.layerType.length===0){return}j=a.createLayer(k);e.addLayer(j).then(function(o){n.layerDto=o;l();d.info("construction complete...");n.constructionInProgress=false},function(o){n.$emit(k.layerName+"_error",k);n.onError({message:o,layer:k});l();d.info("construction failed...");n.constructionInProgress=false})};m.$observe("visibility",function(){if(n.layerReady&&e&&n.layerDto!=null&&n.layerDto.id){e.setLayerVisibility(n.layerDto.id,n.visibility==="true")}});m.$observe("opacity",function(){if(n.layerReady&&e&&n.layerDto!=null&&n.layerDto.id){d.info("layer - "+n.layerDto.name+" - opacity changed - "+n.opacity);e.setOpacity(n.layerDto.id,n.opacity)}});n.initCount=0;function f(){d.info("reconstructing layer...");var o=e.getLayers();var q=null;for(var p=0;p<o.length;p++){if(o[p].id===n.layerDto.id){q=p;break}}if(q!=null){e.removeLayerById(n.layerDto.id);n.layerDto=null;g();k=a.defaultLayerOptions(m);j=a.createLayer(k);e.addLayer(j).then(function(r){n.layerDto=r;l();if(n.layerDto!=null){var s=q-e.getLayers().length+1;e.raiseLayerDrawOrder(n.layerDto.id,s)}})}}n.initialiseLayer=function(){d.info("initialising layer...");if(n.layerDto!=null){f()}else{if(n.layerReady&&n.constructionInProgress){d.info("...")}else{h()}}};n.$on("$destroy",function(){if(n.layerDto){e.removeLayerById(n.layerDto.id)}$(window).off("resize.Viewport")});if(m.refreshLayer==null&&n.layerType!=null&&n.layerType.length>0){n.initialiseLayer()}}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.layer-services",["gawebtoolkit.mapservices"]);app.service("GALayerService",["ga.config","mapLayerServiceLocator",function(b,a){return{createLayer:function(d){var c=a.getImplementation("olv2");return c.createLayer(d)},createFeatureLayer:function(d){var c=a.getImplementation("olv2");return c.createFeatureLayer(d)},removeLayerByName:function(d,e){var c=a.getImplementation("olv2");c.removeLayerByName(d,e)},removeLayersByName:function(d,e){var c=a.getImplementation("olv2");c.removeLayersByName(d,e)},removeLayer:function(d,e){var c=a.getImplementation("olv2");c.removeLayer(d,e)},removeLayerById:function(e,d){var c=a.getImplementation("olv2");c.removeLayerById(e,d)},getMarkerCountForLayerName:function(d,e){var c=a.getImplementation("olv2");return c.getMarkerCountForLayerName(d,e)},registerFeatureSelected:function(e,d,g,f){var c=a.getImplementation("olv2");return c.registerFeatureSelected(e,d,g,f)},defaultLayerOptions:function(d){var c=a.getImplementation("olv2");return c.defaultLayerOptions(d,new b())},createFeature:function(e,d){var c=a.getImplementation("olv2");return c.createFeature(e,d)},cleanupLayer:function(e,d){var c=a.getImplementation("olv2");return c.cleanupLayer(e,d)},registerLayerEvent:function(f,d,e,g){var c=a.getImplementation("olv2");c.registerLayerEvent(f,d,e,g)},unRegisterMapEvent:function(f,d,e,g){var c=a.getImplementation("olv2");c.unRegisterMapEvent(f,d,e,g)},addFeatureToLayer:function(e,d,f){var c=a.getImplementation("olv2");return c.addFeatureToLayer(e,d,f)},parselatLong:function(c){if(!c){return null}var e,d;e=c.split(",");d={lat:"",lon:""};d.lat=e[0];d.lon=e[1];return d},filterFeatureLayer:function(f,d,g,e){var c=a.getImplementation("olv2");c.filterFeatureLayer(f,d,g,e)},getLayerFeatures:function(e,d){var c=a.getImplementation("olv2");return c.getLayerFeatures(e,d)},removeFeatureFromLayer:function(e,d,f){var c=a.getImplementation("olv2");return c.removeFeatureFromLayer(e,d,f)},raiseLayerDrawOrder:function(e,d,f){var c=a.getImplementation("olv2");return c.raiseLayerDrawOrder(e,d,f)}}}]);app.service("mapLayerServiceLocator",["$injector",function(b){var a={olv2:"olv2LayerService"};return{getImplementation:function(c){return b.get(a[c])}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var app=angular.module("gawebtoolkit.core.map-config",[]);app.value("ga.config",function(){var a={standardTileSize:256,largeTileSize:1024,veryLargeTileSize:2048,minMapWidth:900,minMapHeight:600,panIncrement:30,smallPanIncrement:5,transitionEffect:"resize",visibility:true,isBaseLayer:false,wrapDateLine:true,sphericalMercator:true,opacity:1,layerAttribution:"",displayInLayerSwitcher:true,projection:"EPSG:102100",displayProjection:"EPSG:4326",numZoomLevels:15,transparent:true,format:"image/png",tileSize:function(c){var b;if(c){if(c==="large"){b=new OpenLayers.Size(a.largeTileSize,a.largeTileSize)}else{if(c==="vlarge"){b=new OpenLayers.Size(a.veryLargeTileSize,a.veryLargeTileSize)}}}else{b=new OpenLayers.Size(a.standardTileSize,a.standardTileSize)}return b},layerType:"WMS"};return{defaultOptions:a}});var angular=angular||{};var $=$||{};var app=angular.module("gawebtoolkit.core.map-directives",["gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMap",["$timeout","$compile","GAMapService","GALayerService","$q","$log",function(d,c,f,a,b,e){return{restrict:"E",scope:{mapElementId:"@",datumProjection:"@",displayProjection:"@",centerPosition:"@",zoomLevel:"@",initialExtent:"="},controller:["$scope",function(i){e.info("map creation started...");$("#"+i.mapElementId).empty();i.initialPositionSet=false;i.layerPromises=[];i.layerDtoPromises=[];function h(){var l=$("ga-map-layer,ga-feature-layer,ga-marker-layer");var r=g.getLayers();var k=0;for(var o=0;o<l.length;o++){var m=l[o];var q=$(m).isolateScope();var s=q.layerDto!=null?q.layerDto.id:null;if(s!=null){for(var n=0;n<r.length;n++){var p=r[n];if(p.id===s){if(k!==n){}}}k++}}}var g=this;g.addLayer=function(l){var n=b.defer();var k=b.defer();if(l.then!==null&&typeof l.then==="function"){n=l;if(i.layersReady){l.then(function(o){if(o==null){e.info("failed to load layer")}else{var p=f.addLayer(i.mapInstance,o);k.resolve(p);h();i.$emit("layerAdded",p)}})}else{i.layerPromises.push(n);i.layerDtoPromises.push(k)}}else{if(i.layersReady){e.info(l);var m=f.addLayer(i.mapInstance,l);k.resolve(m);h();i.$emit("layerAdded",m)}else{i.layerPromises.push(n.promise);i.layerDtoPromises.push(k);d(function(){n.resolve(l)})}}return k.promise};g.registerInitialLayer=function(l){var k=b.defer();return k.promise};var j=function(k,l){d(function(){k.resolve(l)})};g.zoomToMaxExtent=function(){f.zoomToMaxExtent(i.mapInstance)};g.currentZoomLevel=function(){return f.currentZoomLevel(i.mapInstance)};g.registerMapMouseMove=function(k){f.registerMapMouseMove(i.mapInstance,k)};g.registerMapMouseMoveEnd=function(k){f.registerMapMouseMoveEnd(i.mapInstance,k)};g.registerMapClick=function(k){f.registerMapClick(i.mapInstance,k)};g.unRegisterMapClick=function(k){f.unRegisterMapClick(i.mapInstance,k)};g.addControl=function(m,n,k,l){return f.addControl(i.mapInstance,m,n,k,l)};g.getLonLatFromPixel=function(l,m,k){return f.getLonLatFromPixel(i.mapInstance,l,m,k)};g.getPixelFromLonLat=function(l,k){return f.getPixelFromLonLat(i.mapInstance,l,k)};g.getPointFromEvent=function(k){return f.getPointFromEvent(k)};g.getLayers=function(){return f.getLayers(i.mapInstance)};g.getLayersByName=function(k){return f.getLayersByName(i.mapInstance,k)};g.zoomToLayer=function(k){f.zoomToLayer(i.mapInstance,k)};g.getProjection=function(){return i.datumProjection};g.getDisplayProjection=function(){return i.displayProjection};g.setLayerVisibility=function(l,k){f.setLayerVisibility(i.mapInstance,l,k)};g.createBoundingBox=function(k){return f.createBoundingBox(i.mapInstance,k)};g.createBounds=function(l,k){return f.createBounds(i.mapInstance,l,k)};g.zoomToExtent=function(k){f.zoomToExtent(i.mapInstance,k)};g.zoomTo=function(k){f.zoomTo(i.mapInstance,k)};g.setBaseLayer=function(k){f.setBaseLayer(i.mapInstance,k)};g.setCenter=function(l,m,k){f.setCenter(i.mapInstance,l,m,k)};g.setInitialPositionAndZoom=function(){var k={mapElementId:i.mapElementId,datumProjection:i.datumProjection,displayProjection:i.displayProjection,centerPosition:i.centerPosition,zoomLevel:i.zoomLevel,initialExtent:i.initialExtent};if(!i.centerPosition){i.centerPosition={lon:0,lat:0}}if(!i.initialPositionSet){f.setInitialPositionAndZoom(i.mapInstance,k)}i.initialPositionSet=true};g.isBaseLayer=function(k){return f.isBaseLayer(i.mapInstance,k)};g.getMapInstance=function(){return i.mapInstance};g.setOpacity=function(k,l){f.setOpacity(i.mapInstance,k,l)};g.getMapElementId=function(){return i.mapElementId};g.setMapMarker=function(k,m,l){f.setMapMarker(i.mapInstance,k,m,l)};g.removeLayerByName=function(k){a.removeLayerByName(i.mapInstance,k)};g.removeLayersByName=function(k){a.removeLayersByName(i.mapInstance,k)};g.removeLayer=function(k){a.removeLayer(i.mapInstance,k)};g.removeLayerById=function(k){a.removeLayerById(i.mapInstance,k)};g.getMarkerCountForLayerName=function(k){return a.getMarkerCountForLayerName(i.mapInstance,k)};g.drawPolyLine=function(l,k){f.drawPolyLine(i.mapInstance,l,k)};g.isControlActive=function(k){return f.isControlActive(i.mapInstance,k)};g.registerFeatureSelected=function(k,m,l){return a.registerFeatureSelected(i.mapInstance,k,m,l)};g.getFeatureInfo=function(q,m,o,n,p,k,l){return f.getFeatureInfo(i.mapInstance,q,m,o,n,p,k,l)};g.getFeatureInfoFromLayer=function(n,l,k,m){return f.getFeatureInfoFromLayer(i.mapInstance,n,l,k,m)};g.resetMapFired=function(){i.$emit("resetMapFired")};g.activateControl=function(k){f.activateControl(i.mapInstance,k)};g.deactivateControl=function(k){f.deactivateControl(i.mapInstance,k)};g.registerControlEvent=function(l,k,m){f.registerControlEvent(i.mapInstance,l,k,m)};g.unRegisterControlEvent=function(l,k,m){f.unRegisterControlEvent(i.mapInstance,l,k,m)};g.registerMapEvent=function(k,l){f.registerMapEvent(i.mapInstance,k,l)};g.registerLayerEvent=function(k,l,m){a.registerLayerEvent(i.mapInstance,k,l,m)};g.unRegisterLayerEvent=function(k,l,m){a.unRegisterLayerEvent(i.mapInstance,k,l,m)};g.unRegisterMapEvent=function(k,l){f.unRegisterMapEvent(i.mapInstance,k,l)};g.getCurrentMapExtent=function(){return f.getCurrentMapExtent(i.mapInstance)};g.filterFeatureLayer=function(k,m,l){a.filterFeatureLayer(i.mapInstance,k,m,l)};g.getLayerFeatures=function(k){return a.getLayerFeatures(i.mapInstance,k)};g.createFeature=function(k){return a.createFeature(i.mapInstance,k)};g.addFeatureToLayer=function(k,l){return a.addFeatureToLayer(i.mapInstance,k,l)};g.createWfsClient=function(m,p,o,l,q,n,k){return f.createWfsClient(m,p,o,l,q,n,k)};g.addWfsClient=function(k){return f.addWfsClient(k)};g.searchWfs=function(k,m,l){return f.searchWfs(i.mapInstance,k,m,l)};g.getMeasureFromEvent=function(k){return f.getMeasureFromEvent(i.mapInstance,k)};g.removeFeatureFromLayer=function(k,l){a.removeFeatureFromLayer(i.mapInstance,k,l)};g.raiseLayerDrawOrder=function(k,l){a.raiseLayerDrawOrder(i.mapInstance,k,l)};i.gaMap=g;$(window).bind("resize",function(){f.mapResized(i.mapInstance)});i.mapInstance=f.initialiseMap({mapElementId:i.mapElementId,datumProjection:i.datumProjection,displayProjection:i.displayProjection});i.$emit("mapInstanceReady",i.mapInstance);i.$emit("mapControllerReady",g);i.$broadcast("mapControllerReady",g);i.$on("$destroy",function(){e.info("map destruction started...");$(window).off("resize.Viewport");d(function(){e.info("map destruction finishing...");e.info("removing "+i.mapInstance.layers.length+" layers...");for(var l=0;l<i.mapInstance.layers.length;l++){var k=i.mapInstance.layers[l];i.mapInstance.removeLayer(k)}})})}],link:function(h){d(function(){b.allSettled(h.layerPromises).then(function(i){g(i)},function(i){g(i)})});function g(n){e.info("resolving all layers");var j=[];for(var l=0;l<n.length;l++){var k=n[l];if(typeof k==="string"){e.info(k);h.layerDtoPromises[l].reject(k)}else{var m=f.addLayer(h.mapInstance,k);h.layerDtoPromises[l].resolve(m);j.push(m)}}h.$emit("layersReady",j);h.$broadcast("layersReady",j);h.layersReady=true;h.gaMap.setInitialPositionAndZoom()}},transclude:false}}]);app.config(["$provide",function(a){a.decorator("$q",["$delegate",function(c){var b=c;b.allSettled=b.allSettled||function(h){var f=b.defer();if(angular.isArray(h)){var e=[];var g=[];var d=false;angular.forEach(h,function(k,j){e[j]=false});var i=function(l,m,k,j){var n=true;angular.forEach(l,function(p,o){if(!p){n=false}});if(n){if(j){k.reject(m)}else{k.resolve(m)}}};angular.forEach(h,function(k,j){b.when(k).then(function(l){e[j]=true;g[j]=l;i(e,g,f,d)},function(l){e[j]=true;g[j]=l;d=true;i(e,g,f,d)})})}else{throw"allSettled can only handle an array of promises (for now)"}return f.promise};return b}])}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var ol=ol||{};var app=angular.module("gawebtoolkit.core.map-services",["gawebtoolkit.mapservices"]);app.service("GAMapService",["$log","ga.config","mapServiceLocator",function(c,a,b){return{initialiseMap:function(f){var d=b.getImplementation("olv2");try{return d.initialiseMap(f,new a())}catch(g){c.error("Failed to initialise map");throw g}},zoomToMaxExtent:function(e){var d=b.getImplementation("olv2");d.zoomToMaxExtent(e)},zoomTo:function(e,f){var d=b.getImplementation("olv2");d.zoomTo(e,f)},currentZoomLevel:function(e){var d=b.getImplementation("olv2");return d.currentZoomLevel(e)},addLayer:function(e,f){var d=b.getImplementation("olv2");return d.addLayer(e,f)},registerMapMouseMove:function(e,f){var d=b.getImplementation("olv2");d.registerMapMouseMove(e,f)},registerMapMouseMoveEnd:function(e,f){var d=b.getImplementation("olv2");d.registerMapMouseMoveEnd(e,f)},registerMapClick:function(e,f){var d=b.getImplementation("olv2");d.registerMapClick(e,f)},unRegisterMapClick:function(e,f){var d=b.getImplementation("olv2");d.unRegisterMapClick(e,f)},registerMapEvent:function(f,e,g){var d=b.getImplementation("olv2");d.registerMapEvent(f,e,g)},unRegisterMapEvent:function(f,e,g){var d=b.getImplementation("olv2");d.unRegisterMapEvent(f,e,g)},getCurrentMapExtent:function(e){var d=b.getImplementation("olv2");return d.getCurrentMapExtent(e)},addControl:function(f,h,i,e,g){var d=b.getImplementation("olv2");return d.addControl(f,h,i,e,g)},isControlActive:function(e,f){var d=b.getImplementation("olv2");return d.isControlActive(e,f)},activateControl:function(e,f){var d=b.getImplementation("olv2");d.activateControl(e,f)},deactivateControl:function(e,f){var d=b.getImplementation("olv2");d.deactivateControl(e,f)},registerControlEvent:function(f,g,e,h){var d=b.getImplementation("olv2");d.registerControlEvent(f,g,e,h)},unRegisterControlEvent:function(f,g,e,h){var d=b.getImplementation("olv2");d.unRegisterControlEvent(f,g,e,h)},getLayers:function(e){var d=b.getImplementation("olv2");return d.getLayers(e)},getLayersByName:function(e,f){var d=b.getImplementation("olv2");return d.getLayersByName(e,f)},zoomToLayer:function(f,e){var d=b.getImplementation("olv2");d.zoomToLayer(f,e)},setLayerVisibility:function(g,f,e){var d=b.getImplementation("olv2");d.setLayerVisibility(g,f,e)},createBoundingBox:function(e,f){var d=b.getImplementation("olv2");return d.createBoundingBox(e,f)},createBounds:function(f,g,e){var d=b.getImplementation("olv2");return d.createBounds(f,g,e)},zoomToExtent:function(e,f){var d=b.getImplementation("olv2");d.zoomToExtent(e,f)},setCenter:function(f,g,h,e){var d=b.getImplementation("olv2");d.setCenter(f,g,h,e)},setInitialPositionAndZoom:function(e,f){var d=b.getImplementation("olv2");d.setInitialPositionAndZoom(e,f,new a())},setBaseLayer:function(f,e){var d=b.getImplementation("olv2");d.setBaseLayer(f,e)},isBaseLayer:function(f,e){var d=b.getImplementation("olv2");return d.isBaseLayer(f,e)},setOpacity:function(f,e,g){var d=b.getImplementation("olv2");d.setOpacity(f,e,g)},mapResized:function(e){var d=b.getImplementation("olv2");d.mapResized(e)},setMapMarker:function(e,g,h,f){var d=b.getImplementation("olv2");d.setMapMarker(e,g,h,f)},getLonLatFromPixel:function(g,f,h,e){var d=b.getImplementation("olv2");return d.getLonLatFromPixel(g,f,h,e)},getPixelFromLonLat:function(e,g,f){var d=b.getImplementation("olv2");return d.getPixelFromLonLat(e,g,f)},getPointFromEvent:function(f){var d=b.getImplementation("olv2");return d.getPointFromEvent(f)},drawPolyLine:function(e,g,f){var d=b.getImplementation("olv2");return d.drawPolyLine(e,g,f)},createWfsClient:function(g,j,i,f,k,h,e){var d=b.getImplementation("olv2");return d.createWfsClient(g,j,i,f,k,h,e)},getFeatureInfo:function(e,l,d,i,g,f,k,j){var h=b.getImplementation("olv2");return h.getFeatureInfo(e,l,d,i,g,f,k,j)},getFeatureInfoFromLayer:function(h,i,f,e,g){var d=b.getImplementation("olv2");return d.getFeatureInfoFromLayer(h,i,f,e,g)},getMeasureFromEvent:function(f,g){var d=b.getImplementation("olv2");return d.getMeasureFromEvent(f,g)},addWfsClient:function(e){var d=b.getImplementation("olv2");return d.addWfsClient(e)},searchWfs:function(f,e,h,g){var d=b.getImplementation("olv2");return d.searchWfs(f,e,h,g)}}}]);app.service("mapServiceLocator",["$injector",function(b){var a={olv2:"olv2MapService"};return{getImplementation:function(c){return b.get(a[c])}}}]);var angular=angular||{};var app=angular.module("gawebtoolkit.core.marker-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("gaMapMarker",[function(){return{restrict:"E",require:"^gaMap",scope:{markerIcon:"@",markerLong:"@",markerLat:"@",markerId:"@",mapMarkerClicked:"&"},link:function(c,b,a,d){b.bind("click",function(){c.mapMarkerClicked({id:c.markerId})});if(!c.mapControlName){return}d.addControl(c.mapControlName,c.controlOptions,b)}}}]);var angular=angular||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.utils",[]);app.service("GAWTUtils",[function(){return{generateUuid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(d){var b=Math.random()*16|0,a=d=="x"?b:(b&3|8);return a.toString(16)})}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.mapservices.data.openlayersv2",[]);app.service("WMSDataService",["$q","$http",function(a,b){return{getLayersByWMSCapabilities:function(d){var c=a.defer();b.get(d+"?request=GetCapabilities").success(function(j,e,l,f){var k=new OpenLayers.Format.WMSCapabilities();var h=k.read(j).capability.layers;var m=[];for(var g=0;g<h.length;g++){m.push(new OpenLayers.Layer.WMS(h[g]["abstract"],d,{layers:h[g].name}))}c.resolve(h)});return c.promise},getWMSFeatures:function(e,d,i,h,m,k){var n=a.defer();var g=m;var c=e.getExtent();c.transform(e.projection,m);var l=c.toBBOX();var f=OpenLayers.Util.extend({service:"WMS",version:h,request:"GetFeatureInfo",bbox:l,feature_count:100,height:e.getSize().h,width:e.getSize().w,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:"text/xml"},(parseFloat(h)>=1.3)?{crs:g,i:parseInt(k.x),j:parseInt(k.y)}:{srs:g,x:parseInt(k.x),y:parseInt(k.y)});if(i.length!==0){f=OpenLayers.Util.extend({layers:i,query_layers:i},f)}OpenLayers.Util.applyDefaults(f,{});var j={url:d,params:OpenLayers.Util.upperCaseObject(f),callback:function(q){var r=new OpenLayers.Format.WMSGetFeatureInfo();var p=r.read(q.responseText);var s=new OpenLayers.Format.GeoJSON();var o=angular.fromJson(s.write(p));n.resolve(o)},scope:this};OpenLayers.Request.GET(j);return n.promise},getWMSFeaturesByLayerId:function(f,d,h,q){var e=function(t){var i;if(t.params.STYLES){i=t.params.STYLES}else{if(OpenLayers.Util.isArray(t.params.LAYERS)){i=new Array(t.params.LAYERS.length)}else{i=t.params.LAYERS.toString().replace(/[^,]/g,"")}}return i};var s=a.defer();var n=[],r=[];var k=[f.getLayersBy("id",h)[0]];for(var j=0,m=k.length;j<m;j++){if(k[j].params.LAYERS!=null){n=n.concat(k[j].params.LAYERS);r=r.concat(e(k[j]))}}var c=k[0];var l=f.getProjection();var o=c.projection;if(o&&o.equals(f.getProjectionObject())){l=o.getCode()}var g=OpenLayers.Util.extend({service:"WMS",version:c.params.VERSION,request:"GetFeatureInfo",exceptions:c.params.EXCEPTIONS,bbox:f.getExtent().toBBOX(null,c.reverseAxisOrder()),feature_count:100,height:f.getSize().h,width:f.getSize().w,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:c.params.INFO_FORMAT||"text/xml"},(parseFloat(c.params.VERSION)>=1.3)?{crs:l,i:parseInt(q.x),j:parseInt(q.y)}:{srs:l,x:parseInt(q.x),y:parseInt(q.y)});if(n.length!==0){g=OpenLayers.Util.extend({layers:n,query_layers:n,styles:r},g)}OpenLayers.Util.applyDefaults(g,{});var p={url:d,params:OpenLayers.Util.upperCaseObject(g),callback:function(u){var v=new OpenLayers.Format.WMSGetFeatureInfo();var t=v.read(u.responseText);var w=new OpenLayers.Format.GeoJSON();var i=angular.fromJson(w.write(t));s.resolve(i)},scope:this};OpenLayers.Request.GET(p);return s.promise}}}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var google=google||{};var app=angular.module("gawebtoolkit.mapservices.layer.openlayersv2",[]);app.service("olv2LayerService",["$log","$q","$timeout",function(d,b,c){var a={xyzTileCachePath:"/tile/${z}/${y}/${x}",createLayer:function(e){var f;switch(e.layerType){case"WMS":f=a.createWMSLayer(e);break;case"XYZTileCache":f=a.createXYZLayer(e);break;case"ArcGISCache":f=a.createArcGISCacheLayer(e);break;case"Vector":f=a.createFeatureLayer(e);break;case"GoogleStreet":case"GoogleHybrid":case"GoogleSatellite":case"GoogleTerrain":f=a.createGoogleMapsLayer(e);break;default:throw new Error("Invalid layerType used to create layer of name "+e.layerName+" - with layerType - "+e.layerType)}f.geoLayerType=e.layerType;return f},createFeatureLayer:function(e){var f;if(e.url==null){f=new OpenLayers.Layer.Vector(e.layerName)}else{a.postAddLayerCache=a.postAddLayerCache||[];f=new OpenLayers.Layer.Vector(e.layerName,{strategies:[new OpenLayers.Strategy.Fixed()],styleMap:new OpenLayers.StyleMap({"default":new OpenLayers.Style({pointRadius:"10",fillOpacity:0.6,fillColor:"#ffcc66",strokeColor:"#cc6633"}),select:{fillColor:"#8aeeef"}}),protocol:new OpenLayers.Protocol.WFS({url:e.url,featureType:e.wfsFeatureType,featurePrefix:e.wfsFeaturePrefix,version:e.wfsVersion,geometryName:e.wfsGeometryName,srsName:e.datumProjection}),visibility:e.visibility})}if(e.postAddLayer!=null){a.postAddLayerCache[f.id]=e.postAddLayer}return f},createGoogleMapsLayer:function(f){var g;switch(f.layerType){case"GoogleStreet":g=google.maps.MapTypeId.STREET;break;case"GoogleHybrid":g=google.maps.MapTypeId.HYBRID;break;case"GoogleSatellite":g=google.maps.MapTypeId.SATELLITE;break;case"GoogleTerrain":g=google.maps.MapTypeId.TERRAIN;break}var e={wrapDateLine:f.wrapDateLine,transitionEffect:f.transitionEffect,visibility:f.visibility===true||f.visibility==="true",isBaseLayer:f.isBaseLayer===true||f.isBaseLayer==="true",tileSize:f.tileSize(f.tileType),sphericalMercator:f.sphericalMercator,centerPosition:f.centerPosition,attribution:f.layerAttribution,numZoomLevels:20,type:g,animationEnabled:true};return new OpenLayers.Layer.Google(f.layerName,e)},clearFeatureLayer:function(f,e){},createXYZLayer:function(e){var f={layerName:e.layerName,layerUrl:e.layerUrl,options:{wrapDateLine:e.wrapDateLine,transitionEffect:e.transitionEffect,visibility:e.visibility===true||e.visibility==="true",isBaseLayer:e.isBaseLayer===true||e.isBaseLayer==="true",tileSize:e.tileSize(e.tileType),sphericalMercator:e.sphericalMercator,centerPosition:e.centerPosition,attribution:e.layerAttribution}};if(f.options.isBaseLayer){if(e.resolutions){f.options.resolutions=e.resolutions}if(e.zoomOffset){f.options.zoomOffset=e.zoomOffset}}return new OpenLayers.Layer.XYZ(f.layerName,f.layerUrl+a.xyzTileCachePath,f.options)},createWMSLayer:function(e){var f={layerName:e.layerName,layerUrl:e.layerUrl,layers:e.layers,wrapDateLine:e.wrapDateLine,visibility:e.visibility===true||e.visibility==="true",isBaseLayer:e.isBaseLayer===true||e.isBaseLayer==="true",transitionEffect:e.transitionEffect,tileSize:e.tileSize(e.tileType),sphericalMercator:e.sphericalMercator,tileType:e.tileType,projection:e.datumProjection,transparent:e.transparent};return new OpenLayers.Layer.WMS(f.layerName,f.layerUrl,{layers:f.layers,format:f.format,transparent:f.transparent},f)},createArcGISCacheLayer:function(g){var f=b.defer();var h=new OpenLayers.Protocol.Script();var e=c(function(){f.reject("LayerTimeout")},10000);h.createRequest(g.layerUrl,{f:"json",pretty:"true"},function(j){c.cancel(e);if(j.error!=null&&j.error.code!=null){f.reject("LayerError - "+j.error.code);return}d.info(j);var k={layerName:g.layerName,layerUrl:g.layerUrl,options:{transitionEffect:g.transitionEffect,visibility:g.visibility===true||g.visibility==="true",isBaseLayer:g.isBaseLayer===true||g.isBaseLayer==="true",tileSize:g.tileSize(),alwaysInRange:false,displayInLayerSwitcher:false}};if(j){k.options.layerInfo=j;k.options.numZoomLevels=j.tileInfo.lods.length+1}var i=new OpenLayers.Layer.ArcGISCache(k.layerName,k.layerUrl,k.options);f.resolve(i)});return f.promise},defaultLayerOptions:function(f,e){var g=angular.extend(e.defaultOptions,f);g.centerPosition=a.parselatLong(g.centerPosition);return g},cleanupLayer:function(f,e){var g=f.getLayersBy("id",e)[0];if(g!=null){f.removeLayer(g)}},createFeature:function(g,f){var e;if(g.projection!==f.crs.properties.name){e=new OpenLayers.Format.GeoJSON({externalProjection:f.crs.properties.name,internalProjection:g.projection})}else{e=new OpenLayers.Format.GeoJSON()}return e.read(angular.toJson(f),f.type)},addFeatureToLayer:function(g,f,i){var h=a.getLayerById(g,f);if(i instanceof Array){h.addFeatures(i)}else{h.addFeatures([i])}var j=new OpenLayers.Format.GeoJSON();var e=angular.fromJson(j.write(i));e.id=i.id;return e},parselatLong:function(e){if(!e){return null}var g,f;g=e.split(",");f={lat:"",lon:""};f.lat=g[0];f.lon=g[1];return f},getLayerById:function(g,e){var f;for(var h=0;h<g.layers.length;h++){if(g.layers[h].id===e){f=g.layers[h];break}}return f},removeLayerByName:function(e,f){var g=e.getLayersByName(f);if(g.length>0){e.removeLayer(g[0])}},removeLayersByName:function(e,f){var h=e.getLayersByName(f);for(var g=0;g<h.length;g++){e.removeLayer(h[g])}},removeLayer:function(e,f){e.removeLayer(f)},removeLayerById:function(f,e){var g=f.getLayersBy("id",e)[0];f.removeLayer(g)},removeFeatureFromLayer:function(f,e,i){var h=f.getLayersBy("id",e)[0];var g=h.getFeatureById(i);h.removeFeatures(g)},registerFeatureSelected:function(f,e,l,i){var h=f.getLayersBy("id",e)[0];var j=h.geoLayerType;var g;if(j==="WMS"){g=OpenLayers.Protocol.WFS.fromWMSLayer(h)}var k=f.getControl("ctrlGetFeature");if(k){f.removeControl(k)}k=new OpenLayers.Control.GetFeature({protocol:g,box:true,hover:true,multipleKey:"shiftKey",toggleKey:"ctrlKey"});k.metadata=k.metadata||{};k.metadata.type="getfeature";k.events.register("featureselected",i,l);return{id:"ctrlGetFeature",name:"getfeature"}},registerLayerEvent:function(g,e,f,i){var h=g.getLayersBy("id",e)[0];h.events.register(f,h,i)},unRegisterLayerEvent:function(g,e,f,i){var h=g.getLayersBy("id",e)[0];h.events.unregister(f,h,i)},getMarkerCountForLayerName:function(e,f){var h=e.getLayersByName(f);var g=0;if(h.length>0){g=h[0].markers==null?0:h[0].markers.length}return g},filterFeatureLayer:function(f,g,m,n){var l=a.getLayerById(f,g);var k=a.parseFeatureAttributes(n);var h=[];for(var j=0;j<k.length;j++){h.push(new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:k[j],matchCase:false,value:m.toUpperCase()+"*"}))}var e=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:h});if(e.filters.length===1){l.filter=h[0];l.refresh({force:true})}else{l.filter=e;l.refresh({force:true})}},parseFeatureAttributes:function(e){if(!e){return null}var f=[];if(e.indexOf(",")===-1){f.push(e)}else{f=e.split(",")}return f},getLayerFeatures:function(f,e){var j=[];var h=a.getLayerById(f,e);for(var g=0;g<h.features.length;g++){j.push(h.features[g])}return j},raiseLayerDrawOrder:function(f,e,h){var g=a.getLayerById(f,e);f.raiseLayer(g,h)},postAddLayerCache:{}};return a}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var darwin=darwin||{};var app=angular.module("gawebtoolkit.mapservices.controls.openlayersv2",[]);app.service("olv2MapControls",[function(){var b=[{name:"permalink",constructor:OpenLayers.Control.Permalink},{name:"overviewmap",constructor:OpenLayers.Control.OverviewMap},{name:"scale",constructor:OpenLayers.Control.Scale},{name:"scaleline",constructor:OpenLayers.Control.ScaleLine},{name:"panzoombar",constructor:OpenLayers.Control.PanZoomBar},{name:"mouseposition",constructor:OpenLayers.Control.MousePosition},{name:"attribution",constructor:OpenLayers.Control.Attribution},{name:"measureline",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Path]},{name:"measurepolygon",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Polygon]},{name:"wmsgetfeatureinfo",constructor:OpenLayers.Control.WMSGetFeatureInfo}];var a={resolveSupportedControl:function(d){var f;for(var e=0;e<b.length;e++){var c=b[e];if(c.name===d){f=c;break}}return f},createControl:function(c,g,f){var e;if(f&&!g.div){g.div=f}var d=a.resolveSupportedControl(c);if(d==null||d.constructor==null){throw new Error("Error in map control construction. Unsupported control or missing source for control constructor.")}if(d.customParams){if(g){e=new d.constructor(d.customParams[0],g)}else{e=new d.constructor(d.customParams[0])}}else{if(g){e=new d.constructor(g)}else{e=new d.constructor()}}return e},registerControl:function(c,d){b.push({name:c,constructor:d})}};return a}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.mapservices.map.openlayersv2",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.controls.openlayersv2"]);app.service("olv2MapService",["olv2LayerService","olv2MapControls","GAWTUtils","GeoLayer","$q","$log",function(g,f,h,c,b,e){var a={initialiseMap:function(j,k){var i={};if(j.displayProjection==null){j.displayProjection=k.defaultOptions.displayProjection}a.displayProjection=j.displayProjection;if(j.datumProjection==null){j.datumProjection=k.defaultOptions.projection}i.projection=j.datumProjection;i.numZoomLevels=k.defaultOptions.numZoomLevels;i.displayProjection=j.displayProjection;if(i.controls===undefined||i.controls===null){i.controls=[new OpenLayers.Control.Navigation()]}return new OpenLayers.Map(j.mapElementId,i)},getParameterByName:function(i){i=i.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var k=new RegExp("[\\?&]"+i+"=([^&#]*)"),j=k.exec(document.URL);return j==null?"":decodeURIComponent(j[1].replace(/\+/g," "))},zoomToMaxExtent:function(i){i.zoomToMaxExtent()},currentZoomLevel:function(i){return i.getZoom()},addLayer:function(i,j){if(j.then!=null&&typeof j.then==="function"){j.then(function(k){i.addLayer(k);a.postLayerAddAction(i,j);return c.fromOpenLayersV2Layer(j)})}else{if(j.geoLayerType!=null&&j.geoLayerType.indexOf("Google")!==-1){i.zoomDuration=0}i.addLayer(j);a.postLayerAddAction(i,j);return c.fromOpenLayersV2Layer(j)}},postLayerAddAction:function(i,j){e.info("post layer add fired");if(g.postAddLayerCache[j.id]){g.postAddLayerCache[j.id]({map:i,layer:j})}d(i,g)},registerMapMouseMove:function(i,j){i.events.register("mousemove",i,j)},registerMapClick:function(i,j){i.events.register("click",i,j)},unRegisterMapClick:function(i,j){i.events.unregister("click",i,j)},registerMapMouseMoveEnd:function(i,j){i.events.register("moveend",i,j)},registerMapEvent:function(j,i,k){j.events.register(i,j,k)},unRegisterMapEvent:function(j,i,k){j.events.unregister(i,j,k)},getCurrentMapExtent:function(j){var l=j.getExtent();if(l==null){return null}l=l.transform(j.projection,a.displayProjection);var i=[];var o=[l.left,l.top];var n=[l.right,l.top];var k=[l.left,l.bottom];var m=[l.right,l.bottom];i.push(o);i.push(n);i.push(k);i.push(m);return i},isControlActive:function(k,m){var n;for(var l=0;k.controls.length;l++){var j=k.controls[l];if(j.id===m){n=j;break}}return n.active===true},addControl:function(k,m,p,j,l){m=m.toLowerCase();var o={};var n;if(j){n=$("#"+j)[0]}if(m==="mouseposition"){if(p==null){p={}}}var i=f.createControl(m,p,n);i.id=l||i.id;k.addControl(i);o.id=i.id;return o},getControls:function(k){var j=[];var l=k.controls;for(var m=0;m<l.length;m++){var n=l[m];j.push({id:n.metadata.id||n.id,name:n.metadata.type})}return j},getControlById:function(k,n){var j;var l=k.controls;for(var m=0;m<l.length;m++){var o=l[m];if(o.id===n){j=o;break}}return j},activateControl:function(i,j){var k=a.getControlById(i,j);k.activate()},deactivateControl:function(i,j){var k=a.getControlById(i,j);k.deactivate()},registerControlEvent:function(j,k,i,m){var l=a.getControlById(j,k);l.events.register(i,undefined,m)},unRegisterControlEvent:function(j,k,i,m){var l=a.getControlById(j,k);l.events.unregister(i,undefined,m)},getLayers:function(i){var j=[];angular.forEach(i.layers,function(k){j.push(c.fromOpenLayersV2Layer(k))});return j},getLayersByName:function(k,l){if(typeof l!=="string"&&typeof l!=="number"){throw new TypeError("Expected number")}var o=k.getLayersBy("name",l);var n=[];for(var m=0;m<o.length;m++){var j=o[m];n.push(c.fromOpenLayersV2Layer(j))}return n},setLayerVisibility:function(l,j,i){if(typeof i==="object"){throw new TypeError("Expected boolean")}var k=l.getLayersBy("id",j)[0];k.setVisibility(i)},createBoundingBox:function(j,l){var m=new OpenLayers.Bounds();for(var k=0;k<l.length;k++){m.extend(new OpenLayers.LonLat(l[k][0],l[k][1]))}return m.toBBOX()},createBounds:function(k,n,j){var o=new OpenLayers.Bounds();for(var m=0;m<n.length;m++){var l=new OpenLayers.LonLat(n[m][0],n[m][1]);l=l.transform(j,k.projection);o.extend(l)}return o},zoomToExtent:function(i,j){i.zoomToExtent(j,false)},zoomToLayer:function(j,i){var k=j.getLayersBy("id",i)[0];var l=k.getExtent();j.zoomToExtent(l)},zoomTo:function(i,j){if(typeof j==="object"){throw new TypeError("Expected number")}i.zoomTo(j)},setBaseLayer:function(j,i){var k=j.getLayersBy("id",i)[0];j.setBaseLayer(k,false)},setCenter:function(k,m,n,i){var l=new OpenLayers.LonLat(n,m);if(i==null){k.setCenter(l)}else{var j=l.transform(new OpenLayers.Projection(i),new OpenLayers.Projection(k.getProjection()));k.setCenter(j)}},setInitialPositionAndZoom:function(l,m){if(a.getParameterByName("zoom")!==""&&m.centerPosition!=null){var k=new OpenLayers.LonLat(a.getParameterByName("lon"),a.getParameterByName("lat")).transform();var o=new OpenLayers.Projection(a.displayProjection);var p=new OpenLayers.Projection(l.getProjection());var j=k.transform(o,p);l.setCenter(j,a.getParameterByName("zoom"))}else{if(m.initialExtent!=null){var n=a.createBounds(l,m.initialExtent,a.displayProjection);l.zoomToExtent(n,true)}else{if(m.centerPosition){var i=JSON.parse(m.centerPosition);l.setCenter(new OpenLayers.LonLat(i.lon,i.lat),m.zoomLevel)}else{l.zoomToMaxExtent()}}}},isBaseLayer:function(n,k){var j=false;var m;var l=n.layers.length;for(var o=0;o<l;o++){if(n.layers[o].id===k){m=n.layers[o];break}}if(m){if(m.id.indexOf("ArcGISCache")!==-1){j=m.options.isBaseLayer}else{j=m.isBaseLayer}}else{j=false}return j},setOpacity:function(j,i,k){if(typeof k==="object"){throw new TypeError("Expected number")}var l=j.getLayersBy("id",i)[0];l.setOpacity(k)},mapResized:function(j){j.updateSize();for(var k=0;k<j.layers.length;k++){j.layers[k].redraw(true)}},setMapMarker:function(j,q,n,i){var o=j.getLayersBy("name",n);var r=j.getLonLatFromPixel(q);var s=new OpenLayers.Size(21,25);var l=new OpenLayers.Pixel(-(s.w/2),-s.h);var p=new OpenLayers.Icon(i,s,l);var m=new OpenLayers.Marker(r,p.clone());m.map=j;if(o!=null&&o.length>0){o[0].addMarker(m)}else{var k=new OpenLayers.Layer.Markers(n);j.addLayer(k);k.addMarker(m)}},getLonLatFromPixel:function(l,k,m,j){if(k==null){throw new ReferenceError("'x' value cannot be null or undefined")}if(m==null){throw new ReferenceError("'y' value cannot be null or undefined")}var i=l.getLonLatFromPixel({x:k,y:m});if(j){i=i.transform(l.projection,j)}else{if(a.displayProjection&&a.displayProjection!==l.projection){i=i.transform(l.projection,a.displayProjection)}}return i},getPixelFromLonLat:function(i,k,j){if(k==null){throw new ReferenceError("'lon' value cannot be null or undefined")}if(j==null){throw new ReferenceError("'lat' value cannot be null or undefined")}return i.getPixelFromLonLat(new OpenLayers.LonLat(k,j))},getPointFromEvent:function(i){return{x:i.xy.x,y:i.xy.y}},drawPolyLine:function(j,q,l,p){var i=new OpenLayers.Geometry.Point(q[0].lon,q[0].lat);var o=new OpenLayers.Geometry.Point(q[1].lon,q[1].lat);var n=p||"EPSG:4326";var k=new OpenLayers.Layer.Vector(l);var r=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([o,i]).transform(new OpenLayers.Projection(n),j.getProjection()));var m=OpenLayers.Util.applyDefaults(m,OpenLayers.Feature.Vector.style["default"]);m.strokeWidth=4;r.style=m;k.addFeatures([r]);j.addLayer(k)},getFeatureInfo:function(m,j,r,q,o,v,s){s=s||0;var x=b.defer();var u=new OpenLayers.Pixel(v.x,v.y);var n=u.add(-s,s);var l=u.add(s,-s);var t=m.getLonLatFromPixel(n);var p=m.getLonLatFromPixel(l);var i=new OpenLayers.Bounds(t.lon,t.lat,p.lon,p.lat);var w=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:j,version:"1.1.0",srsName:m.projection,featureType:r,featurePrefix:q,geometryName:o,maxFeatures:100});var k=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:i});w.read({filter:k,callback:function(z){if(z.success()){var B=new OpenLayers.Format.GeoJSON();var y=B.write(z.features);var C=angular.fromJson(y);for(var A=0;A<C.features.length;A++){C.features[A].crs={type:"name",properties:{name:m.projection}}}x.resolve(C)}}});return x.promise},getFeatureInfoFromLayer:function(k,v,o,u,r){r=r||0;var t=new OpenLayers.Pixel(u.x,u.y);var m=t.add(-r,r);var l=t.add(r,-r);var s=k.getLonLatFromPixel(m);var n=k.getLonLatFromPixel(l);var i=new OpenLayers.Bounds(s.lon,s.lat,n.lon,n.lat);var p=k.getLayersBy("id",o);var q;if(p.length>0){q=p[0]}else{throw new Error("Invalid layer id")}var w=OpenLayers.Protocol.WFS.fromWMSLayer(q);var j=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:i});w.read({filter:j,callback:function(y){if(y.success()){var A=new OpenLayers.Format.GeoJSON();var x=A.write(y.features);var B=angular.fromJson(x);for(var z=0;z<B.features.length;z++){B.features[z].crs={type:"name",properties:{name:k.projection}}}v(B)}}})},createWfsClient:function(k,n,m,j,p,l,i){var o=new OpenLayers.Protocol.WFS({url:k,featureType:n,featurePrefix:m,version:j,geometryName:p,srsName:l});o.isLonLatOrderValid=i;return o},addWfsClient:function(j){a.wfsClientCache=a.wfsClientCache||[];var i=h.generateUuid();a.wfsClientCache[i]=j;return{clientId:i}},searchWfs:function(m,i,p,o){var k=a.wfsClientCache[i];var l=b.defer();var j=function(r){if(r.priv.status!="200"){l.resolve(null);return}for(var t=0;t<r.features.length;t++){if(a.wfsClientCache[i].isLonLatOrderValid==false){var v=r.features[t].geometry.x;var w=r.features[t].geometry.y;r.features[t].geometry.x=w;r.features[t].geometry.y=v}}var u=new OpenLayers.Format.GeoJSON();var q=u.write(r.features);var x=angular.fromJson(q);for(var s=0;s<x.features.length;s++){x.features[s].crs={type:"name",properties:{name:k.srsName}}}l.resolve(x)};var n=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:o,matchCase:false,value:p.toUpperCase()+"*"});k.read({filter:n,callback:j});return l.promise},getMeasureFromEvent:function(i,m){var k;var l=new OpenLayers.Format.GeoJSON({externalProjection:a.displayProjection,internalProjection:i.projection});var j=l.write(m.geometry);k=angular.fromJson(j);return{measurement:m.measure,units:m.units,geoJson:k}},wfsClientCache:{}};function d(k,o){for(var j in o.postAddLayerCache){if(o.postAddLayerCache.hasOwnProperty(j)){var l=false;for(var n=0;n<k.layers.length;n++){var m=k.layers[n];if(j===m.id){l=true}}if(!l){o.postAddLayerCache[j]=null}}}}return a}]);var angular=angular||{};var OpenLayers=OpenLayers||{};var console=console||{};var $=$||{};var app=angular.module("gawebtoolkit.mapservices",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.map.openlayersv2"]);app.factory("GeoLayer",[function(){var a=function(f,d,e,b,c){this.id=f;this.name=d;this.type=e;this.visibility=b;this.opacity=c};a.fromOpenLayersV2Layer=function(c){var b;if(typeof c.opacity==="string"){b=Number(c.opacity)}else{b=c.opacity}return new a(c.id,c.name,c.geoLayerType,c.visibility,b)};return a}]);var angular=angular||{};var console=console||{};var $=$||{};var google=google||{};angular.module("gawebtoolkit.ui",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);var app=angular.module("gawebtoolkit.ui.directives",["gawebtoolkit.utils"]);app.directive("gaLayerControl",["GAWTUtils","$timeout",function(d,a){var b='<label for="{{elementId}}" class="checkbox" style="display:inline-block;width:65%"><input id="{{elementId}}" type="checkbox" ng-model="layerData.visibility" ng-click="layerClicked()" ng-disabled="layerDisabled"/>{{layerData.name}}</label><div style="display:inline;width:30%" ng-transclude></div><div ng-show="layerData.visibility" class="gaLayerControlSliderContainer"><ga-layer-opacity-slider map-controller="mapController" layer-opacity="layerData.opacity" layer-id="{{layerData.id}}" layer-disabled="layerDisabled" on-opacity-change="changeOpacity(layerId,opacity)" title-text="Opacity control for layer - {{layerData.name}}" ></ga-layer-opacity-slider></div>';return{restrict:"E",template:b,scope:{layerData:"=",mapController:"=",onVisible:"&",onHidden:"&",onOpacityChange:"&",layerDisabled:"=",onStartLoading:"&",onFinishedLoading:"&"},controller:["$scope",function(e){e.elementId=d.generateUuid()}],compile:function c(){return{post:function e(h){var g=function(){h.onStartLoading({layerId:h.layerData.id})};var i=function(){h.onFinishedLoading({layerId:h.layerData.id})};h.$watch("layerData",function(k,j){if(k!=null){if(h.mapController==null){throw new Error("mapController is not available")}h.mapController.registerLayerEvent(h.layerData.id,"loadstart",g);h.mapController.registerLayerEvent(h.layerData.id,"loadend",i)}})},pre:function f(g){g.changeOpacity=function(h,i){g.onOpacityChange({layerId:h,opacity:i})};g.layerClicked=function(){g.layerData.visibility=!g.layerData.visibility;if(g.layerData.visibility){g.onVisible({layerId:g.layerData.id})}else{g.onHidden({layerId:g.layerData.id})}}}}},transclude:true}}]);app.directive("gaLayerOpacitySlider",["$timeout",function(a){var b='<div ui-jq="slider" ui-options="getSliderOptions()"></div>';return{restrict:"E",template:b,replace:true,scope:{layerId:"@",layerOpacity:"=",mapController:"=",layerDisabled:"=",titleText:"@",onOpacityChange:"&"},controller:["$scope",function(c){c.changeOpacitySlide=function(f,d){c.layerOpacity=d.value;a(function(){c.$apply();c.onOpacityChange({layerId:c.layerId,opacity:c.layerOpacity})})};c.getSliderOptions=function(){return{min:0,max:1,range:false,step:0.01,change:c.changeOpacitySlide,value:c.layerOpacity,disabled:c.layerDisabled}}}],link:function(d,c){d.$watch("layerOpacity",function(f,e){if(f&&e!==f){$(c).slider(d.getSliderOptions())}});a(function(){c.find(".ui-slider-handle").attr("title",d.titleText)})},transclude:true}}]);app.directive("gaLayersDropDown",[function(){var a='<div><select fix-ie-select ng-model="selectedModel" ng-change="selectLayer()" ng-options="dropDownLayer.id as dropDownLayer.name for dropDownLayer in layersData" ></select></div>';return{restrict:"E",template:a,replace:false,scope:{layersData:"=",selectedModel:"=",controllerEmitEventName:"@",onSelectedLayerChanged:"&",onLayersInitialised:"&",layerGroupId:"@",includeNone:"@"},controller:["$scope",function(c){var b=this;c.selectLayer=function(){c.onSelectedLayerChanged({layerId:c.selectedModel,groupId:c.layerGroupId})};b.selectLayer=c.selectLayer;c.$emit(c.controllerEmitEventName,b)}],link:function(b){b.$watch("layersData",function(c){if(c&&!b.selectedModel){if(b.includeNone&&b.layersData[0].id!=="$none$"){b.layersData.unshift({id:"$none$",name:"None"})}b.selectedModel=c[0].id;b.onLayersInitialised({layerId:b.selectedModel,groupId:b.layerGroupId})}})},transclude:true}}]);app.directive("gaBaseLayersDialog",["GAWTUtils",function(b){var a='<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}"><div ng-repeat="layer in layersData"><input type="radio" name="baseLayerSelection" value="{{layer.id}}" ng-model="$parent.selectedLayerId" ng-click="changeBaseLayer()" />{{layer.name}}</div></div>';return{restrict:"E",template:a,scope:{layersData:"=",dialogConfig:"=",mapController:"="},controller:["$scope",function(d){$(window).bind("resize",function(){d.dialogConfig.autoOpen=!d.isClosed;$("#"+d.dialogId).dialog(d.dialogConfig)});d.dialogId=b.generateUuid();d.isClosed=!d.dialogConfig.autoOpen;var c=this;c.openDialog=function(){$("#"+d.dialogId).dialog("open");d.isClosed=false};c.closeDialog=function(){$("#"+d.dialogId).dialog("close");d.isClosed=true};c.isClosed=function(){return d.isClosed};d.$watch("selectedBaseLayerId",function(f,e){if(e!=null){d.mapController.setBaseLayer(f)}});d.$watch("layersData",function(e){if(e){for(var f=0;f<e.length;f++){if(e[f].visibility===true){d.selectedBaseLayerId=e[f].id}}}});d.$emit("baseLayerDialogReady",c)}],link:function(c){c.$on("$destroy",function(){$("#"+c.dialogId).dialog("destroy").remove()});var d=c.$watch("layersData",function(e){if(e){c.selectedBaseLayerId=c.layersData[0].id;d()}})},transclude:true}}]);app.directive("gaBaseLayerSelector",["$timeout",function(a){var b='<select title="Base layer selector" fix-ie-select ng-options="layer.id as layer.name for layer in layersData" ng-model="selectedBaseLayerId"></select>';return{restrict:"E",template:b,replace:true,scope:{layersData:"=",mapController:"=",controllerEmitEventName:"@"},controller:["$scope",function(d){var c=this;c.selectBaseLayer=function(e){d.selectedBaseLayerId=e};d.$emit(d.controllerEmitEventName,c)}],link:function(c){c.$watch("selectedBaseLayerId",function(e){if(e!=null){c.mapController.setBaseLayer(e)}});c.$watch("layersData",function(e){if(e){for(var f=0;f<e.length;f++){if(c.layersData[f].visibility===true){d(c.layersData[f])}}}});var d=function(e){a(function(){c.selectedBaseLayerId=e.id})}},transclude:true}}]);app.directive("gaSearchWfsLayer",[function(){var a='<input type="text" class="search" ng-model="query" value="Place name search"/><input type="button" class="searchButton" ng-click="searchWfs()" value="search"/>';return{restrict:"EA",template:a,scope:{layerId:"@",query:"=",attributes:"@",onQuerySearch:"&",onQueryChange:"&",onQueryResults:"&",mapController:"="},link:function(b){b.searchWfs=function(){b.onQuerySearch({layerId:b.layerId,attributes:b.attributes,query:b.query})};b.$watch("query",function(){b.onQueryChange({layerId:b.layerId,attributes:b.attributes,query:b.query})})}}}]);app.directive("googlePlaceNameSearch",[function(){return{restrict:"E",template:'<input type="text" class="search-box"  placeholder="{{placeHolder}}" /><input type="image" class="button search-button" accesskey="4" alt="Search using your entered search criteria" title="Search using your entered search criteria" src="{{searchIconUrl}}"/>',scope:{mapController:"=",searchIconUrl:"@",zoomLevel:"@",countryCode:"@"},controller:["$scope",function(a){}],link:function(d,b,a){var c=b.find('input[type="text"]')[0];var e=new google.maps.places.Autocomplete(c,{componentRestrictions:{country:d.countryCode}});google.maps.event.addListener(e,"place_changed",function(){var f=e.getPlace();if(!f.geometry){return}d.mapController.zoomTo(d.zoomLevel);d.mapController.setCenter(f.geometry.location.k,f.geometry.location.A,"EPSG:4326")})}}}]);app.directive("geoNamesPlaceSearch",["$http","$q","$timeout",function(c,a,b){return{restrict:"E",template:'<input type="text" class="search-box"  placeholder="Place name search" ng-model="query"ng-class="{typeAheadLoading:waitingForResponse}" typeahead="result as result.properties.name for result in getSearchResults($viewValue)" typeahead-template-url="{{resultTemplateUrl}}" typeahead-on-select="onSelected($item, $model, $label)" typeahead-wait-ms="200" typeahead-editable="true"/><input type="image" class="button search-button" accesskey="4" ng-click="searchButtonClicked()" alt="Search using your entered search criteria" title="Search using your entered search criteria" src="{{searchIconUrl}}"/>',scope:{mapController:"=",searchIconUrl:"@",geoNamesApiKey:"@",zoomLevel:"@",countryCode:"@",resultTemplateUrl:"@",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",activateKey:"@"},controller:["$scope",function(d){}],link:function(g,e,d){var f=e.find('input[type="text"]')[0];e.bind("keydown",function(i){if(i.keyCode==g.activateKey){if(g.typeAheadSelected){return}g.searchButtonClicked();g.$apply()}});var h=function(l,j){if(typeof l==="object"){l=l.properties.name}g.searchResults=[];var i=a.defer();g.waitingForResponse=true;var k="http://api.geonames.org/searchJSON?q="+encodeURIComponent(l).replace("%20","+")+"&maxRows="+j+"&country="+g.countryCode.toUpperCase()+"&username="+g.geoNamesApiKey;c.get(k).success(function(o){g.waitingForResponse=false;var n=[];for(var m=0;m<o.geonames.length;m++){var p=o.geonames[m];n.push(g.convertGeoNameToGeoJson(p))}i.resolve(n)});return i.promise};g.getSearchResults=function(i){if(i!=null&&i.length>=3){return h(i,10).then(function(j){if(g.searchInProgress){return[]}g.onResults({data:j});return j})}else{return[]}};g.onSelected=function(i){g.typeAheadSelected=true;b(function(){g.typeAheadSelected=false},50);g.onResultsSelected({item:i})};g.searchButtonClicked=function(){g.searchInProgress=true;if(g.query!=null){return h(g.query,50).then(function(i){g.searchInProgress=false;g.onPerformSearch({data:i});return i})}};g.convertGeoNameToGeoJson=function(j){var i={type:"Feature",geometry:{type:"Point",coordinates:[j.lng,j.lat]},crs:{type:"name",properties:{name:"EPSG:4326"}}};i.properties={};for(var k in j){if(j.hasOwnProperty(k)){i.properties[k]=j[k]}}return i}}}}]);app.directive("gaSearchWfs",["$q","$interpolate","$log",function(a,d,c){var b='<input type="text" class="search-box" ng-model="query" ng-class="{typeAheadLoading:waitingForResponse}" placeholder="{{placeHolder}}" /><input type="image" class="button search-button" ng-click="searchButtonClicked()" accesskey="4" alt="Search using your entered search criteria" title="Search using your entered search criteria" src="{{searchIconUrl}}">';return{restrict:"EA",template:b,scope:{resultTemplateUrl:"@",mapController:"=",searchEndPoints:"=",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",primaryWfsProperty:"@",searchIconUrl:"@",placeHolder:"@",activateKey:"@"},controller:["$scope",function(e){e.waitingForResponse=false}],link:function(h,g,e){g.bind("keydown",function(m){if(m.keyCode==h.activateKey){h.searchButtonClicked();h.$apply()}});var f=[];var i;h.limitResults=10;h.$watch("searchEndPoints",function(m){if(m){if(h.mapController==null){return}f=[];for(var n=0;n<h.searchEndPoints.length;n++){var o=h.mapController.createWfsClient(h.searchEndPoints[n].url,h.searchEndPoints[n].featureType,h.searchEndPoints[n].featurePrefix,h.searchEndPoints[n].version,h.searchEndPoints[n].geometryName,h.searchEndPoints[n].datumProjection,h.searchEndPoints[n].isLonLatOrderValid);var p=h.mapController.addWfsClient(o);p.endPointId=h.searchEndPoints[n].id;f.push(p);i=h.searchEndPoints[n].featureAttributes}}});if(e.searchEndPoints==null){if(h.mapController!=null){var k=h.mapController.createWfsClient(h.url,h.featureType,h.featurePrefix,h.version,h.geometryName,h.datumProjection);f.push(h.mapController.addWfsClient(k))}}function l(m){return m.replace("'","").replace('"',"").replace("%","").replace("*","")}var j=function(q){q=l(q);h.searchResults=[];var n=a.defer();var p=0;var m=[];h.waitingForResponse=true;for(var o=0;o<f.length;o++){var r=f[o];h.mapController.searchWfs(f[o].clientId,q,i).then(function(t){if(t==null){c.error("Search server is unavailable.");n.resolve([]);return}p++;for(var s=0;s<t.features.length;s++){t.features[s].endPointId=r.endPointId;m.push(t.features[s])}if(p===f.length){n.resolve(m);h.waitingForResponse=false}})}return n.promise};h.getSearchResults=function(m){if(m!=null&&m.length>=3){return j(m).then(function(n){h.onResults({data:n});return n.slice(0,10)})}else{return[]}};h.onSelected=function(m){h.onResultsSelected({item:m})};h.searchButtonClicked=function(){if(typeof h.query==="object"&&h.query.properties!=null){h.query=h.query.properties[h.primaryWfsProperty]}if(h.query!=null){return j(h.query).then(function(m){h.onPerformSearch({data:m});return m})}}},transclude:true}}]);app.directive("gaMeasureToggle",[function(){return{restrict:"EA",template:'<button type="button" ng-click="handleToggle()"><div ng-transclude></div></button> ',scope:{resolveStyle:"&",toggleOnCallback:"&",toggleOffCallback:"&",onFinish:"&",onUpdate:"&",mapControlId:"@",controllerEmitEventName:"@",mapController:"="},controller:["$scope",function(b){var a=this;a.activate=function(){b.activate()};a.deactivate=function(){b.deactivate()};a.isToggleActive=function(){return b.mapController.isControlActive(b.mapControlId)};b.$emit(b.controllerEmitEventName,a)}],link:function(a){a.handleMeasurements=function(c){var b=a.mapController.getMeasureFromEvent(c);a.onFinish({event:b})};a.handlePartialMeasure=function(c){var b=a.mapController.getMeasureFromEvent(c);a.onUpdate({event:b})};a.activate=function(){a.mapController.activateControl(a.mapControlId);a.mapController.registerControlEvent(a.mapControlId,"measure",a.handleMeasurements);a.mapController.registerControlEvent(a.mapControlId,"measurepartial",a.handlePartialMeasure);a.toggleOnCallback()};a.deactivate=function(){a.mapController.deactivateControl(a.mapControlId);a.mapController.unRegisterControlEvent(a.mapControlId,"measure",a.handleMeasurements);a.mapController.unRegisterControlEvent(a.mapControlId,"measurepartial",a.handlePartialMeasure);a.toggleOffCallback()};a.handleToggle=function(){if(a.mapController.isControlActive(a.mapControlId)){a.deactivate()}else{a.activate()}};a.$on("$destroy",function(){a.mapController.unRegisterControlEvent(a.mapControlId,"measure",a.handleMeasurements);a.mapController.unRegisterControlEvent(a.mapControlId,"measurepartial",a.handleMeasurements)})},transclude:true,replace:true}}]);app.directive("gaLayersDialog",["GAWTUtils",function(b){var a='<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}"><div ng-repeat="layer in layersData"><ga-layer-control map-controller="mapController" layer-data="layer"></ga-layer-control></div></div>';return{restrict:"E",template:a,scope:{layersData:"=",dialogConfig:"=",mapController:"="},controller:["$scope",function(d){$(window).bind("resize",function(){d.dialogConfig.autoOpen=!d.isClosed;$("#"+d.dialogId).dialog(d.dialogConfig)});d.dialogId=b.generateUuid();d.isClosed=!d.dialogConfig.autoOpen;var c=this;c.openDialog=function(){$("#"+d.dialogId).dialog("open");d.isClosed=false};c.closeDialog=function(){$("#"+d.dialogId).dialog("close");d.isClosed=true};c.isClosed=function(){return d.isClosed};d.$emit("layersDialogReady",c)}],link:function(e,d,c){e.filterBaseLayers=function(f){var g=e.mapController.isBaseLayer(f.id);return !g};e.$on("$destroy",function(){$("#"+e.dialogId).dialog("destroy").remove()});e.$watch(c.uiRefresh,function(){$("#"+e.dialogId).bind("dialogclose",function(){e.isClosed=!e.isClosed})})},transclude:true}}]);app.directive("gaStaticDialog",["$timeout","GAWTUtils",function(a,c){var b='<div ui-jq="dialog" ui-options="dialogConfig" id="{{dialogId}}"><div ng-transclude></div></div>';return{restrict:"AE",template:b,scope:{controllerEmitEventName:"@",dialogConfig:"=",dialogWindowResize:"&",dialogClosed:"&",dialogOpened:"&"},controller:["$scope",function(e){$(window).bind("resize",function(){if(e.dialogWindowResize!=null){e.dialogConfig=angular.extend(e.dialogConfig,e.dialogWindowResize())}e.dialogConfig.autoOpen=!e.isClosed;$("#"+e.dialogId).dialog(e.dialogConfig)});e.dialogId=c.generateUuid();var d=this;d.openDialog=function(){$("#"+e.dialogId).dialog("open");e.isClosed=false;e.dialogOpened()};d.closeDialog=function(){$("#"+e.dialogId).dialog("close");e.isClosed=true;e.dialogClosed()};d.isClosed=function(){return e.isClosed};e.$emit(e.controllerEmitEventName,d)}],link:function(d){d.$on("$destroy",function(){$("#"+d.dialogId).dialog("destroy").remove()});var e=d.$watch("dialogConfig",function(f){if(f!=null){d.dialogReady=true;$("#"+d.dialogId).bind("dialogclose",function(){d.isClosed=true;a(function(){d.$apply()});d.dialogClosed()});d.isClosed=!f.autoOpen;e()}})},transclude:true}}]);app.directive("gaDialogToggle",[function(){var a='<button type="button" ng-click="toggleDialog()"><div ng-transclude></div></button>';return{restrict:"E",replace:"true",template:a,transclude:true,scope:{gaDialogController:"=",gaToggleClicked:"&"},link:function(b){b.toggleDialog=function(){var c=!b.gaDialogController.isClosed();if(!c){b.gaDialogController.openDialog()}else{b.gaDialogController.closeDialog()}b.gaToggleClicked({dialogController:b.gaDialogController})}}}}]);app.directive("gaLayerInteractionToggle",[function(){var a='<button ng-click="toggleClicked()" class="gaUiToggleOff" type="button"><div ng-transclude></div></button>';return{restrict:"E",replace:"true",template:a,transclude:true,scope:{toggleIconSource:"@",controllerEmitEventName:"@",toggleOnCallback:"&",toggleOffCallback:"&",onLayerClickCallback:"&",mapController:"=",layerInteractionId:"="},controller:["$scope",function(c){var b=this;b.activate=function(){c.activate()};b.deactivate=function(){c.deactivate()};b.isToggleActive=function(){return c.isToggleOn};c.$emit(c.controllerEmitEventName,b)}],link:function(c,b){c.isToggleOn=false;c.activate=function(){c.mapController.registerMapClick(d);b.removeClass("gaUiToggleOff");b.addClass("gaUiToggleOn");c.isToggleOn=true;c.toggleOnCallback()};c.deactivate=function(){c.mapController.unRegisterMapClick(d);b.removeClass("gaUiToggleOn");b.addClass("gaUiToggleOff");c.isToggleOn=false;c.toggleOffCallback()};c.toggleClicked=function(){c.isToggleOn=!c.isToggleOn;if(c.isToggleOn){c.activate()}else{c.deactivate()}};var d=function(g){var f=c.mapController.getPointFromEvent(g);c.onLayerClickCallback({point:f,interactionId:c.layerInteractionId})}}}}]);app.directive("gaZoomToExtentButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{extentPoints:"=",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){var b=a.mapController.createBounds(a.extentPoints);a.beforeZoom({points:b});a.mapController.zoomToExtent(b)}},transclude:true}}]);app.directive("gaZoomToCenterPositionAnchor",[function(){return{restrict:"E",template:'<a ng-click="zoomTo()"><div ng-transclude></div></a>',scope:{geoJsonCoord:"=",projection:"@",mapController:"=",zoomLevel:"@"},link:function(a){a.zoomTo=function(){a.mapController.setCenter(a.geoJsonCoord[1],a.geoJsonCoord[0],a.projection);a.mapController.zoomTo(a.zoomLevel)}},transclude:true}}]);app.directive("gaZoomToLayerButton",[function(){return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{layerId:"@",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){a.mapController.zoomToLayer(a.layerId)}},transclude:true}}]);app.directive("gaToggle",[function(){var a='<button type="button" ng-click="toggle()"><div ng-transclude></div></button>';return{restrict:"E",replace:"true",template:a,transclude:true,scope:{gaToggleClicked:"&"},link:function(b){b.toggle=function(){b.gaToggleClicked()}}}}]);app.directive("fixIeSelect",function(){return{restrict:"A",controller:["$scope","$element","$timeout",function(b,a,c){b.$watch("options",function(){var e=$("<option>");var d=a.css("width");a.css("width");a.addClass("repaint").removeClass("repaint");e.appendTo(a).remove();c(function(){a.css("width","auto")});e=null})}]}});