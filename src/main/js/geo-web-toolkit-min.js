var angular=angular||{},jQuery=jQuery||{},console=console||{},app=angular.module("gawebtoolkit.config",[]);app.directive("geoMapConfig",["$compile","$http","$q","$interpolate","$timeout","$parse","$log",function(a,b,c,d,e,f,g){"use strict";return{restrict:"E",scope:!0,controller:["$scope","$element","$attrs",function(a,c,h){a.loadConfigData=function(){var c;null!=h.configValue&&(a.configLocal=!0),null!=h.localStorageKey&&(a.fromLocalStorage=!0,a.localStorageKey=h.localStorageKey),c=null!=h.gaConfigPath&&-1!==h.gaConfigPath.indexOf("{{")?a.$eval(d(h.gaConfigPath)):h.gaConfigPath,"true"===h.staticConfig&&(c+=".json");var i=function(b){if(g.info("config http request success"),b&&g.info("config http request data present"),h.preConfig){var c=f(h.preConfig);a.gaConfigTemp=c(a,{config:b})}else a.gaConfigTemp=b;if(a.$emit("configDataLoaded",a.gaConfigTemp),a.$broadcast("configDataLoaded",a.gaConfigTemp),h.postConfig){var d=f(h.postConfig);d(a,{config:a.gaConfigTemp})}};g.info("config loading...");var j=function(a,b){g.error("Failed to load config - "+b)};null!=c&&c.length>0&&b({method:"GET",url:c}).success(i).error(j),a.configLocal&&e(function(){i(a.$eval(h.configValue))},1e3),a.fromLocalStorage&&(g.info("Loading config from local storage..."),e(function(){var b=window.localStorage.getItem(a.localStorageKey);i(angular.copy(JSON.parse(b)))},1e3))}}],compile:function(d,e){var f,g;if(null!=e.templatePath){var h=c.defer();b.get(e.templatePath).success(function(b){g=a(b),h.resolve(g)}),f=h.promise}return{post:function(){},pre:function(a,b){f.then(function(c){b.html(c(a)),a.loadConfigData()})}}}}}]);var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.core.control-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("geoMapControl",[function(){"use strict";return{restrict:"E",require:"^geoMap",scope:{mapControlName:"@",mapControlId:"@",controlOptions:"=",containerElementId:"@",preOptionsLoaded:"&",controlEnabled:"@"},link:function(a,b,c,d){if(a.mapControlName){var e=a.preOptionsLoaded({options:a.controlOptions});a.controlOptions=void 0===e?a.controlOptions:e,a.controlDto=d.addControl(a.mapControlName,a.controlOptions,a.containerElementId,a.mapControlId),null!=c.controlEnabled&&c.$observe("controlEnabled",function(){"true"===a.controlEnabled?d.activateControl(a.controlDto.id):d.deactivateControl(a.controlDto.id)})}}}}]);var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},jQuery=jQuery||{};angular.module("gawebtoolkit.core",["gawebtoolkit.mapservices","gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-directives","gawebtoolkit.vendor-layers","gawebtoolkit.core.layer-services","gawebtoolkit.core.data-services","gawebtoolkit.core.control-directives","gawebtoolkit.core.feature-directives","gawebtoolkit.core.marker-directives","gawebtoolkit.core.map-config","gawebtoolkit.utils"]),function(){var a=angular.module("gawebtoolkit.core.data-services",["gawebtoolkit.mapservices","gawebtoolkit.core.map-config"]);a.service("GeoDataService",["$log","ga.config","dataServiceLocator",function(a,b,c){"use strict";var d="olv2";return{getLayersByWMSCapabilities:function(a,b){var e=b||d,f=c.getImplementation(e);return f.getLayersByWMSCapabilities(a)},getWMSFeatures:function(a,b,e,f,g,h,i){var j=i||d,k=c.getImplementation(j);return k.getWMSFeatures(a,b,e,f,g,h)},getWMSFeaturesByLayerId:function(a,b,e,f,g){var h=g||d,i=c.getImplementation(h);return i.getLayersByWMSCapabilities(a,b,e,f)}}}]),a.service("dataServiceLocator",["$injector",function(a){"use strict";var b={olv2:"olv2DataService",olv3:"olv3DataService"};return{getImplementation:function(c){return a.get(b[c])}}}])}();var angular=angular||{},app=angular.module("gawebtoolkit.core.feature-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("geoFeatureLayer",["$timeout","$compile","$q","GeoLayerService","$log","GeoUtils",function(a,b,c,d,e){"use strict";return{restrict:"E",require:"^geoMap",scope:{url:"@",layerName:"@",visibility:"@",projection:"@",controllerEmitEventName:"@",refreshLayer:"@",style:"@",postAddLayer:"&",onLayerDestroy:"&"},controller:["$scope",function(b){b.layerControllerIsReady=!1,b.gaFeatures=[],b.featurePromises=[];var e=this;e.hide=function(){return b.mapAPI.mapController.setLayerVisibility(b.layerDto.id,!1),e},e.show=function(){return b.mapAPI.mapController.setLayerVisibility(b.layerDto.id,!0),e},e.setOpacity=function(a){return b.mapAPI.mapController.setOpacity(b.layerDto.id,a),e},e.getFeatures=function(){return b.mapAPI.mapController.getLayerFeatures(b.layerDto.id)},e.addFeature=function(a){if(b.style){var e;try{e=JSON.parse(b.style)}catch(g){throw new Error("Failed to parse style")}d.setFeatureStyle(a,e,b.mapAPI.mapController.getFrameworkVersion())}if(null!==a.then&&"function"==typeof a.then)return b.layerControllerIsReady?a.then(function(a){b.mapAPI.mapController.addFeatureToLayer(b.layerDto.id,a)}):b.featurePromises.push(a),a;var h=c.defer();if(b.layerControllerIsReady){var i=b.mapAPI.mapController.addFeatureToLayer(b.layerDto.id,a);f(h,i)}else b.featurePromises.push(h.promise),f(h,a);return h.promise};var f=function(b,c){a(function(){b.resolve(c)})};return e.createFeatureAsync=function(a,d){var e=c.defer();return b.gaFeatures.push({deferred:e,feature:a,isLonLatOrderValid:d}),e.promise},e.createFeature=function(a){return b.mapAPI.mapController.createFeature(a)},e.removeFeature=function(a){b.mapAPI.mapController.removeFeatureFromLayer(b.layerDto.id,a)},e.isLayerControllerReady=function(){return b.layerControllerIsReady},e.clearFeatures=function(){d.clearFeatureLayer(b.mapAPI.mapController.getMapInstance(),b.layerDto.id,b.mapAPI.mapController.getFrameworkVersion())},b.controllerEmitEventName&&b.$emit(b.controllerEmitEventName,e),e}],transclude:!1,link:function(b,f,g,h){function i(){e.info("reconstructing layer...");for(var a=h.getLayers(),f=null,i=0;i<a.length;i++)if(a[i].id===b.layerDto.id){f=i;break}if(null!=f){h.removeLayerById(b.layerDto.id),b.layerDto=null;var k=d.defaultLayerOptions(g,h.getFrameworkVersion());k.datumProjection=b.projection||h.getProjection(),k.postAddLayer=b.postAddLayer;var l=d.createFeatureLayer(k,h.getFrameworkVersion());h.addLayer(l).then(function(a){if(b.layerDto=a,j(),null!=b.layerDto){var d=f-h.getLayers().length+1;h.raiseLayerDrawOrder(b.layerDto.id,d)}c.all(b.featurePromises).then(function(a){for(var c=0;c<a.length;c++){var d=a[c];h.addFeatureToLayer(b.layerDto.id,d)}})})}}g.$observe("refreshLayer",function(a,c){a!==c&&(e.info("refresh for - "+b.layerName),b.initialiseLayer())}),b.mapAPI={},b.mapAPI.mapController=h;var j=function(){b.layerReady=!0},k=function(){b.constructionInProgress=!0;var a=d.defaultLayerOptions(g,h.getFrameworkVersion());a.datumProjection=b.projection||h.getProjection(),a.postAddLayer=b.postAddLayer,e.info(a.layerName+" - constructing...");var f=d.createFeatureLayer(a,h.getFrameworkVersion());h.addLayer(f).then(function(a){b.layerDto=a,b.layerControllerIsReady=!0,c.all(b.featurePromises).then(function(a){for(var c=0;c<a.length;c++){var d=a[c];h.addFeatureToLayer(b.layerDto.id,d)}})})};g.$observe("visibility",function(){b.layerReady&&h&&null!=b.layerDto&&b.layerDto.id&&h.setLayerVisibility(b.layerDto.id,"true"===b.visibility)}),g.$observe("opacity",function(){b.layerReady&&h&&null!=b.layerDto&&b.layerDto.id&&h.setOpacity(b.layerDto.id,b.opacity)}),b.initCount=0,b.initialiseLayer=function(){e.info("initialising layer..."),null!=b.layerDto?i():b.layerReady&&b.constructionInProgress?e.info("..."):k()},b.$on("$destroy",function(){null!=b.layerDto.id&&b.onLayerDestroy({map:h.getMapInstance()}),a(function(){d.cleanupLayer(h.getMapInstance(),b.layerDto.id)})}),g.$observe("visibility",function(a){null!=b.layerDto&&h.setLayerVisibility(b.layerDto.id,a)}),null==g.refreshLayer&&b.initialiseLayer()}}}]),app.directive("geoFeature",[function(){"use strict";return{restrict:"E",require:"^geoFeatureLayer",scope:{visibility:"@",geoJsonFeature:"=",inputFormat:"@",isLonLatOrderValid:"@"},transclude:!1,link:function(a,b,c,d){var e=!0,f=function(b,c){if(!b&&c&&d.removeFeature(a.featureDto.id),b&&b!==c){null!=a.featureDto&&a.featureDto.id.length>0&&d.removeFeature(a.featureDto.id),e=!1;var f=d.createFeature(a.geoJsonFeature);d.addFeature(f).then(function(b){a.featureDto=b})}if(b&&e){var g=d.createFeature(a.geoJsonFeature);e=!1,d.addFeature(g).then(function(b){a.featureDto=b})}};a.$on("$destroy",function(){null!=a.featureDto&&d.removeFeature(a.featureDto.id),null!=a.geoJsonFeatureWatch&&a.geoJsonFeatureWatch()}),a.geoJsonFeatureWatch=a.$watch("geoJsonFeature",f)}}}]);var angular=angular||{},$=$||{},app=angular.module("gawebtoolkit.core.layer-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.layer-services","gawebtoolkit.core.map-services"]);app.directive("geoMapLayer",["$timeout","$compile","GeoLayerService","$log",function(a,b,c,d){"use strict";return{restrict:"E",require:"^geoMap",scope:{layerAttribution:"@",layerName:"@",layerUrl:"@",layers:"@",layerType:"@",wrapDateLine:"@",visibility:"@",isBaseLayer:"@",opacity:"@",controllerEmitEventName:"@",refreshLayer:"@",maxZoomLevel:"@",minZoomLevel:"@",onError:"&",format:"@"},transclude:!1,controller:["$scope",function(a){var b=this;return b.hide=function(){return a.mapAPI.mapController.setLayerVisibility(a.layerDto.id,!1),b},b.show=function(){return a.mapAPI.mapController.setLayerVisibility(a.layerDto.id,!0),b},b.setOpacity=function(c){return a.mapAPI.mapController.setOpacity(a.layerDto.id,c),b},a.controllerEmitEventName&&a.$emit(a.controllerEmitEventName,b),b}],link:function(a,b,e,f){function g(){null==e.layers&&(e.layers="0"),null==e.wrapDateLine&&(e.wrapDateLine=!0),null==e.visibility&&(e.visibility=!0),(null==e.layerType||0===e.layerType.length)&&e.layerUrl.indexOf("WMSServer")>0&&(e.layerType="WMS")}function h(){d.info("reconstructing layer...");for(var b=f.getLayers(),h=null,l=0;l<b.length;l++)if(b[l].id===a.layerDto.id){h=l;break}null!=h&&(f.removeLayerById(a.layerDto.id),a.layerDto=null,g(),i=c.defaultLayerOptions(e,a.framework),i.initialExtent=f.getInitialExtent(),i.format=a.format,j=c.createLayer(i,a.framework),f.addLayer(j).then(function(b){if(a.layerDto=b,k(),null!=a.layerDto){var c=h-f.getLayers().length+1;f.raiseLayerDrawOrder(a.layerDto.id,c)}}))}a.framework=f.getFrameworkVersion(),e.$observe("refreshLayer",function(b,c){b!==c&&(d.info("refresh for - "+a.layerName),a.initialiseLayer())}),a.mapAPI={},a.mapAPI.mapController=f;var i,j,k=function(){a.layerReady=!0},l=function(){g(),a.constructionInProgress=!0,i=c.defaultLayerOptions(e,a.framework),i.initialExtent=f.getInitialExtent(),i.mapElementId=f.getMapElementId(),i.format=a.format,d.info(i.layerName+" - constructing..."),0!==i.layerType.length&&(j=c.createLayer(i,a.framework),f.addLayer(j).then(function(b){a.layerDto=b,k(),d.info("construction complete..."),a.constructionInProgress=!1},function(b){a.$emit(i.layerName+"_error",i),a.onError({message:b,layer:i}),k(),d.info("construction failed..."),a.constructionInProgress=!1}))};e.$observe("visibility",function(){a.layerReady&&f&&null!=a.layerDto&&a.layerDto.id&&f.setLayerVisibility(a.layerDto.id,"true"===a.visibility)}),e.$observe("opacity",function(){a.layerReady&&f&&null!=a.layerDto&&a.layerDto.id&&f.setOpacity(a.layerDto.id,a.opacity)}),a.initCount=0,a.initialiseLayer=function(){d.info("initialising layer..."),null!=a.layerDto?h():a.layerReady&&a.constructionInProgress?d.info("..."):l()},a.$on("$destroy",function(){a.layerDto&&f.removeLayerById(a.layerDto.id),$(window).off("resize.Viewport")}),null==e.refreshLayer&&null!=a.layerType&&a.layerType.length>0&&a.initialiseLayer()}}}]),function(){var a=angular.module("gawebtoolkit.core.layer-services",["gawebtoolkit.mapservices","gawebtoolkit.core.map-config"]);a.service("GeoLayerService",["ga.config","mapLayerServiceLocator",function(a,b){"use strict";var c="olv2";return{createLayer:function(a,d){var e=d||c,f=b.getImplementation(e);return f.createLayer(a)},createFeatureLayer:function(a,d){var e=d||c,f=b.getImplementation(e);return f.createFeatureLayer(a)},createGoogleLayer:function(a,d){var e=d||c,f=b.getImplementation(e);return f.createGoogleLayer(a)},createBingLayer:function(a,d){var e=d||c,f=b.getImplementation(e);return f.createBingLayer(a)},createOsmLayer:function(a,d){var e=d||c,f=b.getImplementation(e);return f.createOsmLayer(a)},createMarkerLayer:function(a,d){var e=d||c,f=b.getImplementation(e);return f.createMarkerLayer(a)},removeLayerByName:function(a,d,e){var f=e||c,g=b.getImplementation(f);g.removeLayerByName(a,d)},removeLayersByName:function(a,d,e){var f=e||c,g=b.getImplementation(f);g.removeLayersByName(a,d)},removeLayer:function(a,d,e){var f=e||c,g=b.getImplementation(f);g.removeLayer(a,d)},removeLayerById:function(a,d,e){var f=e||c,g=b.getImplementation(f);g.removeLayerById(a,d)},getMarkerCountForLayerName:function(a,d,e){var f=e||c,g=b.getImplementation(f);return g.getMarkerCountForLayerName(a,d)},registerFeatureSelected:function(a,d,e,f,g){var h=g||c,i=b.getImplementation(h);return i.registerFeatureSelected(a,d,e,f)},defaultLayerOptions:function(d,e){var f=e||c,g=b.getImplementation(f);return g.defaultLayerOptions(d,new a)},createFeature:function(a,d,e){var f=e||c,g=b.getImplementation(f);return g.createFeature(a,d)},cleanupLayer:function(a,d,e){var f=e||c,g=b.getImplementation(f);return g.cleanupLayer(a,d)},registerLayerEvent:function(a,d,e,f,g){var h=g||c,i=b.getImplementation(h);i.registerLayerEvent(a,d,e,f)},unRegisterLayerEvent:function(a,d,e,f,g){var h=g||c,i=b.getImplementation(h);i.unRegisterLayerEvent(a,d,e,f)},unRegisterMapEvent:function(a,d,e,f,g){var h=g||c,i=b.getImplementation(h);i.unRegisterMapEvent(a,d,e,f)},addFeatureToLayer:function(a,d,e,f){var g=f||c,h=b.getImplementation(g);return h.addFeatureToLayer(a,d,e)},parselatLong:function(a){if(!a)return null;var b,c;return b=a.split(","),c={lat:"",lon:""},c.lat=b[0],c.lon=b[1],c},filterFeatureLayer:function(a,d,e,f,g){var h=g||c,i=b.getImplementation(h);i.filterFeatureLayer(a,d,e,f)},getLayerFeatures:function(a,d,e){var f=e||c,g=b.getImplementation(f);return g.getLayerFeatures(a,d)},clearFeatureLayer:function(a,d,e){var f=e||c,g=b.getImplementation(f);g.clearFeatureLayer(a,d)},removeFeatureFromLayer:function(a,d,e,f){var g=f||c,h=b.getImplementation(g);return h.removeFeatureFromLayer(a,d,e)},raiseLayerDrawOrder:function(a,d,e,f){var g=f||c,h=b.getImplementation(g);return h.raiseLayerDrawOrder(a,d,e)},setFeatureStyle:function(a,d,e){var f=e||c,g=b.getImplementation(f);return g.setFeatureStyle(a,d)}}}]),a.service("mapLayerServiceLocator",["$injector",function(a){"use strict";var b={olv2:"olv2LayerService",olv3:"olv3LayerService"};return{getImplementation:function(c){return a.get(b[c])}}}])}();var angular=angular||{},OpenLayers=OpenLayers||{},app=angular.module("gawebtoolkit.core.map-config",[]);app.value("ga.config",function(){"use strict";var a={standardTileSize:256,largeTileSize:1024,veryLargeTileSize:2048,minMapWidth:900,minMapHeight:600,panIncrement:30,smallPanIncrement:5,transitionEffect:"resize",visibility:!0,isBaseLayer:!1,wrapDateLine:!0,sphericalMercator:!0,bingLayerType:"Road",opacity:1,layerAttribution:"",displayInLayerSwitcher:!0,projection:"EPSG:3857",displayProjection:"EPSG:4326",numZoomLevels:15,transparent:!0,format:"image/png",tileSize:function(b){var c;return b?"large"===b?c=new OpenLayers.Size(a.largeTileSize,a.largeTileSize):"vlarge"===b&&(c=new OpenLayers.Size(a.veryLargeTileSize,a.veryLargeTileSize)):c=new OpenLayers.Size(a.standardTileSize,a.standardTileSize),c},layerType:"WMS"};return{defaultOptions:a,olv2Options:a,cesiumOptions:{includeCustomTerrainProvider:!1,customTerrainProviderUrl:null},olv3Options:{renderer:"canvas"}}});var angular=angular||{},$=$||{},ol=ol||{},OpenLayers=OpenLayers||{},app=angular.module("gawebtoolkit.core.map-directives",["gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);app.directive("geoMap",["$timeout","$compile","GeoMapService","GeoLayerService","GeoDataService","$q","$log",function(a,b,c,d,e,f,g){"use strict";return{restrict:"E",scope:{mapElementId:"@",datumProjection:"@",displayProjection:"@",centerPosition:"@",zoomLevel:"@",isStaticMap:"@",initialExtent:"=",framework:"@",existingMapInstance:"="},controller:["$scope",function(b){g.info("map creation started..."),$("#"+b.mapElementId).empty(),b.initialPositionSet=!1,b.layerPromises=[],b.layerDtoPromises=[];var h=this;h.addLayer=function(a){var d=f.defer(),e=f.defer();if(null!==a.then&&"function"==typeof a.then)d=a,b.layersReady?a.then(function(a){if(null==a)g.info("failed to load layer");else{var d=c.addLayer(b.mapInstance,a,b.framework);e.resolve(d),b.$emit("layerAdded",d)}}):(b.layerPromises.push(d),b.layerDtoPromises.push(e));else if(b.layersReady){var h=c.addLayer(b.mapInstance,a,b.framework);e.resolve(h),b.$emit("layerAdded",h)}else b.layerPromises.push(d.promise),b.layerDtoPromises.push(e),d.resolve(a);return e.promise};var i=[];b.deferredMarkers=[],h.addMarkerLayer=function(a,c){if(c){i.push(c);for(var d,e=!1,g=0;g<i.length;g++)if(d=i[g],d===c){e=!0;break}if(e){if(b.layersReady){var j=f.defer();return j.resolve(),j.promise}var k=f.defer();return b.deferredMarkers.push(k),k.promise}return h.addLayer(a)}return h.addLayer(a)},h.getMapOptions=function(){return{mapElementId:b.mapElementId,datumProjection:b.datumProjection,displayProjection:b.displayProjection,centerPosition:b.centerPosition,zoomLevel:b.zoomLevel,initialExtent:b.initialExtent}},h.createLayer=function(a){var c=d.defaultLayerOptions(a,b.framework);return d.createLayer(c,b.framework)},h.zoomToMaxExtent=function(){c.zoomToMaxExtent(b.mapInstance,b.framework)},h.currentZoomLevel=function(){return c.currentZoomLevel(b.mapInstance,b.framework)},h.registerMapMouseMove=function(a){c.registerMapMouseMove(b.mapInstance,a,b.framework)},h.registerMapMouseMoveEnd=function(a){c.registerMapMouseMoveEnd(b.mapInstance,a,b.framework)},h.registerMapClick=function(a){c.registerMapClick(b.mapInstance,a,b.framework)},h.unRegisterMapClick=function(a){c.unRegisterMapClick(b.mapInstance,a,b.framework)},h.addControl=function(a,d,e,f){return c.addControl(b.mapInstance,a,d,e,f,h.getMapOptions(),b.framework)},h.getLonLatFromPixel=function(a,d,e){return c.getLonLatFromPixel(b.mapInstance,a,d,e,b.framework)},h.getPixelFromLonLat=function(a,d){return c.getPixelFromLonLat(b.mapInstance,a,d,b.framework)},h.getPointFromEvent=function(a){return c.getPointFromEvent(a,b.framework)},h.getLayers=function(){return c.getLayers(b.mapInstance,b.framework)},h.getLayersByName=function(a){return c.getLayersByName(b.mapInstance,a,b.framework)},h.zoomToLayer=function(a){c.zoomToLayer(b.mapInstance,a,b.framework)},h.getProjection=function(){return c.getProjection(b.mapInstance,h.getFrameworkVersion())},h.getDisplayProjection=function(){return c.getDisplayProjection(b.mapInstance,h.getFrameworkVersion())},h.getSize=function(){return c.getSize(b.mapInstance,h.getFrameworkVersion())},h.setLayerVisibility=function(a,d){c.setLayerVisibility(b.mapInstance,a,d,b.framework)},h.createBoundingBox=function(a){return c.createBoundingBox(b.mapInstance,a,b.framework)},h.createBounds=function(a,d){return c.createBounds(b.mapInstance,a,d,b.framework)},h.zoomToExtent=function(a){c.zoomToExtent(b.mapInstance,a,b.framework)},h.zoomTo=function(a){c.zoomTo(b.mapInstance,a,b.framework)},h.setBaseLayer=function(a){c.setBaseLayer(b.mapInstance,a,b.framework)},h.setCenter=function(a,d,e){c.setCenter(b.mapInstance,a,d,e,b.framework)},h.getInitialExtent=function(){return b.initialExtent},h.resetInitialExtent=function(){var a={mapElementId:b.mapElementId,datumProjection:b.datumProjection,displayProjection:b.displayProjection,centerPosition:b.centerPosition,zoomLevel:b.zoomLevel,initialExtent:b.initialExtent};c.setInitialPositionAndZoom(b.mapInstance,a,b.framework)},h.setInitialPositionAndZoom=function(){var a={mapElementId:b.mapElementId,datumProjection:b.datumProjection,displayProjection:b.displayProjection,centerPosition:b.centerPosition,zoomLevel:b.zoomLevel,initialExtent:b.initialExtent};b.centerPosition||(b.centerPosition={lon:0,lat:0}),b.initialPositionSet||c.setInitialPositionAndZoom(b.mapInstance,a,b.framework),b.initialPositionSet=!0},h.isBaseLayer=function(a){return c.isBaseLayer(b.mapInstance,a,b.framework)},h.getMapInstance=function(){return b.mapInstance},h.setOpacity=function(a,d){c.setOpacity(b.mapInstance,a,d,b.framework)},h.getMapElementId=function(){return c.getMapElementId(b.mapInstance,b.framework)},h.setMapMarker=function(a,d,e,f){return c.setMapMarker(b.mapInstance,a,d,e,f,b.framework)},h.removeMapMarker=function(a){c.removeMapMarker(b.mapInstance,a,b.framework)},h.removeLayerByName=function(a){d.removeLayerByName(b.mapInstance,a,b.framework)},h.removeLayersByName=function(a){d.removeLayersByName(b.mapInstance,a,b.framework)},h.removeLayer=function(a){d.removeLayer(b.mapInstance,a,b.framework)},h.removeLayerById=function(a){d.removeLayerById(b.mapInstance,a,b.framework)},h.getMarkerCountForLayerName=function(a){return d.getMarkerCountForLayerName(b.mapInstance,a,b.framework)},h.drawPolyLine=function(a,d){c.drawPolyLine(b.mapInstance,a,d,b.framework)},h.startRemoveSelectedFeature=function(a){return c.startRemoveSelectedFeature(b.mapInstance,a,b.framework)},h.stopRemoveSelectedFeature=function(){return c.stopRemoveSelectedFeature(b.mapInstance,b.framework)},h.removeFeature=function(a,d){return c.removeFeature(b.mapInstance,a,d,b.framework)},h.startDrawingOnLayer=function(a,d){return c.startDrawingOnLayer(b.mapInstance,a,d,b.framework)},h.stopDrawing=function(){return c.stopDrawing(b.mapInstance,b.framework)},h.drawLabel=function(a,d){return c.drawLabel(b.mapInstance,a,d,b.framework)},h.drawLabelWithPoint=function(a,d){return c.drawLabelWithPoint(b.mapInstance,a,d,b.framework)},h.isControlActive=function(a,d){return c.isControlActive(b.mapInstance,a,d,b.framework)},h.getLayersByWMSCapabilities=function(a){return e.getLayersByWMSCapabilities(a,b.framework)},h.getWMSFeatures=function(a,c,d,f,g){return e.getWMSFeatures(b.mapInstance,a,c,d,f,g,b.framework)},h.getWMSFeaturesByLayerId=function(a,c,d){return e.getWMSFeaturesByLayerId(b.mapInstance,a,c,d,b.framework)},h.registerFeatureSelected=function(a,c,e){return d.registerFeatureSelected(b.mapInstance,a,c,e,b.framework)},h.getFeatureInfo=function(a,d,e,f,g,h){return c.getFeatureInfo(b.mapInstance,a,d,e,f,g,h,b.framework)},h.getFeatureInfoFromLayer=function(a,d,e){return c.getFeatureInfoFromLayer(b.mapInstance,a,d,e,b.framework)},h.resetMapFired=function(){b.$emit("resetMapFired")},h.activateControl=function(a){c.activateControl(b.mapInstance,a,b.framework)},h.deactivateControl=function(a){c.deactivateControl(b.mapInstance,a,b.framework)},h.registerControlEvent=function(a,d,e){c.registerControlEvent(b.mapInstance,a,d,e,b.framework)},h.unRegisterControlEvent=function(a,d,e){c.unRegisterControlEvent(b.mapInstance,a,d,e,b.framework)},h.registerMapEvent=function(a,d){c.registerMapEvent(b.mapInstance,a,d,b.framework)},h.registerLayerEvent=function(a,c,e){d.registerLayerEvent(b.mapInstance,a,c,e,b.framework)},h.unRegisterLayerEvent=function(a,c,e){d.unRegisterLayerEvent(b.mapInstance,a,c,e,b.framework)},h.unRegisterMapEvent=function(a,d){c.unRegisterMapEvent(b.mapInstance,a,d,b.framework)},h.getCurrentMapExtent=function(){return c.getCurrentMapExtent(b.mapInstance,b.framework)},h.getMapScale=function(){return c.getMapScale(b.mapInstance,b.framework)},h.getMapCenter=function(){return c.getMapCenter(b.mapInstance,b.framework)},h.switch3d=function(){c.is3dSupported(b.mapInstance,b.framework)&&(c.is3d(b.mapInstance,b.framework)?c.switchTo2dView(b.mapInstance,b.framework):c.switchTo3dView(b.mapInstance,b.framework))},h.is3d=function(){return c.is3dSupported(b.mapInstance,b.framework)?c.is3d(b.mapInstance,b.framework):!1},h.filterFeatureLayer=function(a,c,e){d.filterFeatureLayer(b.mapInstance,a,c,e,b.framework)},h.getLayerFeatures=function(a){return d.getLayerFeatures(b.mapInstance,a,b.framework)},h.createFeature=function(a){return d.createFeature(b.mapInstance,a,b.framework)},h.addFeatureToLayer=function(a,c){return d.addFeatureToLayer(b.mapInstance,a,c,b.framework)},h.createWfsClient=function(a,d,e,f,g,h,i){return c.createWfsClient(a,d,e,f,g,h,i,b.framework)},h.addWfsClient=function(a){return c.addWfsClient(a,b.framework)},h.searchWfs=function(a,d,e){return c.searchWfs(b.mapInstance,a,d,e,b.framework)},h.getMeasureFromEvent=function(a){return c.getMeasureFromEvent(b.mapInstance,a,b.framework)},h.removeFeatureFromLayer=function(a,c){d.removeFeatureFromLayer(b.mapInstance,a,c,b.framework)},h.raiseLayerDrawOrder=function(a,c){d.raiseLayerDrawOrder(b.mapInstance,a,c,b.framework)},h.getFrameworkVersion=function(){return null!=window.OpenLayers&&b.mapInstance instanceof window.OpenLayers.Map?"olv2":null!=window.ol&&b.mapInstance instanceof window.ol.Map?"olv3":void 0},b.gaMap=h,$(window).bind("resize",function(){c.mapResized(b.mapInstance,b.framework)}),b.mapInstance=b.existingMapInstance?b.existingMapInstance:c.initialiseMap({mapElementId:b.mapElementId,datumProjection:b.datumProjection,displayProjection:b.displayProjection,initialExtent:b.initialExtent,centerPosition:b.centerPosition,zoomLevel:b.zoomLevel,isStaticMap:b.isStaticMap},b.framework),b.$emit("mapInstanceReady",b.mapInstance),b.$emit("mapControllerReady",h),b.$broadcast("mapControllerReady",h),b.$on("$destroy",function(){g.info("map destruction started..."),$(window).off("resize.Viewport"),a(function(){g.info("map destruction finishing..."),g.info("removing "+b.gaMap.getLayers().length+" layers...");for(var a=b.gaMap.getLayers(),c=0;c<a.length;c++){var d=a[c];b.gaMap.removeLayerById(d.id)}})})}],link:function(b){function d(a){g.info("resolving all layers");for(var d=[],e=0;e<a.length;e++){var f=a[e];if("string"==typeof f)b.layerDtoPromises[e].reject(f);else{var h=c.addLayer(b.mapInstance,f,b.framework);b.layerDtoPromises[e].resolve(h),d.push(h)}}for(var i=0;i<b.deferredMarkers.length;i++)b.deferredMarkers[i].resolve();b.$emit("layersReady",d),b.$broadcast("layersReady",d),b.layersReady=!0,b.existingMapInstance||b.gaMap.setInitialPositionAndZoom()}a(function(){f.allSettled(b.layerPromises).then(function(a){d(a)},function(a){d(a)})})},transclude:!1}}]),app.config(["$provide",function(a){a.decorator("$q",["$delegate",function(a){var b=a;return b.allSettled=b.allSettled||function(a){var c=b.defer();if(!angular.isArray(a))throw"allSettled can only handle an array of promises (for now)";var d=[],e=[],f=!1;angular.forEach(a,function(a,b){d[b]=!1});var g=function(a,b,c,d){var e=!0;angular.forEach(a,function(a){a||(e=!1)}),e&&(d?c.reject(b):c.resolve(b))};return angular.forEach(a,function(a,h){b.when(a).then(function(a){d[h]=!0,e[h]=a,g(d,e,c,f)},function(a){d[h]=!0,e[h]=a,f=!0,g(d,e,c,f)})}),c.promise},b}])}]),function(){var a=angular.module("gawebtoolkit.core.map-services",["gawebtoolkit.mapservices","gawebtoolkit.core.map-config"]);a.service("GeoMapService",["$log","ga.config","mapServiceLocator",function(a,b,c){"use strict";var d="olv2";return{initialiseMap:function(e,f){var g=f||d,h=c.getImplementation(g);try{return h.initialiseMap(e,new b)}catch(i){throw a.error("Failed to initialise map"),i}},zoomToMaxExtent:function(a,b){var e=b||d,f=c.getImplementation(e);f.zoomToMaxExtent(a)},zoomTo:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.zoomTo(a,b)},getMapElementId:function(a,b){var e=b||d,f=c.getImplementation(e);return f.getMapElementId(a)},getProjection:function(a,b){var e=b||d,f=c.getImplementation(e);return f.getProjection(a)},getDisplayProjection:function(a,b){var e=b||d,f=c.getImplementation(e);return f.getDisplayProjection(a)},getSize:function(a,b){var e=b||d,f=c.getImplementation(e);return f.getSize(a)},currentZoomLevel:function(a,b){var e=b||d,f=c.getImplementation(e);return f.currentZoomLevel(a)},addLayer:function(a,b,e){var f=e||d,g=c.getImplementation(f);return g.addLayer(a,b)},registerMapMouseMove:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.registerMapMouseMove(a,b)},registerMapMouseMoveEnd:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.registerMapMouseMoveEnd(a,b)},registerMapClick:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.registerMapClick(a,b)},unRegisterMapClick:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.unRegisterMapClick(a,b)},registerMapEvent:function(a,b,d,e){var f=e||"olv2",g=c.getImplementation(f);g.registerMapEvent(a,b,d,e)},unRegisterMapEvent:function(a,b,d,e){var f=e||"olv2",g=c.getImplementation(f);g.unRegisterMapEvent(a,b,d,e)},getCurrentMapExtent:function(a,b){var d=b||"olv2",e=c.getImplementation(d);return e.getCurrentMapExtent(a)},getMapScale:function(a,b){var d=b||"olv2",e=c.getImplementation(d);return e.getMapScale(a)},getMapCenter:function(a,b){var d=b||"olv2",e=c.getImplementation(d);return e.getMapCenter(a)},addControl:function(a,b,e,f,g,h,i){var j=i||d,k=c.getImplementation(j);return k.addControl(a,b,e,f,g,h)},isControlActive:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.isControlActive(a,b,e)},activateControl:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.activateControl(a,b)},deactivateControl:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.deactivateControl(a,b)},registerControlEvent:function(a,b,e,f,g){var h=g||d,i=c.getImplementation(h);i.registerControlEvent(a,b,e,f)},unRegisterControlEvent:function(a,b,e,f,g){var h=g||d,i=c.getImplementation(h);i.unRegisterControlEvent(a,b,e,f)},getLayers:function(a,b){var e=b||d,f=c.getImplementation(e);return f.getLayers(a)},getLayersByName:function(a,b,e){var f=e||d,g=c.getImplementation(f);return g.getLayersByName(a,b)},zoomToLayer:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.zoomToLayer(a,b)},setLayerVisibility:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);h.setLayerVisibility(a,b,e)},createBoundingBox:function(a,b,e){var f=e||d,g=c.getImplementation(f);return g.createBoundingBox(a,b)},createBounds:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.createBounds(a,b,e)},zoomToExtent:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.zoomToExtent(a,b)},setCenter:function(a,b,e,f,g){var h=g||d,i=c.getImplementation(h);i.setCenter(a,b,e,f)},setInitialPositionAndZoom:function(a,e,f){var g=f||d,h=c.getImplementation(g);h.setInitialPositionAndZoom(a,e,new b)},setBaseLayer:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.setBaseLayer(a,b)},isBaseLayer:function(a,b,e){var f=e||d,g=c.getImplementation(f);return g.isBaseLayer(a,b)},setOpacity:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);h.setOpacity(a,b,e)},mapResized:function(a,b){var e=b||d,f=c.getImplementation(e);f.mapResized(a)},setMapMarker:function(a,b,e,f,g,h){var i=h||d,j=c.getImplementation(i);return j.setMapMarker(a,b,e,f,g)},removeMapMarker:function(a,b,e){var f=e||d,g=c.getImplementation(f);g.removeMapMarker(a,b)},getLonLatFromPixel:function(a,b,e,f,g){var h=g||d,i=c.getImplementation(h);return i.getLonLatFromPixel(a,b,e,f)},getPixelFromLonLat:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.getPixelFromLonLat(a,b,e)},getPointFromEvent:function(a,b){var e=b||d,f=c.getImplementation(e);return f.getPointFromEvent(a)},drawPolyLine:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.drawPolyLine(a,b,e)},startRemoveSelectedFeature:function(a,b,e){var f=e||d,g=c.getImplementation(f);return g.startRemoveSelectedFeature(a,b)},stopRemoveSelectedFeature:function(a,b){var e=b||d,f=c.getImplementation(e);return f.stopRemoveSelectedFeature(a)},removeFeature:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.removeFeature(a,b,e)},drawFeature:function(a,b,e){var f=e||d,g=c.getImplementation(f);return g.drawFeature(a,b)},startDrawingOnLayer:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.startDrawingOnLayer(a,b,e)},stopDrawing:function(a,b){var e=b||d,f=c.getImplementation(e);
return f.stopDrawing(a)},drawLabel:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.drawLabel(a,b,e)},drawLabelWithPoint:function(a,b,e,f){var g=f||d,h=c.getImplementation(g);return h.drawLabelWithPoint(a,b,e)},createWfsClient:function(a,b,e,f,g,h,i,j){var k=j||d,l=c.getImplementation(k);return l.createWfsClient(a,b,e,f,g,h,i)},getFeatureInfo:function(a,b,e,f,g,h,i,j){var k=j||d,l=c.getImplementation(k);return l.getFeatureInfo(a,b,e,f,g,h,i)},getFeatureInfoFromLayer:function(a,b,e,f,g){var h=g||d,i=c.getImplementation(h);return i.getFeatureInfoFromLayer(a,b,e,f)},getMeasureFromEvent:function(a,b,e){var f=e||d,g=c.getImplementation(f);return g.getMeasureFromEvent(a,b)},addWfsClient:function(a,b){var e=b||d,f=c.getImplementation(e);return f.addWfsClient(a)},is3dSupported:function(a,b){var e=b||d,f=c.getImplementation(e);return f.is3dSupported(a)},is3d:function(a,b){var e=b||d,f=c.getImplementation(e);return f.is3d(a)},switchTo3dView:function(a,b){var e=b||d,f=c.getImplementation(e);return f.switchTo3dView(a)},switchTo2dView:function(a,b){var e=b||d,f=c.getImplementation(e);return f.switchTo2dView(a)},searchWfs:function(a,b,e,f,g){var h=g||d,i=c.getImplementation(h);return i.searchWfs(a,b,e,f)}}}]),a.service("mapServiceLocator",["$injector",function(a){"use strict";var b={olv2:"olv2MapService",olv3:"olv3MapService"};return{getImplementation:function(c){return a.get(b[c])}}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.core.marker-directives",["gawebtoolkit.core.map-directives","gawebtoolkit.core.map-services","gawebtoolkit.core.layer-services"]);a.directive("geoMapMarker",["$log","$timeout","GeoLayerService",function(a,b,c){return{restrict:"E",require:"^geoMap",scope:{markerIcon:"@",markerLong:"@",markerLat:"@",markerId:"@",markerWidth:"@",markerHeight:"@",mapMarkerClicked:"&",layerName:"@"},link:function(a,b,d,e){function f(){var b,d,f,g,h;h=a.markerIcon,"string"==typeof a.markerLong&&(d=parseFloat(a.markerLong)),"string"==typeof a.markerLat&&(b=parseFloat(a.markerLat)),"string"==typeof a.markerWidth&&(f=parseInt(a.markerWidth)),"string"==typeof a.markerHeight&&(g=parseInt(a.markerHeight));var i=c.createLayer({layerType:"markerlayer",layerName:a.layerName},a.framework);e.addMarkerLayer(i,a.layerName).then(function(){var c=e.getPixelFromLonLat(d,b);a.markerDto=e.setMapMarker(c,a.layerName,h,{width:f,height:g})})}a.framework=e.getFrameworkVersion(),d.$observe("markerIcon",function(){}),d.$observe("markerLong",function(){}),d.$observe("markerLat",function(){}),d.$observe("markerId",function(){}),d.$observe("markerWidth",function(){}),d.$observe("markerHeight",function(){}),f(),a.$on("$destroy",function(){e.removeMapMarker(a.markerDto.id)})}}}])}();var angular=angular||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.utils",[]);app.service("GeoUtils",[function(){"use strict";function a(a){return a=parseInt("#"===a.charAt(0)?a.substring(1,7):a,16),[Math.floor(a/65536),Math.floor(a%65536/256),a%256]}return{generateUuid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"==a?b:3&b|8;return c.toString(16)})},convertHexToRgb:a,convertHexAndOpacityToRgbArray:function(b,c){var d=a(b);return d.push(c),d}}}]),function(){"use strict";var a=angular.module("gawebtoolkit.vendor.bing-layers",["gawebtoolkit.core.layer-services"]);a.directive("geoBingLayer",["$timeout","$compile","GeoLayerService","$log",function(a,b,c,d){var e=["road","aerial","aerialwithlabels","birdseye","birdseyewithlabels"],f=function(a){for(var b=0;b<e.length;b++){var c=e[b];if(c===a.toLowerCase())return!0}return!1};return{restrict:"E",require:"^geoMap",scope:{layerType:"@",visibility:"@",wrapDateLine:"@",bingApiKey:"@",controllerEmitEventName:"@"},transclude:!1,controller:["$scope",function(a){var b=this;return a.controllerEmitEventName&&a.$emit(a.controllerEmitEventName,b),b}],link:function(a,b,e,g){function h(){d.info("reconstructing layer...");for(var b=g.getLayers(),f=null,h=0;h<b.length;h++)if(b[h].id===a.layerDto.id){f=h;break}if(null!=f){if(g.removeLayerById(a.layerDto.id),a.layerDto=null,j=c.defaultLayerOptions(e,a.framework),j.initialExtent=g.getInitialExtent(),j.format=a.format,null==j.bingApiKey)throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'");i=c.createBingLayer(j,a.framework),g.addLayer(i).then(function(b){if(a.layerDto=b,k(),null!=a.layerDto){var c=f-g.getLayers().length+1;g.raiseLayerDrawOrder(a.layerDto.id,c)}})}}a.framework=g.getFrameworkVersion(),a.mapAPI={},a.mapAPI.mapController=g;var i,j={};j=c.defaultLayerOptions(e,a.framework),j.layerType=j.layerType||j.bingLayerType,f(j.layerType)||(d.warn("Invalid Bing layer type - "+j.layerType+' used. Defaulting to "Road". Specify default Bing layer type in "ga.config" - bingLayerType'),j.layerType="Road");var k=function(){a.layerReady=!0},l=function(){if(a.constructionInProgress=!0,j.mapElementId=g.getMapElementId(),d.info("Bing "+j.layerType+" - constructing..."),null==j.bingApiKey)throw new Error("Missing Bing Maps API key. Please provide your valid Bing Maps API key using the ga-bing-layer attribute 'bing-api-key'");i=c.createBingLayer(j,a.framework),g.addLayer(i).then(function(b){a.layerDto=b,k(),d.info("construction complete..."),a.constructionInProgress=!1},function(b){a.$emit(j.layerName+"_error",j),a.onError({message:b,layer:j}),k(),d.info("construction failed..."),a.constructionInProgress=!1})};e.$observe("visibility",function(){a.layerReady&&g&&null!=a.layerDto&&a.layerDto.id&&g.setLayerVisibility(a.layerDto.id,"true"===a.visibility)}),e.$observe("layerType",function(){a.layerReady&&g&&null!=a.layerDto&&a.layerDto.id&&a.initialiseLayer()}),a.initCount=0,a.initialiseLayer=function(){d.info("initialising layer..."),null!=a.layerDto?h():a.layerReady&&a.constructionInProgress?d.info("..."):l()},a.$on("$destroy",function(){a.layerDto&&g.removeLayerById(a.layerDto.id),$(window).off("resize.Viewport")}),a.initialiseLayer()}}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.vendor.google-layers",["gawebtoolkit.core.layer-services"]);a.directive("geoGoogleLayer",["$timeout","$compile","GeoLayerService","$log",function(a,b,c,d){var e=["street","hybrid","satellite","terrain"],f=function(a){for(var b=0;b<e.length;b++){var c=e[b];if(c===a.toLowerCase())return!0}return!1};return{restrict:"E",require:"^geoMap",scope:{layerType:"@",visibility:"@",controllerEmitEventName:"@"},transclude:!1,controller:["$scope",function(a){var b=this;return a.controllerEmitEventName&&a.$emit(a.controllerEmitEventName,b),b}],link:function(a,b,e,g){function h(){d.info("reconstructing layer...");for(var b=g.getLayers(),f=null,h=0;h<b.length;h++)if(b[h].id===a.layerDto.id){f=h;break}null!=f&&(g.removeLayerById(a.layerDto.id),a.layerDto=null,j=c.defaultLayerOptions(e,a.framework),j.initialExtent=g.getInitialExtent(),j.format=a.format,i=c.createGoogleLayer(j,a.framework),g.addLayer(i).then(function(b){if(a.layerDto=b,k(),null!=a.layerDto){var c=f-g.getLayers().length+1;g.raiseLayerDrawOrder(a.layerDto.id,c)}}))}a.framework=g.getFrameworkVersion(),a.mapAPI={},a.mapAPI.mapController=g;var i,j={};j=c.defaultLayerOptions(e,a.framework),j.layerType=j.layerType||j.googleLayerType,f(j.layerType)||(d.warn("Invalid Google layer type - "+j.layerType+' used. Defaulting to "Hybrid". Specify default Google layer type in "ga.config" - googleLayerType'),j.layerType="Hybrid");var k=function(){a.layerReady=!0},l=function(){a.constructionInProgress=!0,j.mapElementId=g.getMapElementId(),d.info("Google "+a.layerType+" - constructing..."),i=c.createGoogleLayer(j,a.framework),g.addLayer(i).then(function(b){a.layerDto=b,k(),d.info("construction complete..."),a.constructionInProgress=!1},function(b){a.$emit(j.layerName+"_error",j),a.onError({message:b,layer:j}),k(),d.info("construction failed..."),a.constructionInProgress=!1})};e.$observe("visibility",function(){a.layerReady&&g&&null!=a.layerDto&&a.layerDto.id&&g.setLayerVisibility(a.layerDto.id,"true"===a.visibility||a.visibility===!0)}),e.$observe("layerType",function(){a.layerReady&&g&&null!=a.layerDto&&a.layerDto.id&&a.initialiseLayer()}),a.initCount=0,a.initialiseLayer=function(){d.info("initialising layer..."),null!=a.layerDto?h():a.layerReady&&a.constructionInProgress?d.info("..."):l()},a.$on("$destroy",function(){a.layerDto&&g.removeLayerById(a.layerDto.id),$(window).off("resize.Viewport")}),a.initialiseLayer()}}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.vendor.osm-layers",["gawebtoolkit.core.layer-services"]);a.directive("geoOsmLayer",["$timeout","$compile","GeoLayerService","$log",function(a,b,c,d){return{restrict:"E",require:"^geoMap",scope:{wrapDateLine:"@",visibility:"@",controllerEmitEventName:"@"},transclude:!1,controller:["$scope",function(a){var b=this;return a.controllerEmitEventName&&a.$emit(a.controllerEmitEventName,b),b}],link:function(a,b,e,f){function g(){d.info("reconstructing layer...");for(var b=f.getLayers(),g=null,k=0;k<b.length;k++)if(b[k].id===a.layerDto.id){g=k;break}null!=g&&(f.removeLayerById(a.layerDto.id),a.layerDto=null,i=c.defaultLayerOptions(e,a.framework),i.initialExtent=f.getInitialExtent(),i.format=a.format,h=c.createLayer(i,a.framework),f.addLayer(h).then(function(b){if(a.layerDto=b,j(),null!=a.layerDto){var c=g-f.getLayers().length+1;f.raiseLayerDrawOrder(a.layerDto.id,c)}}))}a.framework=f.getFrameworkVersion(),a.mapAPI={},a.mapAPI.mapController=f;var h,i={};i=c.defaultLayerOptions(e,a.framework);var j=function(){a.layerReady=!0},k=function(){a.constructionInProgress=!0,i.mapElementId=f.getMapElementId(),d.info("OpenStreetMaps Cycle - constructing..."),h=c.createOsmLayer(i,a.framework),f.addLayer(h).then(function(b){a.layerDto=b,j(),d.info("construction complete..."),a.constructionInProgress=!1},function(b){a.$emit(i.layerName+"_error",i),a.onError({message:b,layer:i}),j(),d.info("construction failed..."),a.constructionInProgress=!1})};e.$observe("visibility",function(){a.layerReady&&f&&null!=a.layerDto&&a.layerDto.id&&f.setLayerVisibility(a.layerDto.id,"true"===a.visibility)}),a.initCount=0,a.initialiseLayer=function(){d.info("initialising layer..."),null!=a.layerDto?g():a.layerReady&&a.constructionInProgress?d.info("..."):k()},a.$on("$destroy",function(){a.layerDto&&f.removeLayerById(a.layerDto.id),$(window).off("resize.Viewport")}),a.initialiseLayer()}}}])}(),function(){"use strict";angular.module("gawebtoolkit.vendor-layers",["gawebtoolkit.vendor.google-layers","gawebtoolkit.vendor.bing-layers","gawebtoolkit.vendor.osm-layers"])}(),function(){"use strict";var a=angular.module("gawebtoolkit.mapservices.data.openlayersv2",[]),b=["$q","$http","ga.config",function(a,b,c){function d(a,b,c,d){var e,f=a.projection,g=a.getExtent(),h=g.toBBOX(),i=null!=b&&b instanceof MouseEvent?b.xy:b,j=a.getSize().h/2,k=a.getSize().w/2,l=new OpenLayers.Geometry.Point(k,j),m=a.getSize().w,n=a.getSize().h,o={x:i.x,y:i.y};if(a.getSize().w>=2050){if(i.x>l.x)if(i.y>l.y){var p=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(l.x,l.y)),q=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(a.getSize().w,a.getSize().h));e=new OpenLayers.Bounds(p.lon,q.lat,q.lon,p.lat),o.x=i.x-k,o.y=i.y-j}else{var p=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(l.x,0)),q=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(a.getSize().w,a.getSize().h));e=new OpenLayers.Bounds(p.lon,q.lat,q.lon,p.lat),o.x=i.x-k}else if(i.y>l.y){var p=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,l.y)),q=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(l.x,a.getSize().h));e=new OpenLayers.Bounds(p.lon,q.lat,q.lon,p.lat),o.y=i.y-j}else{var p=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(0,0)),q=a.getLonLatFromPixel(new OpenLayers.Geometry.Point(l.x,l.y));e=new OpenLayers.Bounds(p.lon,q.lat,q.lon,p.lat)}h=e.toBBOX(),n=Math.floor(j),m=Math.floor(k)}return OpenLayers.Util.extend({service:"WMS",version:c,request:"GetFeatureInfo",bbox:h,feature_count:100,height:n,width:m,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:d},parseFloat(c)>=1.3?{crs:f,i:parseInt(o.x),j:parseInt(o.y)}:{srs:f,x:parseInt(o.x),y:parseInt(o.y)})}function e(a){var b,c;switch(c=a&&"string"==typeof a&&0===a.indexOf("application/vnd.ogc.gml/3")?"application/vnd.ogc.gml/3":a){case"application/vnd.ogc.gml":b=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":b=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":b=OpenLayers.Format.Text;break;case"application/json":b=OpenLayers.Format.GeoJSON;break;default:b=OpenLayers.Format.WMSGetFeatureInfo}return b}return{getLayersByWMSCapabilities:function(c){var d=a.defer(),e=c.indexOf("?")>0?c+"&request=GetCapabilities":c+"?request=GetCapabilities";return b.get(e).success(function(a){var b=new OpenLayers.Format.WMSCapabilities,c=b.read(a).capability.layers;d.resolve(c)}).error(function(a,b){d.reject(b)}),d.promise},getWMSFeatures:function(b,f,g,h,i,j){var k=j||"text/xml",l=a.defer(),m=d(b,i,h,k);0!==g.length&&(m=OpenLayers.Util.extend({layers:g,query_layers:g},m)),OpenLayers.Util.applyDefaults(m,{});var n={url:f,params:OpenLayers.Util.upperCaseObject(m),callback:function(a){var b=new(e(k)),c=b.read(a.responseText),d=new OpenLayers.Format.GeoJSON,f=angular.fromJson(d.write(c));l.resolve(f)},scope:this};return c().defaultOptions.proxyHost&&(n.proxy=c().defaultOptions.proxyHost),OpenLayers.Request.GET(n),l.promise},getWMSFeaturesByLayerId:function(b,d,e,f){for(var g=function(a){var b;return b=a.params.STYLES?a.params.STYLES:OpenLayers.Util.isArray(a.params.LAYERS)?new Array(a.params.LAYERS.length):a.params.LAYERS.toString().replace(/[^,]/g,"")},h=a.defer(),i=[],j=[],k=[b.getLayersBy("id",e)[0]],l=0,m=k.length;m>l;l++)null!=k[l].params.LAYERS&&(i=i.concat(k[l].params.LAYERS),j=j.concat(g(k[l])));var n=k[0],o=b.getProjection(),p=n.projection;p&&p.equals(b.getProjectionObject())&&(o=p.getCode());var q=OpenLayers.Util.extend({service:"WMS",version:n.params.VERSION,request:"GetFeatureInfo",exceptions:n.params.EXCEPTIONS,bbox:b.getExtent().toBBOX(null,n.reverseAxisOrder()),feature_count:100,height:b.getSize().h,width:b.getSize().w,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:n.params.INFO_FORMAT||"text/xml"},parseFloat(n.params.VERSION)>=1.3?{crs:o,i:parseInt(f.x),j:parseInt(f.y)}:{srs:o,x:parseInt(f.x),y:parseInt(f.y)});0!==i.length&&(q=OpenLayers.Util.extend({layers:i,query_layers:i,styles:j},q)),OpenLayers.Util.applyDefaults(q,{});var r={url:d,params:OpenLayers.Util.upperCaseObject(q),callback:function(a){var b=new OpenLayers.Format.WMSGetFeatureInfo,c=b.read(a.responseText),d=new OpenLayers.Format.GeoJSON,e=angular.fromJson(d.write(c));h.resolve(e)},scope:this};return c().defaultOptions.proxyHost&&(r.proxy=c().defaultOptions.proxyHost),OpenLayers.Request.GET(r),h.promise}}}];a.service("WMSDataService",b),a.service("olv2DataService",b)}(),function(){"use strict";var a=angular.module("gawebtoolkit.mapservices.data.openlayersv3",[]),b=["$q","$http","ga.config",function(a,b,c){function d(a,b,c,d){var e=a.getView().getProjection().getCode(),f=a.getView().calculateExtent(a.getSize()),g=new OpenLayers.Bounds(f[0],f[1],f[2],f[3]),h=g.toBBOX(),i=null!=b&&null!=b.map?b.pixel:b;null!=i.position&&(i=[i.position.x,i.position.y]);var j,k=a.getSize()[1]/2,l=a.getSize()[0]/2,m=[l,k],n=a.getSize()[0],o=a.getSize()[1],p={x:i[0],y:i[1]};if(a.getSize()[0]>=2050){if(i[0]>m[0])if(i[1]>m[1]){var q=a.getCoordinateFromPixel([m[0],m[1]]),r=a.getCoordinateFromPixel([a.getSize()[0],a.getSize()[1]]);j=new OpenLayers.Bounds(q[0],r[1],r[0],q[1]),p.x=i[0]-l,p.y=i[1]-k}else{var q=a.getCoordinateFromPixel([m[0],0]),r=a.getCoordinateFromPixel([a.getSize()[0],a.getSize()[1]]);j=new OpenLayers.Bounds(q[0],r[1],r[0],q[1]),p.x=i[0]-l}else if(i[1]>m[1]){var q=a.getCoordinateFromPixel([0,m[1]]),r=a.getCoordinateFromPixel([m[0],a.getSize()[1]]);j=new OpenLayers.Bounds(q[0],r[1],r[0],q[1]),p.y=i[1]-k}else{var q=a.getCoordinateFromPixel([0,0]),r=a.getCoordinateFromPixel([m[0],m[1]]);j=new OpenLayers.Bounds(q[0],r[1],r[0],q[1])}h=j.toBBOX(),o=Math.floor(k),n=Math.floor(l)}var s=OpenLayers.Util.extend({service:"WMS",version:c,request:"GetFeatureInfo",bbox:h,feature_count:100,height:o,width:n,format:OpenLayers.Format.WMSGetFeatureInfo,info_format:d},parseFloat(c)>=1.3?{crs:e,i:parseInt(p.x),j:parseInt(p.y)}:{srs:e,x:parseInt(p.x),y:parseInt(p.y)});return s}function e(a){var b,c;switch(c=a&&"string"==typeof a&&0===a.indexOf("application/vnd.ogc.gml/3")?"application/vnd.ogc.gml/3":a){case"application/vnd.ogc.gml":b=OpenLayers.Format.GML.v2;break;case"application/vnd.ogc.gml/3":b=OpenLayers.Format.GML.v3;break;case"text/html":case"text/plain":b=OpenLayers.Format.Text;break;case"application/json":b=OpenLayers.Format.GeoJSON;break;default:b=OpenLayers.Format.WMSGetFeatureInfo}return b}return{getLayersByWMSCapabilities:function(c){var d=a.defer(),e=c.indexOf("?")>0?c+"&request=GetCapabilities":c+"?request=GetCapabilities";return b.get(e).success(function(a){var b=new OpenLayers.Format.WMSCapabilities,c=b.read(a).capability.layers;d.resolve(c)}).error(function(a,b){d.reject(b)}),d.promise},getWMSFeatures:function(b,f,g,h,i,j){var k=j||"text/xml",l=a.defer(),m=d(b,i,h,k);0!==g.length&&(m=OpenLayers.Util.extend({layers:g,query_layers:g},m)),OpenLayers.Util.applyDefaults(m,{});var n={url:f,params:OpenLayers.Util.upperCaseObject(m),callback:function(a){var b=new(e(k)),c=b.read(a.responseText),d=new OpenLayers.Format.GeoJSON,f=angular.fromJson(d.write(c));l.resolve(f)},scope:this};return c().defaultOptions.proxyHost&&(n.proxy=c().defaultOptions.proxyHost),OpenLayers.Request.GET(n),l.promise},getWMSFeaturesByLayerId:function(b,d,e,f){for(var g=function(a){var b;return b=a.getParams().STYLES?a.getParams().STYLES:OpenLayers.Util.isArray(a.getParams().LAYERS)?new Array(a.getParams().LAYERS.length):a.getParams().LAYERS.toString().replace(/[^,]/g,"")},h=a.defer(),i=[],j=[],k=[b.getLayersBy("id",e)[0]],l=0,m=k.length;m>l;l++)null!=k[l].getParams().LAYERS&&(i=i.concat(k[l].getParams().LAYERS),j=j.concat(g(k[l])));var n=k[0],o=b.getView().getProjection().getCode(),p=OpenLayers.Util.extend({service:"WMS",version:n.getParams().VERSION,request:"GetFeatureInfo",bbox:b.getExtent().toBBOX(null),feature_count:100,height:b.getSize()[1],width:b.getSize()[0],format:OpenLayers.Format.WMSGetFeatureInfo,info_format:n.params.INFO_FORMAT||"text/xml"},parseFloat(n.params.VERSION)>=1.3?{crs:o,i:parseInt(f.x),j:parseInt(f.y)}:{srs:o,x:parseInt(f.x),y:parseInt(f.y)});0!==i.length&&(p=OpenLayers.Util.extend({layers:i,query_layers:i,styles:j},p)),OpenLayers.Util.applyDefaults(p,{});var q={url:d,params:OpenLayers.Util.upperCaseObject(p),callback:function(a){var b=new OpenLayers.Format.WMSGetFeatureInfo,c=b.read(a.responseText),d=new OpenLayers.Format.GeoJSON,e=angular.fromJson(d.write(c));h.resolve(e)},scope:this};return c().defaultOptions.proxyHost&&(q.proxy=c().defaultOptions.proxyHost),OpenLayers.Request.GET(q),h.promise}}}];a.service("olv3DataService",b)}(),function(){"use strict";var a=angular.module("gawebtoolkit.events-openlayers3",[]);a.service("ol3CesiumEventManager",[function(){function a(a,b,c){var d=a.get("_geowebtoolkit")||{};d[b]=c,a.set("_geowebtoolkit",d)}function b(a,b){var c=null;if(a.get("_geowebtoolkit")){var d=a.get("_geowebtoolkit");c=d[b]}return c}return{registerMapMouseMove:function(c,d,e){var f=b(c,"registerMapMouseMove");f&&$(c.getViewport()).un(e),a(c,"registerMapMouseMove",e),$(c.getViewport()).on("mousemove",e)},registerMapMouseMoveEnd:function(c,d,e){$(c.getViewport()).on("mousemove",function(d,f){var g=b(c,"mousemoveTimeout");g&&window.clearTimeout(g),g=window.setTimeout(function(){e(d,f)},100),a(c,"mousemoveTimeout",g)})},registerMapClick:function(){},unRegisterMapClick:function(){},registerMapEvent:function(){},unRegisterMapEvent:function(){},switchTo3dView:function(){},switchTo2dView:function(){},registerControlEvent:function(){},unRegisterControlEvent:function(){}}}])}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},google=google||{},app=angular.module("gawebtoolkit.mapservices.layer.openlayersv2",[]);app.service("olv2LayerService",["$log","$q","$timeout",function(a,b,c){"use strict";var d={xyzTileCachePath:"/tile/${z}/${y}/${x}",createLayer:function(a){var b;switch(a.layerType.toLowerCase()){case"wms":b=d.createWMSLayer(a);break;case"xyztilecache":b=d.createXYZLayer(a);break;case"arcgiscache":b=d.createArcGISCacheLayer(a);break;case"vector":b=d.createFeatureLayer(a);break;case"googlestreet":case"googlehybrid":case"googlesatellite":case"googleterrain":b=d.createGoogleMapsLayer(a);break;case"markerlayer":b=d.createMarkerLayer(a);break;default:throw new Error("Invalid layerType used to create layer of name "+a.layerName+" - with layerType - "+a.layerType)}return b.geoLayerType=a.layerType,b},createGoogleLayer:function(a){if(null==a.layerType)throw new Error("'layerType' not specified for creating a Google Maps layer. Please specify a valid layer type, eg 'hybrid");var b;switch(a.layerType.toLocaleLowerCase()){case"googlehybrid":case"hybrid":b=google.maps.MapTypeId.HYBRID;break;case"googlesatellite":case"satellite":b=google.maps.MapTypeId.SATELLITE;break;case"googlestreet":case"street":b=google.maps.MapTypeId.STREET;break;case"googleterrain":case"terrain":b=google.maps.MapTypeId.TERRAIN;break;default:b=google.maps.MapTypeId.HYBRID}var c={visibility:a.visibility===!0||"true"===a.visibility,type:b};return new OpenLayers.Layer.Google(a.layerType,c)},createBingLayer:function(a){var b,c=a.layerName;switch(a.layerType.toLocaleLowerCase()){case"aerial":b="Aerial",c=c||"Bing Aerial";break;case"aerialwithlabels":b="AerialWithLabels",c=c||"Bing Aerial With Labels";break;case"birdseye":b="Birdseye",c=c||"Bing Birdseye";break;case"birdseyewithlabels":b="BirdseyeWithLabels",c=c||"Bing Birdseye With Labels";break;case"road":b="Road",c=c||"Bing Roads";break;default:b="Road",c=c||"Bing Roads"}var d=new OpenLayers.Layer.Bing({key:a.bingApiKey,type:b,name:c,visibility:a.visibility===!0||"true"===a.visibility});return d.wrapDateLine=a.wrapDateLine||!1,d},createOsmLayer:function(a){var b=new OpenLayers.Layer.OSM(a.layerName||"OpenCycleMap");return b.wrapDateLine=a.wrapDateLine||!1,b.visibility=a.visibility===!0||"true"===a.visibility,b},createFeatureLayer:function(a){var b;return null==a.url?b=new OpenLayers.Layer.Vector(a.layerName):(d.postAddLayerCache=d.postAddLayerCache||[],b=new OpenLayers.Layer.Vector(a.layerName,{strategies:[new OpenLayers.Strategy.Fixed],styleMap:new OpenLayers.StyleMap({"default":new OpenLayers.Style({pointRadius:"10",fillOpacity:.6,fillColor:"#ffcc66",strokeColor:"#cc6633"}),select:{fillColor:"#8aeeef"}}),protocol:new OpenLayers.Protocol.WFS({url:a.url,featureType:a.wfsFeatureType,featurePrefix:a.wfsFeaturePrefix,version:a.wfsVersion,geometryName:a.wfsGeometryName,srsName:a.datumProjection}),visibility:a.visibility})),null!=a.postAddLayer&&(d.postAddLayerCache[b.id]=a.postAddLayer),b},setFeatureStyle:function(){},createMarkerLayer:function(a){return new OpenLayers.Layer.Markers(a.layerName)},createGoogleMapsLayer:function(a){var b;switch(a.layerType){case"GoogleStreet":b=google.maps.MapTypeId.STREET;break;case"GoogleHybrid":b=google.maps.MapTypeId.HYBRID;break;case"GoogleSatellite":b=google.maps.MapTypeId.SATELLITE;break;case"GoogleTerrain":b=google.maps.MapTypeId.TERRAIN}var c={wrapDateLine:a.wrapDateLine,transitionEffect:a.transitionEffect,visibility:a.visibility===!0||"true"===a.visibility,isBaseLayer:a.isBaseLayer===!0||"true"===a.isBaseLayer,tileSize:a.tileSize(a.tileType),sphericalMercator:a.sphericalMercator,centerPosition:a.centerPosition,attribution:a.layerAttribution,numZoomLevels:20,type:b,animationEnabled:!0};return new OpenLayers.Layer.Google(a.layerName,c)},clearFeatureLayer:function(b,c){var e=d.getLayerById(b,c);e?e.removeAllFeatures():a.error('clearFeatureLayer: Layer "'+c+'" not found.')},createXYZLayer:function(a){var b={layerName:a.layerName,layerUrl:a.layerUrl,options:{wrapDateLine:a.wrapDateLine,transitionEffect:a.transitionEffect,visibility:a.visibility===!0||"true"===a.visibility,isBaseLayer:a.isBaseLayer===!0||"true"===a.isBaseLayer,tileSize:a.tileSize(a.tileType),sphericalMercator:a.sphericalMercator,centerPosition:a.centerPosition,attribution:a.layerAttribution,opacity:a.opacity}};return b.options.isBaseLayer&&(a.resolutions&&(b.options.resolutions=a.resolutions),a.zoomOffset&&(b.options.zoomOffset=a.zoomOffset)),null!=a.maxZoomLevel&&a.maxZoomLevel.length>0&&(b.options.numZoomLevels=parseInt(a.maxZoomLevel)),new OpenLayers.Layer.XYZ(b.layerName,b.layerUrl+d.xyzTileCachePath,b.options)},createWMSLayer:function(a){var b={layerName:a.layerName,layerUrl:a.layerUrl,layers:a.layers,wrapDateLine:a.wrapDateLine,visibility:a.visibility===!0||"true"===a.visibility,isBaseLayer:a.isBaseLayer===!0||"true"===a.isBaseLayer,transitionEffect:a.transitionEffect,tileSize:a.tileSize(a.tileType),sphericalMercator:a.sphericalMercator,tileType:a.tileType,projection:a.datumProjection,transparent:a.transparent,attribution:a.layerAttribution,opacity:a.opacity};return null!=a.maxZoomLevel&&a.maxZoomLevel.length>0&&(b.numZoomLevels=parseInt(a.maxZoomLevel)),new OpenLayers.Layer.WMS(b.layerName,b.layerUrl,{layers:b.layers,format:b.format,transparent:b.transparent},b)},createArcGISCacheLayer:function(a){var d=b.defer(),e=new OpenLayers.Protocol.Script,f=c(function(){d.reject("LayerTimeout")},1e4);return e.createRequest(a.layerUrl,{f:"json",pretty:"true"},function(b){if(c.cancel(f),null!=b.error&&null!=b.error.code)return void d.reject("LayerError - "+b.error.code);var e={layerName:a.layerName,layerUrl:a.layerUrl,options:{transitionEffect:a.transitionEffect,visibility:a.visibility===!0||"true"===a.visibility,isBaseLayer:a.isBaseLayer===!0||"true"===a.isBaseLayer,tileSize:a.tileSize(),alwaysInRange:!1,displayInLayerSwitcher:!1,opacity:a.opacity,attribution:a.layerAttribution}};null!=a.maxZoomLevel&&a.maxZoomLevel.length>0&&(e.options.numZoomLevels=parseInt(a.maxZoomLevel)),b&&(e.options.layerInfo=b,null==e.options.numZoomLevels&&(e.options.numZoomLevels=b.tileInfo.lods.length+1));var g=new OpenLayers.Layer.ArcGISCache(e.layerName,e.layerUrl,e.options);d.resolve(g)}),d.promise},defaultLayerOptions:function(a,b){var c=angular.extend(b.defaultOptions,a);return c.centerPosition=d.parselatLong(c.centerPosition),c},cleanupLayer:function(a,b){if(null!=a.layers&&0!==a.layers.length){var c=d.getLayerById(a,b);null!=c&&a.removeLayer(c)}},createFeature:function(a,b){var c;return c=a.projection!==b.crs.properties.name?new OpenLayers.Format.GeoJSON({externalProjection:b.crs.properties.name,internalProjection:a.projection}):new OpenLayers.Format.GeoJSON,c.read(angular.toJson(b),b.type)},addFeatureToLayer:function(a,b,c){var e=d.getLayerById(a,b);e.addFeatures(c instanceof Array?c:[c]);var f=new OpenLayers.Format.GeoJSON,g=angular.fromJson(f.write(c));return g.id=c.id,g},parselatLong:function(a){return a?angular.fromJson(a):null},getLayerById:function(a,b){for(var c,d=0;d<a.layers.length;d++)if(a.layers[d].id===b){c=a.layers[d];break}return c},removeLayerByName:function(a,b){var c=a.getLayersByName(b);c.length>0&&a.removeLayer(c[0])},removeLayersByName:function(a,b){for(var c=a.getLayersByName(b),d=0;d<c.length;d++)a.removeLayer(c[d])},removeLayer:function(a,b){a.removeLayer(b)},removeLayerById:function(a,b){var c=a.getLayersBy("id",b)[0];a.removeLayer(c)},removeFeatureFromLayer:function(a,b,c){var d=a.getLayersBy("id",b)[0],e=d.getFeatureById(c);d.removeFeatures(e)},registerFeatureSelected:function(a,b,c,d){var e,f=a.getLayersBy("id",b)[0],g=f.geoLayerType;"WMS"===g&&(e=OpenLayers.Protocol.WFS.fromWMSLayer(f));var h=a.getControl("ctrlGetFeature");return h&&a.removeControl(h),h=new OpenLayers.Control.GetFeature({protocol:e,box:!0,hover:!0,multipleKey:"shiftKey",toggleKey:"ctrlKey"}),h.metadata=h.metadata||{},h.metadata.type="getfeature",h.events.register("featureselected",d,c),{id:"ctrlGetFeature",name:"getfeature"}},registerLayerEvent:function(b,c,d,e){var f=b.getLayersBy("id",c)[0];null==f?a.warn('registerLayerEvent: Layer not found - "'+c+'"'):f.events.register(d,f,e)},unRegisterLayerEvent:function(b,c,d,e){var f=b.getLayersBy("id",c)[0];null==f?a.warn('unRegisterLayerEvent: Layer not found - "'+c+'"'):f.events.unregister(d,f,e)},getMarkerCountForLayerName:function(a,b){var c=a.getLayersByName(b),d=0;return c.length>0&&(d=null==c[0].markers?0:c[0].markers.length),d},filterFeatureLayer:function(a,b,c,e){for(var f=d.getLayerById(a,b),g=d.parseFeatureAttributes(e),h=[],i=0;i<g.length;i++)h.push(new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:g[i],matchCase:!1,value:c.toUpperCase()+"*"}));var j=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:h});1===j.filters.length?(f.filter=h[0],f.refresh({force:!0})):(f.filter=j,f.refresh({force:!0}))},parseFeatureAttributes:function(a){if(!a)return null;var b=[];return-1===a.indexOf(",")?b.push(a):b=a.split(","),b},getLayerFeatures:function(a,b){for(var c=[],e=d.getLayerById(a,b),f=0;f<e.features.length;f++)c.push(e.features[f]);return c},raiseLayerDrawOrder:function(a,b,c){var e=d.getLayerById(a,b);a.raiseLayer(e,c)},postAddLayerCache:{}};return d}]),function(){"use strict";var a=angular.module("gawebtoolkit.mapservices.layer.openlayersv3",[]);a.service("olv3LayerService",["$log","$q","$timeout","GeoLayer","GeoUtils",function(a,b,c,d,e){var f={xyzTileCachePath:"/tile/{z}/{y}/{x}",createLayer:function(a){var b;switch(a.layerType){case"WMS":b=f.createWMSLayer(a);break;case"XYZTileCache":b=f.createXYZLayer(a);break;case"ArcGISCache":b=f.createArcGISCacheLayer(a);break;case"Vector":b=f.createFeatureLayer(a);break;case"markerlayer":b=f.createMarkerLayer(a);break;case"GoogleStreet":case"GoogleHybrid":case"GoogleSatellite":case"GoogleTerrain":throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.");default:throw new Error("Invalid layerType used to create layer of name "+a.layerName+" - with layerType - "+a.layerType)}return b.set("geoLayerType",a.layerType),a.maxZoomLevel&&(b.geoMaxZoom=parseInt(a.maxZoomLevel)),a.minZoomLevel&&(b.geoMinZoom=parseInt(a.minZoomLevel)),b},createFeatureLayer:function(a){var b;if(null==a.url)b=new ol.layer.Vector({source:new ol.source.Vector,format:new ol.format.GeoJSON});else{f.postAddLayerCache=f.postAddLayerCache||[];{new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.6)"}),stroke:new ol.style.Stroke({color:"#319FD3",width:1}),text:new ol.style.Text({font:"12px Calibri,sans-serif",fill:new ol.style.Fill({color:"#000"}),stroke:new ol.style.Stroke({color:"#fff",width:3})})})}b=new ol.layer.Vector({source:new ol.source.Vector({url:a.url,format:new ol.format.GeoJSON,style:a.style})})}return b.set("name",a.layerName),b.set("isBaseLayer",a.isBaseLayer||!1),b},setFeatureStyle:function(a,b){var c=new ol.style.Style({image:new ol.style.Circle({radius:b.radius,fill:new ol.style.Fill({color:e.convertHexAndOpacityToRgbArray(b.color,b.opacity)}),stroke:new ol.style.Stroke({color:e.convertHexAndOpacityToRgbArray(b.color,b.opacity),width:b.radius})})});a.setStyle(c)},createMarkerLayer:function(a){var b=new ol.layer.Vector({source:new ol.source.Vector,format:new ol.format.GeoJSON});return b.set("name",a.layerName),b},createGoogleLayer:function(){throw new Error("Google map layers are not supported with OpenLayers 3. To use a Google maps layer, consider falling back to framework 'olv2'.")},createBingLayer:function(a){var b,c=a.layerName;switch(a.layerType.toLocaleLowerCase()){case"aerial":b="Aerial",c=c||"Bing Aerial";break;case"aerialwithlabels":b="AerialWithLabels",c=c||"Bing Aerial With Labels";break;case"birdseye":b="Birdseye",c=c||"Bing Birdseye";break;case"birdseyewithlabels":b="BirdseyeWithLabels",c=c||"Bing Birdseye With Labels";break;case"road":b="Road",c=c||"Bing Roads";break;default:b="Road"}var d=new ol.layer.Tile({source:new ol.source.BingMaps({key:a.bingApiKey,imagerySet:b})});
return d.set("name",c),d.setVisible(a.visibility===!0||"true"===a.visibility),d},createOsmLayer:function(a){var b=new ol.layer.Tile({source:new ol.source.OSM});return b.setVisible(a.visibility===!0||"true"===a.visibility),b},clearFeatureLayer:function(a,b){var c=f.getLayerById(a,b);c.getSource().clear()},createXYZLayer:function(a){var b={url:a.layerUrl+f.xyzTileCachePath,crossOrigin:"*/*"};null!=a.layerAttribution&&(b.attributions=[new ol.Attribution({html:a.layerAttribution})]);var c={opacity:a.opacity,source:new ol.source.XYZ(b),visible:a.visibility===!0||"true"===a.visibility},d=new ol.layer.Tile(c);return d.set("name",a.layerName),d.set("isBaseLayer",a.isBaseLayer||!1),d},createWMSLayer:function(a){var b={};b.url=a.layerUrl,b.crossOrigin="anonymous",b.params={LAYERS:a.layers,TILED:!0},a.format&&(b.params.FORMAT=a.format),b.wrapX=!0,null!=a.wrapDateLine&&(b.wrapX="true"===a.wrapDateLine||a.wrapDateLine===!0),b.serverType="mapserver",null!=a.layerAttribution&&(b.attributions=[new ol.Attribution({html:a.layerAttribution})]);var c=new ol.source.TileWMS(b),d={};d.source=c,d.visible="true"===a.visibility||a.visibility===!0,d.opacity=a.opacity;var e=new ol.layer.Tile(d);return e.set("name",a.layerName),e.set("isBaseLayer",a.isBaseLayer||!1),e},createArcGISCacheLayer:function(a){var b=a.layerUrl+f.xyzTileCachePath,c={crossOrigin:"*/*",url:b},d={opacity:a.opacity,source:new ol.source.XYZ(c),visible:a.visibility===!0||"true"===a.visibility},e=new ol.layer.Tile(d);return e.set("name",a.layerName),e.set("isBaseLayer",a.isBaseLayer||!1),e},defaultLayerOptions:function(a,b){var c=angular.extend(b.defaultOptions,a);return c.centerPosition=f.parselatLong(c.centerPosition),c},cleanupLayer:function(a,b){var c=f.getLayerBy(a,"id",b);null!=c&&a.removeLayer(c)},createFeature:function(a,b){var c;return c=new ol.format.GeoJSON,c.readFeature(JSON.stringify(b),{dataProjection:ol.proj.get(b.crs.properties.name),featureProjection:a.getView().getProjection()})},addFeatureToLayer:function(a,b,c){var d=f.getLayerById(a,b),g=d.getSource();if("function"!=typeof g.getFeatures)throw new Error("Layer does not have a valid source for features.");var h,i=new ol.format.GeoJSON;c instanceof Array?(g.addFeatures(c),h=i.writeFeatures(c)):(g.addFeature(c),h=i.writeFeature(c));var j=angular.fromJson(h);return c.setId(c.getId()||e.generateUuid()),j.id=c.getId(),j},parselatLong:function(a){return a?angular.fromJson(a):null},getLayerById:function(a,b){return f.getLayerBy(a,"id",b)},getLayerBy:function(a,b,c){var d=null,e=!1;return a.getLayers().forEach(function(a){c===a.get(b)&&e===!1&&(d=a,e=!0)}),d},getLayerByName:function(a,b){return f.getLayerBy(a,"name",b)},getLayersBy:function(a,b,c){var e=a.getLayers(),f=[];return e.forEach(function(a){var e=a.get(b);e&&-1!==e.indexOf(c)&&f.push(d.fromOpenLayersV3Layer(a))}),f},_getLayersBy:function(a,b,c){var d=a.getLayers(),e=[];return d.forEach(function(a){var d=a.get(b);d&&-1!==d.indexOf(c)&&e.push(a)}),e},removeLayerByName:function(a,b){var c=f._getLayersBy(a,"name",b);c.length>0&&a.removeLayer(c[0])},removeLayersByName:function(a,b){for(var c=f._getLayersBy(a,"name",b),d=0;d<c.length;d++)a.removeLayer(c[d])},removeLayer:function(a,b){a.removeLayer(b)},removeLayerById:function(a,b){var c=f._getLayersBy(a,"id",b)[0];a.removeLayer(c)},removeFeatureFromLayer:function(a,b,c){for(var d=f.getLayerById(a,b),e=d.getSource().getFeatures(),g=0;g<e.length;g++){var h=e[g];if(h.id===c){d.getSource().removeFeature(h);break}}},registerFeatureSelected:function(a,b,c){f.registeredInteractions=f.registeredInteractions||[];for(var d=0;d<f.registeredInteractions.length;d++){var e=f.registeredInteractions[d];e.id===""+b+"_features"&&a.removeInteraction(e.select)}var g=new ol.interaction.Select({condition:ol.events.condition.click});g.on("select",function(a){a.target.get("id")===b&&c(a)}),f.registeredInteractions.push({id:b+"_features",select:g}),a.addInteraction(g)},registerLayerEvent:function(a,b,c,d){var e=f.getLayerBy(a,"id",b);c="loadstart"===c?"tileloadstart":c,c="loadend"===c?"tileloadend":c,e.getSource().un(c,d)},unRegisterLayerEvent:function(a,b,c,d){var e=f.getLayerBy(a,"id",b);c="loadstart"===c?"tileloadstart":c,c="loadend"===c?"tileloadend":c,e.getSource().un(c,d)},getMarkerCountForLayerName:function(a,b){var c=f.getLayerBy(a,"name",b);return null==c?0:"undefined"==typeof c.getSource().getFeatures?0:c.getSource().getFeatures().length},filterFeatureLayer:function(){throw new Error("NotImplementedError")},parseFeatureAttributes:function(a){if(!a)return null;var b=[];return-1===a.indexOf(",")?b.push(a):b=a.split(","),b},getLayerFeatures:function(a,b){var c=[],d=f.getLayerById(a,b),e=d.getSource();if(null==e.getFeatures)return c;for(var g=e.getFeatures(),h=0;h<g.length;h++){var i=g[h];c.push(i)}return c},raiseLayerDrawOrder:function(a,b,c){for(var d,e=a.getLayers(),f=0;f<e.getLength();f++){var g=e.item(f);if(g.get("id")===b){d=f;break}}var h=d+c;if(d!==h){var i=a.getLayers().getArray();i.splice(h,0,i.splice(d,1)[0]),a.updateSize()}},postAddLayerCache:{}};return f}])}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},darwin=darwin||{},app=angular.module("gawebtoolkit.mapservices.controls.openlayersv2",[]);app.service("olv2MapControls",[function(){"use strict";var a=[{name:"permalink",constructor:OpenLayers.Control.Permalink},{name:"overviewmap",constructor:OpenLayers.Control.OverviewMap},{name:"scale",constructor:OpenLayers.Control.Scale},{name:"scaleline",constructor:OpenLayers.Control.ScaleLine},{name:"panzoombar",constructor:OpenLayers.Control.PanZoomBar},{name:"zoomslider",constructor:OpenLayers.Control.PanZoomBar},{name:"zoom",constructor:OpenLayers.Control.Zoom},{name:"mouseposition",constructor:OpenLayers.Control.MousePosition},{name:"attribution",constructor:OpenLayers.Control.Attribution},{name:"measureline",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Path]},{name:"measurepolygon",constructor:OpenLayers.Control.Measure,customParams:[OpenLayers.Handler.Polygon]},{name:"wmsgetfeatureinfo",constructor:OpenLayers.Control.WMSGetFeatureInfo}],b={resolveSupportedControl:function(b){for(var c,d=0;d<a.length;d++){var e=a[d];if(e.name===b){c=e;break}}return c},createControl:function(a,c,d){var e;d&&!c.div&&(c.div=d);var f=b.resolveSupportedControl(a);if(null==f||null==f.constructor)throw new Error("Error in map control construction. Unsupported control or missing source for control constructor.");return e=f.customParams?c?new f.constructor(f.customParams[0],c):new f.constructor(f.customParams[0]):c?new f.constructor(c):new f.constructor},registerControl:function(b,c){a.push({name:b,constructor:c})}};return b}]),function(){"use strict";var a=angular.module("gawebtoolkit.mapservices.controls.openlayersv3",[]);a.service("olv3MapControls",[function(){function a(a,b){var c={},d=function(a){return function(b){return b[0]>180&&(b[0]=b[0]-360),b[0]<-180&&(b[0]=b[0]+360),b[1]>90&&(b[1]=b[1]-180),b[1]<-90&&(b[1]=b[1]+180),ol.coordinate.toStringXY(b,a)}},e=function(a){return function(b){return b[0]>180&&(b[0]=b[0]-360),b[0]<-180&&(b[0]=b[0]+360),b[1]>90&&(b[1]=b[1]-180),b[1]<-90&&(b[1]=b[1]+180),a({lon:b[0],lat:b[1]})}};return c.coordinateFormat=null!=a.formatOutput?e(a.formatOutput):null==a.coordinateFormat?d(4):a.coordinateFormat(4),c.projection=a.projection||b.displayProjection||"EPSG:4326",c}var b=[{name:"overviewmap",constructor:ol.control.OverviewMap},{name:"scaleline",constructor:ol.control.ScaleLine},{name:"zoomslider",constructor:ol.control.ZoomSlider},{name:"panzoombar",constructor:ol.control.ZoomSlider},{name:"zoom",constructor:ol.control.Zoom},{name:"mouseposition",constructor:ol.control.MousePosition,resolveCustomParams:a},{name:"attribution",constructor:ol.control.Attribution}],c={resolveSupportedControl:function(a){for(var c,d=0;d<b.length;d++){var e=b[d];if(e.name===a){c=e;break}}return c},createControl:function(a,d,e,f){var g;e&&!d.div&&(d.element=e);var h=c.resolveSupportedControl(a);if(null==h||null==h.constructor){var i="Error in map control construction for '"+a+"'. Unsupported control or missing source for control constructor.";i+="\r\nSupported controls names are: ";for(var j=0;j<b.length;j++){var k=b[j];i+="\r\n"+k.name}throw new Error(i)}return h.resolveCustomParams?(d=angular.extend(d,angular.copy(h.resolveCustomParams(d,f))),g=new h.constructor(d)):h.customParams?(d=angular.extend(d,angular.copy(h.customParams[0])),g=new h.constructor(d)):g=d?new h.constructor(d):new h.constructor,g},registerControl:function(a,c){b.push({name:a,constructor:c})}};return c}]),null!=ol&&null!=ol.control&&null!=ol.control.ZoomSlider&&(ol.control.ZoomSlider.prototype.getPositionForResolution_=function(a){try{var b=this.getMap().getView().getValueForResolutionFunction();return 1-b(a)}catch(c){}})}(),function(){"use strict";var a=angular.module("gawebtoolkit.mapservices.map.ol3cesium",[]);a.service("ol3CesiumMapService",[function(){var a,b={registerMapClick:function(b,c){var d=b.getCesiumScene();a||(a=new Cesium.ScreenSpaceEventHandler(d.canvas)),a.setInputAction(c,Cesium.ScreenSpaceEventType.LEFT_CLICK)},unRegisterMapClick:function(b,c){var d=b.getCesiumScene();a||(a=new Cesium.ScreenSpaceEventHandler(d.canvas)),a.removeInputAction(c,Cesium.ScreenSpaceEventType.LEFT_CLICK)},registerMapEvent:function(b,c,d){var e=b.getCesiumScene();a||(a=new Cesium.ScreenSpaceEventHandler(e.canvas)),a.setInputAction(d,Cesium.ScreenSpaceEventType.LEFT_CLICK)},unRegisterMapEvent:function(){},getCoordinateFromPixel:function(a,b){var c=a.getCesiumScene(),d=c.globe.ellipsoid,e=c.camera.pickEllipsoid(b,d);if(e){var f=d.cartesianToCartographic(e),g=Cesium.Math.toDegrees(f.longitude),h=Cesium.Math.toDegrees(f.latitude),i=[parseFloat(g),parseFloat(h)];return i}return[0,0]}};return b}])}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.mapservices.map.openlayersv2",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.controls.openlayersv2"]);app.service("olv2MapService",["olv2LayerService","olv2MapControls","GeoUtils","GeoLayer","$q","$log",function(a,b,c,d,e,f){"use strict";function g(a,b,c){a._geowebtoolkit=a._geowebtoolkit||{},a._geowebtoolkit[b]=c}function h(a,b){var c=null;return null!=a._geowebtoolkit&&(c=a._geowebtoolkit[b]),c}function i(a,b){for(var c in b.postAddLayerCache)if(b.postAddLayerCache.hasOwnProperty(c)){for(var d=!1,e=0;e<a.layers.length;e++){var f=a.layers[e];c===f.id&&(d=!0)}d||(b.postAddLayerCache[c]=null)}}var j={initialiseMap:function(a,b){var c={};return null==a.displayProjection&&(a.displayProjection=b.defaultOptions.displayProjection),j.displayProjection=a.displayProjection,null==a.datumProjection&&(a.datumProjection=b.defaultOptions.projection),null==a.datumProjection&&(f.warn("Datum projection has not been provided. Defaulting to EPSG:3857"),a.datumProjection="EPSG:3857"),null==a.displayProjection&&(f.warn("Display projection has not been provided. Defaulting to EPSG:4326"),a.displayProjection="EPSG:4326"),c.projection=a.datumProjection,c.numZoomLevels=b.defaultOptions.numZoomLevels,c.displayProjection=a.displayProjection,c.controls=a.isStaticMap||void 0!==c.controls&&null!==c.controls?[]:[new OpenLayers.Control.Navigation],new OpenLayers.Map(a.mapElementId,c)},getParameterByName:function(a){a=a.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var b=new RegExp("[\\?&]"+a+"=([^&#]*)"),c=b.exec(document.URL);return null==c?"":decodeURIComponent(c[1].replace(/\+/g," "))},zoomToMaxExtent:function(a){a.zoomToMaxExtent()},currentZoomLevel:function(a){return a.getZoom()},addLayer:function(a,b){return null==b.then||"function"!=typeof b.then?(null!=b.geoLayerType&&-1!==b.geoLayerType.indexOf("Google")&&(a.zoomDuration=0),a.addLayer(b),j.postLayerAddAction(a,b),d.fromOpenLayersV2Layer(b)):void b.then(function(c){return a.addLayer(c),j.postLayerAddAction(a,b),d.fromOpenLayersV2Layer(b)})},postLayerAddAction:function(b,c){f.info("post layer add fired"),a.postAddLayerCache[c.id]&&a.postAddLayerCache[c.id]({map:b,layer:c}),i(b,a)},registerMapMouseMove:function(a,b){a.events.register("mousemove",a,b)},registerMapClick:function(a,b){a.events.register("click",a,b)},unRegisterMapClick:function(a,b){a.events.unregister("click",a,b)},registerMapMouseMoveEnd:function(a,b){a.events.register("moveend",a,b)},registerMapEvent:function(a,b,c){a.events.register(b,a,c)},unRegisterMapEvent:function(a,b,c){a.events.unregister(b,a,c)},getCurrentMapExtent:function(a){var b=a.getExtent();if(null==b)return null;b=b.transform(a.projection,j.displayProjection);var c=[],d=[b.left,b.top],e=[b.right,b.top],f=[b.left,b.bottom],g=[b.right,b.bottom];return c.push(d),c.push(e),c.push(f),c.push(g),c},getMapScale:function(a){var b=a.getScale();return b},getMapCenter:function(a){var b=a.center;return b},isControlActive:function(a,b){for(var c,d=0;a.controls.length;d++){var e=a.controls[d];if(e.id===b){c=e;break}}return c.active===!0},addControl:function(a,c,d,e,f){c=c.toLowerCase();var g,h={};e&&(g=$("#"+e)[0]),"mouseposition"===c&&(d=d||{});var i=b.createControl(c,d,g);return i.id=f||i.id,a.addControl(i),h.id=i.id,h},getControls:function(a){for(var b=[],c=a.controls,d=0;d<c.length;d++){var e=c[d];b.push({id:e.metadata.id||e.id,name:e.metadata.type})}return b},getControlById:function(a,b){for(var c,d=a.controls,e=0;e<d.length;e++){var f=d[e];if(f.id===b){c=f;break}}return c},activateControl:function(a,b){var c=j.getControlById(a,b);if(null==c)throw new Error('Control "'+b+'" not found. Failed to activate control');c.activate()},deactivateControl:function(a,b){var c=j.getControlById(a,b);c.deactivate()},registerControlEvent:function(a,b,c,d){var e=j.getControlById(a,b);e.events.register(c,void 0,d)},unRegisterControlEvent:function(a,b,c,d){var e=j.getControlById(a,b);e.events.unregister(c,void 0,d)},getLayers:function(a){var b=[];return angular.forEach(a.layers,function(a){b.push(d.fromOpenLayersV2Layer(a))}),b},getLayersByName:function(a,b){if("string"!=typeof b&&"number"!=typeof b)throw new TypeError("Expected number");for(var c=a.getLayersBy("name",b),e=[],f=0;f<c.length;f++){var g=c[f];e.push(d.fromOpenLayersV2Layer(g))}return e},setLayerVisibility:function(a,b,c){if("object"==typeof c)throw new TypeError("Expected boolean");var d=a.getLayersBy("id",b)[0];d.setVisibility(c)},createBoundingBox:function(a,b){for(var c=new OpenLayers.Bounds,d=0;d<b.length;d++)c.extend(new OpenLayers.LonLat(b[d][0],b[d][1]));return c.toBBOX()},createBounds:function(a,b,c){for(var d=new OpenLayers.Bounds,e=0;e<b.length;e++){var f=new OpenLayers.LonLat(b[e][0],b[e][1]);f=f.transform(c,a.projection),d.extend(f)}return d},zoomToExtent:function(a,b){var c=j.createBounds(a,b,j.displayProjection);a.zoomToExtent(c,!1)},zoomToLayer:function(a,b){var c=a.getLayersBy("id",b)[0];if(null==c)throw new ReferenceError('Layer not found - id: "'+b+'".');var d=c.getExtent();a.zoomToExtent(d)},zoomTo:function(a,b){if("object"==typeof b)throw new TypeError("Expected number");a.zoomTo(b)},getMapElementId:function(a){return"object"==typeof a.div?$(a.div)[0].id:a.div},getProjection:function(a){return a.projection},getDisplayProjection:function(a){return a.displayProjection||j.displayProjection||"EPSG:4326"},getSize:function(a){var b=a.getSize();return{width:b.w,height:b.h}},setBaseLayer:function(a,b){var c=a.getLayersBy("id",b)[0];a.setBaseLayer(c,!1)},setCenter:function(a,b,c,d){var e=new OpenLayers.LonLat(c,b);if(null==d){var f=e.transform(a.displayProjection,a.projection);a.setCenter(f)}else if(d!=a.projection){var g=e.transform(d,a.projection);a.setCenter(g)}else a.setCenter(e)},setInitialPositionAndZoom:function(a,b){if(""!==j.getParameterByName("zoom")&&null!=b.centerPosition){var c=new OpenLayers.LonLat(j.getParameterByName("lon"),j.getParameterByName("lat")).transform(),d=new OpenLayers.Projection(j.displayProjection),e=new OpenLayers.Projection(a.getProjection()),f=c.transform(d,e);a.setCenter(f,j.getParameterByName("zoom"))}else if(null!=b.initialExtent){var g=j.createBounds(a,b.initialExtent,j.displayProjection);a.zoomToExtent(g,!0)}else if(b.centerPosition){var h=JSON.parse(b.centerPosition),i=new OpenLayers.LonLat(h[0],h[1]),k=new OpenLayers.Projection(j.displayProjection),l=new OpenLayers.Projection(a.getProjection()),m=i.transform(k,l);a.setCenter(m,b.zoomLevel)}else a.zoomToMaxExtent()},isBaseLayer:function(a,b){for(var c,d=!1,e=a.layers.length,f=0;e>f;f++)if(a.layers[f].id===b){c=a.layers[f];break}return d=c?-1!==c.id.indexOf("ArcGISCache")?c.options.isBaseLayer:c.isBaseLayer:!1},setOpacity:function(a,b,c){if("object"==typeof c)throw new TypeError("Expected number");var d=a.getLayersBy("id",b)[0];d.setOpacity(c)},mapResized:function(a){a.updateSize();for(var b=0;b<a.layers.length;b++)a.layers[b].redraw(!0)},setMapMarker:function(a,b,d,e,f){var g=a.getLayersBy("name",d),h=a.getLonLatFromPixel(b),i=new OpenLayers.Size(f.width,f.height),j=new OpenLayers.Pixel(-(i.w/2),-i.h),k=new OpenLayers.Icon(e,i,j),l=new OpenLayers.Marker(h,k.clone());l.map=a;var m=c.generateUuid();if(l.id=m,null!=g&&g.length>0&&"function"==typeof g[0].addMarker)g[0].addMarker(l);else{var n=new OpenLayers.Layer.Markers(d);a.addLayer(n),n.addMarker(l)}return{id:m,groupName:d}},removeMapMarker:function(a,b){for(var c=0;c<a.layers.length;c++){var d=a.layers[c];if(null!=d.markers&&d.markers.length>0){for(var e=0;e<d.markers.length;e++){var f=d.markers[e];if(f.id===b){d.removeMarker(f);break}}break}}},getLonLatFromPixel:function(a,b,c,d){if(null==b)throw new ReferenceError("'x' value cannot be null or undefined");if(null==c)throw new ReferenceError("'y' value cannot be null or undefined");var e=a.getLonLatFromPixel({x:b,y:c});return d?e=e.transform(a.projection,d):j.displayProjection&&j.displayProjection!==a.projection&&(e=e.transform(a.projection,j.displayProjection)),e},getPixelFromLonLat:function(a,b,c){if(null==b)throw new ReferenceError("'lon' value cannot be null or undefined");if(null==c)throw new ReferenceError("'lat' value cannot be null or undefined");var d=new OpenLayers.LonLat(b,c);return j.displayProjection&&j.displayProjection!==a.projection&&(d=d.transform(j.displayProjection,a.projection)),a.getPixelFromLonLat(d)},getPointFromEvent:function(a){return{x:a.xy.x,y:a.xy.y}},drawPolyLine:function(a,b,c,d){var e=new OpenLayers.Geometry.Point(b[0].lon,b[0].lat),f=new OpenLayers.Geometry.Point(b[1].lon,b[1].lat),g=d||"EPSG:4326",h=new OpenLayers.Layer.Vector(c),i=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([f,e]).transform(new OpenLayers.Projection(g),a.getProjection())),j=OpenLayers.Util.applyDefaults(j,OpenLayers.Feature.Vector.style["default"]);j.strokeWidth=4,i.style=j,h.addFeatures([i]),a.addLayer(h)},startRemoveSelectedFeature:function(a,b){function c(a){d.removeFeatures(a)}var d,e=a.getLayersByName(b);if(!(e.length>0))return void f.warn('Layer not found ("'+b+'") when starting the selection to remove features.');d=e[0];var h=new OpenLayers.Control.SelectFeature(d,{onSelect:c});a.addControl(h),h.activate(),g(a,"removeFeaturesControl",h)},stopRemoveSelectedFeature:function(a){var b=h(a,"removeFeaturesControl");null!=b&&(b.deactivate(),a.removeControl(b),g(a,"removeFeaturesControl",null))},removeFeature:function(a,b,c){var d=a.getLayersByName(b);d[0].removeFeatures(c)},startDrawingOnLayer:function(a,b,c){var d,e=a.getLayersByName(b||c.layerName);e.length>0?d=e[0]:(d=new OpenLayers.Layer.Vector(b||c.layerName),a.addLayer(d)),d.style={fillColor:c.fillColor||c.color,fillOpacity:c.fillOpacity||c.opacity,pointRadius:c.pointRadius||c.radius,strokeColor:c.strokeColor||c.color,strokeOpacity:c.strokeOpacity||c.opacity};var f=h(a,"drawingControl");if(!f){var i;if("point"===c.featureType.toLowerCase()?i=new OpenLayers.Control.DrawFeature(d,OpenLayers.Handler.Point):"line"===c.featureType.toLowerCase()||"linestring"===c.featureType.toLowerCase()?i=new OpenLayers.Control.DrawFeature(d,OpenLayers.Handler.Path):"box"===c.featureType.toLowerCase()?i=new OpenLayers.Control.DrawFeature(d,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4,irregular:!0}}):"polygon"===c.featureType.toLowerCase()&&(i=new OpenLayers.Control.DrawFeature(d,OpenLayers.Handler.Polygon)),"circle"===c.featureType.toLowerCase())throw new Error("'startDrawingOnLayer' failed due to feature type 'Circle' is not a valid feature type for OpenLayers 2.");g(a,"drawingControl",i),a.addControl(i),i.activate()}},stopDrawing:function(a){var b=h(a,"drawingControl");b&&(b.deactivate(),a.removeControl(b),g(a,"drawingControl",null))},drawLabel:function(a,b,d){var e,f=a.getLayersByName(b||d.layerName);f.length>0?e=f[0]:(e=new OpenLayers.Layer.Vector(b||d.layerName),a.addLayer(e));var g=new OpenLayers.Geometry.Point(d.lon,d.lat).transform(new OpenLayers.Projection(d.projection),a.getProjection()),h=new OpenLayers.Feature.Vector(g);e.style={label:d.text,fontColor:d.fontColor||d.color,fontSize:d.fontSize,align:d.align,labelSelect:!0},e.addFeatures([h]);var i=c.generateUuid();h.id=i;var j=new OpenLayers.Format.GeoJSON,k=j.write(h),l=angular.fromJson(k);return l.id=i,l},drawLabelWithPoint:function(a,b,d){var e,f=a.getLayersByName(b||d.layerName);f.length>0?e=f[0]:(e=new OpenLayers.Layer.Vector(b||d.layerName),a.addLayer(e));var g=new OpenLayers.Geometry.Point(d.lon,d.lat).transform(new OpenLayers.Projection(d.projection),a.getProjection()),h=new OpenLayers.Feature.Vector(g),i=c.generateUuid();h.id=i,e.style={label:d.text,pointRadius:d.pointRadius||"8",fontColor:d.fontColor||d.color||"#000000",fontSize:d.fontSize||"14px",align:d.align||"cm",labelYOffset:d.labelYOffset||15,labelSelect:!0,fillColor:d.pointColor||d.color||"#000000",strokeColor:d.pointColor||d.color||"#000000",fillOpacity:d.pointOpacity||d.fillOpacity||.5,strokeOpacity:d.pointOpacity||d.strokeOpacity||1},e.addFeatures([h]);var j=new OpenLayers.Format.GeoJSON,k=j.write([h]),l=angular.fromJson(k);return l.features[0].id=i,l},getFeatureInfo:function(a,b,c,d,f,g,h){h=h||0;var i=e.defer(),j=g instanceof MouseEvent?g.xy:g,k=new OpenLayers.Pixel(j.x,j.y),l=k.add(-h,h),m=k.add(h,-h),n=a.getLonLatFromPixel(l),o=a.getLonLatFromPixel(m),p=new OpenLayers.Bounds(n.lon,n.lat,o.lon,o.lat),q=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:b,version:"1.1.0",srsName:a.projection,featureType:c,featurePrefix:d,geometryName:f,maxFeatures:100}),r=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:p});return q.read({filter:r,callback:function(b){if(b.success()){for(var c=new OpenLayers.Format.GeoJSON,d=c.write(b.features),e=angular.fromJson(d),f=0;f<e.features.length;f++)e.features[f].crs={type:"name",properties:{name:a.projection}};i.resolve(e)}else i.reject(b.error)}}),i.promise},getFeatureInfoFromLayer:function(a,b,c,d){d=d||0;var f,g=e.defer(),h=c instanceof MouseEvent?c.xy:c,i=new OpenLayers.Pixel(h.x,h.y),j=i.add(-d,d),k=i.add(d,-d),l=a.getLonLatFromPixel(j),m=a.getLonLatFromPixel(k),n=new OpenLayers.Bounds(l.lon,l.lat,m.lon,m.lat),o=a.getLayersBy("id",b);if(!(o.length>0))throw new Error("Invalid layer id");f=o[0];var p=OpenLayers.Protocol.WFS.fromWMSLayer(f),q=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:n});return p.read({filter:q,callback:function(b){if(b.success()){for(var c=new OpenLayers.Format.GeoJSON,d=c.write(b.features),e=angular.fromJson(d),f=0;f<e.features.length;f++)e.features[f].crs={type:"name",properties:{name:a.projection}};g.resolve(e)}else g.reject(b.error)}}),g.promise},createWfsClient:function(a,b,c,d,e,f,g){var h=new OpenLayers.Protocol.WFS({url:a,featureType:b,featurePrefix:c,version:d,geometryName:e,srsName:f});return h.isLonLatOrderValid=g,h},addWfsClient:function(a){j.wfsClientCache=j.wfsClientCache||[];var b=c.generateUuid();return j.wfsClientCache[b]=a,{clientId:b}},is3dSupported:function(){return!1},is3d:function(){return!1},switchTo3dView:function(){throw new Error("3D not supported in current map")},switchTo2dView:function(){},searchWfs:function(a,b,c,d){var f=j.wfsClientCache[b],g=e.defer(),h=function(a){if("200"!==a.priv.status||200===a.priv.status)return void g.resolve(null);for(var c=0;c<a.features.length;c++)if(j.wfsClientCache[b].isLonLatOrderValid===!1){var d=a.features[c].geometry.x,e=a.features[c].geometry.y;a.features[c].geometry.x=e,a.features[c].geometry.y=d}for(var h=new OpenLayers.Format.GeoJSON,i=h.write(a.features),k=angular.fromJson(i),l=0;l<k.features.length;l++)k.features[l].crs={type:"name",properties:{name:f.srsName}};g.resolve(k)},i=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:d,matchCase:!1,value:c.toUpperCase()+"*"});return f.read({filter:i,callback:h}),g.promise},getMeasureFromEvent:function(a,b){var c,d=new OpenLayers.Format.GeoJSON({externalProjection:j.displayProjection,internalProjection:a.projection}),e=d.write(b.geometry);return c=angular.fromJson(e),{measurement:b.measure,units:b.units,geoJson:c}},wfsClientCache:{}};return j}]),function(){"use strict";var a,b,c=angular.module("gawebtoolkit.mapservices.map.openlayersv3",["gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.controls.openlayersv3","gawebtoolkit.mapservices.map.ol3cesium","gawebtoolkit.events-openlayers3"]);c.service("olv3MapService",["olv3LayerService","olv3MapControls","GeoUtils","GeoLayer","ol3CesiumMapService","ol3CesiumEventManager","ga.config","$q","$log","$timeout",function(c,d,e,f,g,h,i,j,k,l){function m(a,b,c){var d=a.get("_geowebtoolkit")||{};d[b]=c,a.set("_geowebtoolkit",d)}function n(a,b){var c=null;if(a.get("_geowebtoolkit")){var d=a.get("_geowebtoolkit");c=d[b]}return c}function o(a){for(var b=0;b<r.length;b++)if(r[b]===a)return;r.push(a)}function p(a){for(var b=0;b<r.length;b++)r[b]===a&&r.slice(b)}function q(a,b){for(var c in b.postAddLayerCache)if(b.postAddLayerCache.hasOwnProperty(c)){for(var d=!1,e=0;e<a.getLayers().length;e++){var f=a.getLayers()[e];c===f.id&&(d=!0)}d||(b.postAddLayerCache[c]=null)}}var r=[],s={initialiseMap:function(a,b){var c={},d={};if(null==a.displayProjection&&b.defaultOptions&&b.defaultOptions.displayProjection&&(a.displayProjection=b.defaultOptions.displayProjection),null==a.datumProjection&&b.defaultOptions&&b.defaultOptions.projection&&(a.datumProjection=b.defaultOptions.projection),null==a.datumProjection&&(k.warn("Datum projection has not been provided. Defaulting to EPSG:3857"),a.datumProjection="EPSG:3857"),null==a.displayProjection&&(k.warn("Display projection has not been provided. Defaulting to EPSG:4326"),a.displayProjection="EPSG:4326"),d.projection=ol.proj.get(a.datumProjection),a.centerPosition){var e=JSON.parse(a.centerPosition);d.center=ol.proj.transform([e[0],e[1]],a.displayProjection,a.datumProjection)}d.zoom=parseInt(a.zoomLevel),d.extent=d.projection.getExtent();var f=new ol.View(d);return f.geoMaxZoom=28,f.geoMinZoom=0,c.target=a.mapElementId,c.renderer=null==i.olv3Options?"canvas":i.olv3Options.renderer||"canvas",c.view=f,a.isStaticMap&&(c.interactions=[]),c.controls=[],s.displayProjection=a.displayProjection,s.datumProjection=a.datumProjection,new ol.Map(c)},getParameterByName:function(a){a=a.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var b=new RegExp("[\\?&]"+a+"=([^&#]*)"),c=b.exec(document.URL);return null==c?"":decodeURIComponent(c[1].replace(/\+/g," "))},zoomToMaxExtent:function(a){a.getView().setZoom(18)},currentZoomLevel:function(a){return a.getView().getZoom()},addLayer:function(a,b){var c=b.geoMaxZoom||a.getView().geoMaxZoom,d=b.geoMinZoom||a.getView().geoMinZoom;if(c<a.getView().geoMaxZoom||d>a.getView().geoMinZoom){var e=a.getView(),g={projection:e.getProjection(),center:e.getCenter(),zoom:e.getZoom(),maxZoom:c,minZoom:d},h=new ol.View(g);a.setView(h)}return b.disableDefaultUI?void 0:null==b.then||"function"!=typeof b.then?(null!=b.geoLayerType&&-1!==b.geoLayerType.indexOf("Google")&&(a.zoomDuration=0),a.addLayer(b),s.postLayerAddAction(a,b),f.fromOpenLayersV3Layer(b)):void b.then(function(c){return a.addLayer(c),s.postLayerAddAction(a,b),f.fromOpenLayersV3Layer(b)})},postLayerAddAction:function(a,b){k.info("post layer add fired"),c.postAddLayerCache[b.id]&&c.postAddLayerCache[b.id]({map:a,layer:b}),q(a,c)},registerMapMouseMove:function(b,c){h.registerMapMouseMove(b,a,c)},registerMapClick:function(b,c){return null==c?void k.error('callback provided to "registerMapClick" was null'):(s.is3d(b)?g.registerMapClick(a,c):b.on("click",c),void o(c))},unRegisterMapClick:function(b,c){null!=c&&(s.is3d(b)?g.unRegisterMapClick(a,c):b.un("click",c),p(c))},registerMapMouseMoveEnd:function(b,c){h.registerMapMouseMoveEnd(b,a,c)},registerMapEvent:function(b,c,d){return s.is3d(b)?void g.registerMapEvent(a,c,d):void b.on(c,d)},unRegisterMapEvent:function(b,c,d){return s.is3d(b)?void g.unRegisterMapEvent(a,c,d):void b.un(c,d)},getCurrentMapExtent:function(a){var b=a.getView().calculateExtent(a.getSize());if(null==b)return null;var c=[],d=ol.proj.transform([b[0],b[3]],a.getView().getProjection(),s.displayProjection||"EPSG:4326"),e=ol.proj.transform([b[2],b[3]],a.getView().getProjection(),s.displayProjection||"EPSG:4326"),f=ol.proj.transform([b[0],b[1]],a.getView().getProjection(),s.displayProjection||"EPSG:4326"),g=ol.proj.transform([b[2],b[1]],a.getView().getProjection(),s.displayProjection||"EPSG:4326");return c.push(d),c.push(e),c.push(f),c.push(g),c},getMapScale:function(a){var b=a.getView(),c=b.getResolution(),d=a.getView().getProjection().getUnits(),e=25.4/.28,f=ol.proj.METERS_PER_UNIT[d];return c*f*39.37*e},getMapCenter:function(a){var b=a.getView().getCenter(),c={lat:b[1],lon:b[0]};return c},isControlActive:function(a,b,c){if("measureline"===c){var d=n(a,"measureEventDrawInteraction");return null!=d}for(var e=a.getControls(),f=0;f<e.getLength();f++){var g=e.item(f);if(g.get("id")===b)return!0}return!1},addControl:function(a,b,c,f,g,h){b=b.toLowerCase();var i,j={};f&&(i=$("#"+f)[0]),"mouseposition"===b&&(c=c||{}),"overviewmap"===b&&null!=c&&null!=c.maximized&&(c.collapsed=!c.maximized);var k=d.createControl(b,c,i,h);return k.set("id",g||k.get("id")||e.generateUuid()),k.set("name",b||""),"overviewmap"===b?l(function(){a.addControl(k)},1e3):a.addControl(k),j.id=k.get("id"),j},getControls:function(a){for(var b=[],c=a.getControls(),d=0;d<c.getLength();d++){var e=c.item(d);b.push({id:e.metadata.id||e.get("id"),name:e.metadata.type})}return b},getControlById:function(a,b){for(var c,d=a.getControls(),e=0;e<d.getLength();e++){var f=d.item(e);if(f.get("id")===b){c=f;break}}return c},activateControl:function(a,b){var c=s.isControlActive(a,b),d=s._getCachedControl(b);!c&&d&&(a.addControl(d),s._removeCachedControl(b))},_getCachedControl:function(a){s.cachedControls=s.cachedControls||[];for(var b=0;b<s.cachedControls.length;b++){var c=s.cachedControls[b];if(c.get("id")===a)return c}return null},_removeCachedControl:function(a){s.cachedControls=s.cachedControls||[];for(var b=0;b<s.cachedControls.length;b++){var c=s.cachedControls[b];c.get("id")===a&&(s.cachedControls[b]=null)}return null},deactivateControl:function(a,b){var c=s.isControlActive(a,b),d=s._getCachedControl(b),e=s.getControlById(a,b);c&&!d&&(s.cachedControls.push(e),a.removeControl(e))},registerControlEvent:function(a,b,c,d){var e=a.getControls(),f=null;if(e.forEach(function(a){a.get("id")===b&&(f=a)}),null==f){var g,h;"measurepartial"===c&&(s.initMeasureEventLayer(a),g=n(a,"measureEventVectorLayer"),h=n(a,"measureEventDrawInteraction"),s.handleMeasurePartial(a,g,h,d)),"measure"===c&&(s.initMeasureEventLayer(a),g=n(a,"measureEventVectorLayer"),h=n(a,"measureEventDrawInteraction"),s.handleMeasure(a,g,h,d))}else f.on(c,d)},initMeasureEventLayer:function(a){var b=n(a,"measureEventVectorLayer");b&&a.removeLayer(b);var c=n(a,"measureEventDrawInteraction");c&&a.removeInteraction(c);var d=n(a,"measureEventSource");d||(m(a,"measureEventSource",new ol.source.Vector),d=n(a,"measureEventSource")),b=n(a,"measureEventVectorLayer"),b||(m(a,"measureEventVectorLayer",new ol.layer.Vector({source:d,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})})})),b=n(a,"measureEventVectorLayer")),b.set("id",e.generateUuid()),c=n(a,"measureEventDrawInteraction"),c||(m(a,"measureEventDrawInteraction",new ol.interaction.Draw({source:d,type:"LineString",style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.7)"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"})})})})),c=n(a,"measureEventDrawInteraction")),a.addLayer(b),a.addInteraction(c)
},handleMeasurePartial:function(a,b,c,d){c.on("drawstart",function(b){var c=n(a,"measureEventVectorLayer");c&&c.getSource().clear();var e=!1;s.pauseDoubleClickZoom_(a);var f=b.feature,g=function(a){e=!!a.dragging};m(a,"measurePointerMoveEvent",g);var h=function(b){var c=n(a,"measureSingleClickTimeout");c&&l.cancel(c),e||m(a,"measureSingleClickTimeout",l(function(){var c=n(a,"measureIsDrawEndComplete");c?m(a,"measureIsDrawEndComplete",!1):(b.feature=f,d(b))},10))};m(a,"measurePointerUpEvent",h),a.on("pointerup",h),a.on("pointermove",g),d(b)},s)},handleMeasure:function(a,b,c,d){m(a,"measureIsDrawEndComplete",!1),c.on("drawend",function(b){s._cleanupMeasureEvents(a),d(b),l(function(){s.enableDoubleClickZoom_(a)},50),m(a,"measureIsDrawEndComplete",!0)},s)},pauseDoubleClickZoom_:function(a){var b=a.getInteractions();b.forEach(function(a){a instanceof ol.interaction.DoubleClickZoom&&a.setActive(!1)})},enableDoubleClickZoom_:function(a){var b=a.getInteractions();b.forEach(function(a){a instanceof ol.interaction.DoubleClickZoom&&a.setActive(!0)})},unRegisterControlEvent:function(a,b,c,d){var e=a.getControls(),f=null;if(e.forEach(function(a){a.get("id")===b&&(f=a)}),null==f){var g=n(a,"measureEventDrawInteraction");"measure"===c&&g&&s._cleanupMeasureEvents(a,!0),"measurepartial"===c&&g&&s._cleanupMeasureEvents(a,!0)}else f.un(c,d)},_cleanupMeasureEvents:function(a,b){var c=n(a,"measurePointerUpEvent");c&&a.un("pointerup",c);var d=n(a,"measurePointerMoveEvent");if(d&&a.un("pointermove",d),b){var e=n(a,"measureEventDrawInteraction"),f=n(a,"measureEventVectorLayer");e&&a.removeInteraction(e),f&&a.removeLayer(f),m(a,"measureEventVectorLayer",null),m(a,"measureEventDrawInteraction",null),m(a,"measureEventSource",null)}},getLayers:function(a){var b=[];return angular.forEach(a.getLayers(),function(a){b.push(f.fromOpenLayersV3Layer(a))}),b},_getLayersBy:function(a,b,c){var d=a.getLayers(),e=[];return d.forEach(function(a){var d=a.get(b);d&&-1!==d.indexOf(c)&&e.push(a)}),e},getLayersByName:function(a,b){if("string"!=typeof b&&"number"!=typeof b)throw new TypeError("Expected string or number");return c.getLayersBy(a,"name",b)},setLayerVisibility:function(a,b,d){if("string"!=typeof d&&"boolean"!=typeof d)throw new TypeError('Invalid visibility value "'+d+'"');var e=c.getLayerBy(a,"id",b);e.setVisible(d)},createBoundingBox:function(a,b){for(var c=[],d=0;d<b.length;d++){var e=b[d];c.push(new ol.geom.Point(e))}var f=new ol.geom.GeometryCollection(c);return f.getExtent()},createBounds:function(a,b,c){var d=[],e=a.getView();c=c||ol.proj.get("EPSG:4326");for(var f=0;f<b.length;f++)d.push(ol.proj.transform([parseFloat(b[f][0]),parseFloat(b[f][1])],c,e.getProjection().getCode()));return new ol.extent.boundingExtent(d)},zoomToExtent:function(a,b){var c=a,d=c.getView(),e=c.getSize();d.fit(b,e)},zoomToLayer:function(a,b){var d=c.getLayerBy(a,"id",b);if(null==d)throw new ReferenceError('Layer not found - id: "'+b+'".');var e=d.getExtent();null!=e&&a.getView().fit(e,a.getSize())},zoomTo:function(a,b){if("object"==typeof b)throw new TypeError("Expected number");a.getView().setZoom(b)},getMapElementId:function(a){return a.getTarget()},getProjection:function(a){return a.getView().getProjection().getCode()},getDisplayProjection:function(){return s.displayProjection||"ESPG:4326"},getSize:function(a){var b=a.getSize();return{width:b[0],height:b[1]}},setBaseLayer:function(a,b){var c=s._getLayersBy(a,"isBaseLayer",!0);c.forEach(function(a){a.setVisible(a.get("id")===b?!0:!1)})},setCenter:function(a,b,c,d){var e=[parseFloat(c),parseFloat(b)];if(null==d){var f=ol.proj.transform(e,s.displayProjection,a.getView().getProjection());a.getView().setCenter(f)}else if(d!==s.datumProjection){var g=ol.proj.transform(e,d,a.getView().getProjection());a.getView().setCenter(g)}else a.getView().setCenter(e)},setInitialPositionAndZoom:function(a,b){if(""!==s.getParameterByName("zoom")&&null!=b.centerPosition)throw new Error("NotImplemented");if(b.initialExtent){var c=b.initialExtent,d=ol.proj.transform([c[0][0],c[1][1]],b.displayProjection,b.datumProjection),e=ol.proj.transform([c[1][0],c[0][1]],b.displayProjection,b.datumProjection),f=[d[0],d[1],e[0],e[1]];a.getView().fit(f,a.getSize())}else{if(b.centerPosition){var g=JSON.parse(b.centerPosition),h=ol.proj.transform([g[0],g[1]],s.displayProjection,s.datumProjection);a.getView().setCenter(h)}b.zoomLevel&&a.getView().setZoom(b.zoomLevel)}},isBaseLayer:function(a,b){var c=a.getLayers(),d=null,e=0,f=!1;return c.forEach(function(a){a.get("id")!==b||f||(d=e,f=!0),e++}),0===d},setOpacity:function(a,b,d){if("object"==typeof d)throw new TypeError("Expected number");var e=c.getLayerBy(a,"id",b);e.setOpacity(d)},mapResized:function(a){a.updateSize();for(var b=0;b<a.getLayers().length;b++)a.getLayers()[b].redraw(!0)},setMapMarker:function(b,d,f,h,i){var j,k=c.getLayerBy(b,"name",f);s.is3d(b)?(j=g.getCoordinateFromPixel(a,{x:d.x,y:d.y}),j=ol.proj.transform(j,"EPSG:4326",b.getView().getProjection().getCode())):j=b.getCoordinateFromPixel([d.x,d.y]);var l=new ol.Feature({geometry:new ol.geom.Point(j)}),m=e.generateUuid();l.setId(m);var n=new ol.style.Style({image:new ol.style.Icon({anchor:[.5,1],anchorXUnits:"fraction",anchorYUnits:"fraction",opacity:i.opacity||1,src:h})});if(l.setStyle(n),null!=k)k.getSource().addFeature(l);else{var o=new ol.source.Vector;o.addFeature(l),k=new ol.layer.Vector({source:o,format:new ol.format.GeoJSON}),k.set("name",f),b.addLayer(k)}return{id:m,groupName:f}},removeMapMarker:function(a,b){for(var c=0;c<a.getLayers().getLength();c++){var d=a.getLayers().item(c),e=d.getSource();if("function"==typeof e.getFeatures&&e.getFeatures().length>0){for(var f=0;f<e.getFeatures().length;f++){var g=e.getFeatures()[f];if(g.getId()===b){e.removeFeature(g);break}}break}}},getLonLatFromPixel:function(b,c,d,e){if(null==c)throw new ReferenceError("'x' value cannot be null or undefined");if(null==d)throw new ReferenceError("'y' value cannot be null or undefined");var f;return s.is3d(b)?(f=g.getCoordinateFromPixel(a,{x:c,y:d}),{lon:f[0],lat:f[1]}):(f=b.getCoordinateFromPixel([c,d]),e?f=ol.proj.transform(f,b.getView().getProjection(),e):s.displayProjection&&s.displayProjection!==b.getView().getProjection()&&(f=ol.proj.transform(f,b.getView().getProjection(),s.displayProjection)),{lon:f[0],lat:f[1]})},getPixelFromLonLat:function(a,b,c){if(null==b)throw new ReferenceError("'lon' value cannot be null or undefined");if(null==c)throw new ReferenceError("'lat' value cannot be null or undefined");var d=[b,c];s.displayProjection!==a.getView().getProjection().getCode()&&(d=ol.proj.transform(d,s.displayProjection,a.getView().getProjection()));var e=a.getPixelFromCoordinate(d);return null==e&&(a.renderSync(),e=a.getPixelFromCoordinate(d)),{x:e[0],y:e[1]}},getPointFromEvent:function(a){return a.pixel?{x:a.pixel[0],y:a.pixel[1]}:a.position?a.position:void 0},drawPolyLine:function(a,b,d,f){d||(d=e.generateUuid());var g,h=c._getLayersBy(a,"name",d),i=new ol.source.Vector,j=new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#ffcc33",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#ffcc33"})})}),k=[b[0].lon,b[0].lat],l=[b[1].lon,b[1].lat],m=new ol.geom.LineString([k,l]),n=f||"EPSG:4326";m.transform(n,a.getView().getProjection());var o=new ol.Feature({geometry:m,name:d});if(o.setId(e.generateUuid()),h.length>0){if(g=h[0],!(g.getSource().addFeature instanceof Function))throw new Error("Layer name '"+d+"' corresponds to a layer with an invalid source. Layer source must support features.");g.setStyle(j)}else g=new ol.layer.Vector({source:i,style:j,format:new ol.format.GeoJSON}),g.set("name",d),a.addLayer(g);g.getSource().addFeature(o)},startRemoveSelectedFeature:function(a,b){var d=c._getLayersBy(a,"name",b);if(!d||0===d.length)return void k.warn('Layer "'+b+"' not found. Remove selected layer interaction not added.");var e=d[0],f=new ol.interaction.Select({condition:ol.events.condition.click});a.addInteraction(f),f.on("select",function(a){var c=e.getSource();if(!(c.removeFeature instanceof Function))throw new Error("No valid layer found with name - "+b+" - to remove selected features.");if(a.selected instanceof Array)for(var d=0;d<a.selected.length;d++)for(var g=a.selected[d],h=0;h<c.getFeatures().length;h++){var i=c.getFeatures()[h];null!=i.get("id")&&null!=g.get("id")&&i.get("id")===g.get("id")&&c.removeFeature(i)}else for(var j=0;j<c.getFeatures().length;j++){var k=c.getFeatures()[j];if(k.get("id")===a.selected.get("id")){c.removeFeature(k);break}}f.getFeatures().clear()}),m(a,"removeFeaturesControl",f)},stopRemoveSelectedFeature:function(a){var b=n(a,"removeFeaturesControl");b&&(a.removeInteraction(b),m(a,"removeFeaturesControl",null))},removeFeature:function(a,b,d){var e=c.getLayersBy(a,"name",b);e.removeFeatures(d)},startDrawingOnLayer:function(a,b,d){var f=n(a,"removeFeaturesControl");f&&a.removeInteraction(f);var g,h,i;switch(d.featureType.toLowerCase()){case"point":g="Point";break;case"line":case"linestring":g="LineString";break;case"box":g="LineString",h=2,i=function(a,b){b||(b=new ol.geom.Polygon(null));var c=a[0],d=a[1];return b.setCoordinates([[c,[c[0],d[1]],d,[d[0],c[1]],c]]),b};break;case"polygon":g="Polygon";break;case"circle":g="Circle"}var j,k=c._getLayersBy(a,"name",b||d.layerName),l=new ol.source.Vector,o=new ol.style.Style({fill:new ol.style.Fill({color:e.convertHexAndOpacityToRgbArray(d.fillColor||d.color,d.opacity),radius:d.fillRadius||d.radius}),stroke:new ol.style.Stroke({color:e.convertHexAndOpacityToRgbArray(d.strokeColor||d.color,d.opacity),width:d.strokeRadius||d.radius}),image:new ol.style.Circle({radius:d.circleRadius||d.radius,fill:new ol.style.Fill({color:e.convertHexAndOpacityToRgbArray(d.circleColor||d.color,d.opacity)})})});if(k.length>0){if(j=k[0],!(j.getSource().addFeature instanceof Function))throw new Error("Layer name '"+b||d.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.");l=j.getSource()}else j=new ol.layer.Vector({source:l,style:o,format:new ol.format.GeoJSON}),j.set("name",b||d.layerName),a.addLayer(j);var p=n(a,"featureDrawingInteraction");if(!p){var q=new ol.interaction.Draw({source:l,type:g,format:new ol.format.GeoJSON,geometryFunction:i,maxPoints:h});q.on("drawstart",function(a){a.feature&&a.feature.setStyle(o)}),q.on("drawend",function(a){a.feature&&a.feature.set("id",e.generateUuid())}),m(a,"featureDrawingInteraction",q),a.addInteraction(q)}},stopDrawing:function(a){var b=n(a,"featureDrawingInteraction");b&&(a.removeInteraction(b),m(a,"featureDrawingInteraction",null))},drawLabel:function(a,b,d){var f,g=c._getLayersBy(a,"name",b||d.layerName),h=new ol.source.Vector,i="cm"===d.align?"center":d.align||d.textAlign,j=new ol.style.Text({textAlign:i,textBaseline:d.baseline,font:(d.fontWeight||d.weight||"normal")+" "+(d.fontSize||d.size||"12px")+" "+(d.font||"sans-serif"),text:d.text,fill:new ol.style.Fill({color:d.fontColor||d.color,width:d.fillWdith||d.width||1}),stroke:new ol.style.Stroke({color:d.fontColor||d.color,width:d.outlineWidth||d.width||1}),offsetX:d.offsetX||0,offsetY:d.offsetY||-1*d.labelYOffset||15,rotation:d.rotation}),k=new ol.style.Style({image:new ol.style.Circle({radius:d.circleRadius||d.radius,fill:new ol.style.Fill({color:e.convertHexAndOpacityToRgbArray(d.fillColor||d.color||"#000000",d.opacity)}),stroke:new ol.style.Stroke({color:e.convertHexAndOpacityToRgbArray(d.strokeColor||d.color||"#000000",d.opacity),width:d.strokeRadius||d.radius})}),text:j});if(g.length>0){if(f=g[0],!(f.getSource().addFeature instanceof Function))throw new Error("Layer name '"+b||d.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}else f=new ol.layer.Vector({source:h,style:k,format:new ol.format.GeoJSON,id:"test"}),f.set("name",b||d.layerName),a.addLayer(f);var l=ol.proj.transform([d.lon,d.lat],d.projection||s.displayProjection,a.getView().getProjection()),m=new ol.geom.Point(l),n=new ol.Feature({geometry:m,id:e.generateUuid()});n.setStyle(k),f.getSource().addFeature(n);var o=new ol.format.GeoJSON;return angular.fromJson(o.writeFeature(n))},drawLabelWithPoint:function(a,b,d){var f,g,h=c._getLayersBy(a,"name",b||d.layerName),i=new ol.source.Vector,j="cm"===d.align?"center":d.align||d.textAlign,k=new ol.style.Text({textAlign:j,textBaseline:d.baseline,font:(d.fontWeight||d.weight||"normal")+" "+(d.fontSize||d.size||"12px")+" "+(d.font||"sans-serif"),text:d.text,fill:new ol.style.Fill({color:e.convertHexAndOpacityToRgbArray(d.fontColor||d.color,d.opacity||1),width:d.fillWdith||d.width||1}),stroke:new ol.style.Stroke({color:e.convertHexAndOpacityToRgbArray(d.fontColor||d.color,d.opacity||1),width:d.outlineWidth||d.width||1}),offsetX:d.offsetX||0,offsetY:d.offsetY||-1*d.labelYOffset||15,rotation:d.rotation}),l=d.fillColor||d.color||"#000000",m=d.fillOpacity||d.opacity||.5;g=0===l.indexOf("#")?e.convertHexAndOpacityToRgbArray(l,m):d.fillColor||d.color;var n,o=d.fillColor||d.color||"#000000",p=d.strokeOpacity||d.opacity||1;n=0===o.indexOf("#")?e.convertHexAndOpacityToRgbArray(o,p):d.strokeColor||d.color;var q=new ol.style.Style({image:new ol.style.Circle({radius:d.pointRadius||d.radius||"2",fill:new ol.style.Fill({color:g}),stroke:new ol.style.Stroke({color:n,width:d.strokeRadius||d.radius})}),text:k});if(h.length>0){if(f=h[0],!(f.getSource().addFeature instanceof Function))throw new Error("Layer name '"+b||d.layerName+"' corresponds to a layer with an invalid source. Layer source must support features.")}else f=new ol.layer.Vector({source:i,format:new ol.format.GeoJSON}),f.set("name",b||d.layerName),a.addLayer(f);var r=ol.proj.transform([d.lon,d.lat],d.projection||s.displayProjection,a.getView().getProjection()),t=new ol.geom.Point(r),u=new ol.Feature({geometry:t,id:e.generateUuid()});u.setStyle(q),f.getSource().addFeature(u);var v=new ol.format.GeoJSON;return angular.fromJson(v.writeFeatures([u]))},getFeatureInfo:function(a,b,c,d,e,f,g){if(null==OpenLayers)throw new Error("NotImplemented");k.warn("getFeatureInfo not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server"),g=g||0;var h=j.defer(),i=null!=f&&null!=f.map?f.pixel:f,l=new OpenLayers.Pixel(i[0],i[1]),m=l.add(-g,g),n=l.add(g,-g),o=a.getCoordinateFromPixel([m.x,m.y]),p=a.getCoordinateFromPixel([n.x,n.y]),q=new OpenLayers.Bounds(o[0],o[1],p[0],p[1]),r=new OpenLayers.Protocol.WFS({formatOptions:{outputFormat:"text/xml"},url:b,version:"1.1.0",srsName:a.getView().getProjection().getCode(),featureType:c,featurePrefix:d,geometryName:e,maxFeatures:100}),s=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:q});return r.read({filter:s,callback:function(b){if(b.success()){for(var c=new OpenLayers.Format.GeoJSON,d=c.write(b.features),e=angular.fromJson(d),f=0;f<e.features.length;f++)e.features[f].crs={type:"name",properties:{name:a.getView().getProjection().getCode()}};h.resolve(e)}else h.reject(b.error)}}),h.promise},getFeatureInfoFromLayer:function(a,b,d,e){if(null==OpenLayers)throw new Error("NotImplemented");k.warn("getFeatureInfoFromLayer not implemented for OpenLayers version 3, falling back to OpenLayers v2 to get GeoJSON features from server"),e=e||0;var f,g=j.defer(),h=null!=d&&null!=d.map?d.pixel:d,i=new OpenLayers.Pixel(h.x,h.y),l=i.add(-e,e),m=i.add(e,-e),n=a.getCoordinateFromPixel([l.x,l.y]),o=a.getCoordinateFromPixel([m.x,m.y]),p=new OpenLayers.Bounds(n[0],n[1],o[0],o[1]),q=c._getLayersBy(a,"id",b);if(!(q.length>0))throw new Error("Invalid layer id");f=q[0];var r,s,t=f.getSource().getParams().LAYERS,u=(OpenLayers.Util.isArray(t)?t[0]:t).split(":");u.length>1&&(s=u[0]),r=u.pop();var v={url:f.getSource().getUrls()[0],featureType:r,featurePrefix:s,srsName:f.projection&&f.projection.getCode()||f.map&&f.map.getProjectionObject().getCode(),version:"1.1.0"},w=new OpenLayers.Protocol.WFS(OpenLayers.Util.applyDefaults(null,v)),x=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:p});return w.read({filter:x,callback:function(b){if(b.success()){for(var c=new OpenLayers.Format.GeoJSON,d=c.write(b.features),e=angular.fromJson(d),f=0;f<e.features.length;f++)e.features[f].crs={type:"name",properties:{name:a.projection}};g.resolve(e)}else g.reject(b)}}),g.promise},createWfsClient:function(){throw new Error("NotImplemented")},addWfsClient:function(a){s.wfsClientCache=s.wfsClientCache||[];var b=e.generateUuid();return s.wfsClientCache[b]=a,{clientId:b}},is3dSupported:function(){return null!=window.olcs},is3d:function(){return null!=a?a.getEnabled():!1},switchTo3dView:function(b){if(a)a.setEnabled(!0);else{a=new olcs.OLCesium({map:b,target:b.getTarget()});var c=a.getCesiumScene(),d=i().cesiumOptions;if(null!=d&&d.includeCustomTerrainProvider){var e=new Cesium.CesiumTerrainProvider({url:d.customTerrainProviderUrl});c.terrainProvider=e}a.setEnabled(!0)}s.syncMapControlsWithOl3Cesium(b,b.getTarget())},switchTo2dView:function(b){a&&(a.setEnabled(!1),s.syncMapControlsWithOl3(b,b.getTarget()))},syncMapControlsWithOl3Cesium:function(c,d){var e=c.getControls(),f=$("#"+d)[0];e.forEach(function(d){if(d instanceof ol.control.MousePosition&&f){var e=a.getCesiumScene(),g=e.globe.ellipsoid,h=new Cesium.ScreenSpaceEventHandler(e.canvas);h.setInputAction(function(a){var b=e.camera.pickEllipsoid(a.endPosition,g);if(b){var c=g.cartesianToCartographic(b),f=Cesium.Math.toDegrees(c.longitude),h=Cesium.Math.toDegrees(c.latitude);$(".ol-mouse-position")[0].innerText=d.getCoordinateFormat()([f,h])}},Cesium.ScreenSpaceEventType.MOUSE_MOVE),b=h}d instanceof ol.control.ScaleLine&&c.render()});for(var h=0;h<r.length;h++){var i=r[h];g.registerMapClick(a,i),c.un("click",i)}},syncMapControlsWithOl3:function(b){for(var c=0;c<r.length;c++){var d=r[c];g.unRegisterMapClick(a,d),b.on("click",d)}},searchWfs:function(){throw new Error("NotImplemented")},getMeasureFromEvent:function(a,b){if(null==b.feature&&null==b.geometry)throw new Error("Feature cannot be null in Measure event");null!=b.geometry&&b.geometry instanceof Array&&2===b.geometry.length&&(b.feature=new ol.Feature(new ol.geom.Point(b.geometry))),null!=b.geometry&&b.geometry instanceof Array&&b.geometry.length>2&&(b.feature=new ol.Feature(new ol.geom.LineString(b.geometry)));var c=b.feature.clone(),d=c.getGeometry().transform(a.getView().getProjection(),s.displayProjection||"EPSG:4326"),e=new ol.format.GeoJSON,f=e.writeFeature(c),g=angular.fromJson(f),h=s.getGeometryLength(a,d),i="m";return h>1e3&&(i="km",h/=1e3),{measurement:h,units:i,geoJson:g.geometry}},getGeometryLength:function(a,b){for(var c=b.getCoordinates(),d=0,e=new ol.Sphere(6378137),f=0,g=c.length-1;g>f;++f)d+=e.haversineDistance(c[f],c[f+1]);return d},wfsClientCache:{}};return s}])}();var angular=angular||{},OpenLayers=OpenLayers||{},console=console||{},$=$||{},app=angular.module("gawebtoolkit.mapservices",["gawebtoolkit.mapservices.layer.openlayersv2","gawebtoolkit.mapservices.map.openlayersv2","gawebtoolkit.mapservices.layer.openlayersv3","gawebtoolkit.mapservices.map.openlayersv3","gawebtoolkit.mapservices.data.openlayersv2","gawebtoolkit.mapservices.data.openlayersv3"]);app.factory("GeoLayer",["GeoUtils",function(a){"use strict";var b=function(a,b,c,d,e){this.id=a,this.name=b,this.type=c,this.visibility=d,this.opacity=e};return b.fromOpenLayersV2Layer=function(a){var c,d=-1===a.id.indexOf("_ArcGISCache_");c=d?a.geoLayerType:"ArcGISCache";var e;return e="string"==typeof a.opacity?Number(a.opacity):a.opacity,new b(a.id,a.name,c,a.visibility,e)},b.fromOpenLayersV3Layer=function(c){var d,e=c.geoLayerType||c.get("geoLayerType");return d="string"==typeof c.get("opacity")?Number(c.get("opacity")):c.get("opacity"),c.get("id")||c.set("id",a.generateUuid()),new b(c.get("id"),c.get("name"),e,c.get("visible"),d)},b}]),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.base-layer-selector",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoBaseLayerSelector",["$timeout",function(a){return{restrict:"E",templateUrl:"src/main/js/ui/components/base-layer-selector/base-layer-selector.html",replace:!0,scope:{layersData:"=",mapController:"=",controllerEmitEventName:"@"},controller:["$scope",function(a){var b=this;b.selectBaseLayer=function(b){a.selectedBaseLayerId=b},a.$emit(a.controllerEmitEventName,b)}],link:function(b){b.$watch("selectedBaseLayerId",function(a){null!=a&&b.mapController.setBaseLayer(a)}),b.$watch("layersData",function(a){if(a)for(var d=0;d<a.length;d++)b.layersData[d].visibility===!0&&c(b.layersData[d])});var c=function(c){a(function(){b.selectedBaseLayerId=c.id})}},transclude:!0}}])}(),function(){"use strict";angular.module("gawebtoolkit.ui.components",["gawebtoolkit.ui.components.opacity-slider","gawebtoolkit.ui.components.layer-control","gawebtoolkit.ui.components.layers-drop-down","gawebtoolkit.ui.components.base-layer-selector","gawebtoolkit.ui.components.google-place-name-search","gawebtoolkit.ui.components.geo-place-name-search","gawebtoolkit.ui.components.layer-interaction-toggle","gawebtoolkit.ui.components.deprecated","gawebtoolkit.ui.components.measure-toggle"])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.deprecated",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoDialogToggle",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/dialog-toggle.html",transclude:!0,scope:{gaDialogController:"=",gaToggleClicked:"&"},link:function(a){a.toggleDialog=function(){var b=!a.gaDialogController.isClosed();b?a.gaDialogController.closeDialog():a.gaDialogController.openDialog(),a.gaToggleClicked({dialogController:a.gaDialogController})}}}}]),a.directive("geoStaticDialog",["$timeout","GeoUtils",function(a,b){return{restrict:"AE",templateUrl:"src/main/js/ui/components/deprecated/static-dialog.html",scope:{controllerEmitEventName:"@",dialogConfig:"=",dialogWindowResize:"&",dialogClosed:"&",dialogOpened:"&"},controller:["$scope",function(a){$(window).bind("resize",function(){null!=a.dialogWindowResize&&(a.dialogConfig=angular.extend(a.dialogConfig,a.dialogWindowResize())),a.dialogConfig.autoOpen=!a.isClosed,$("#"+a.dialogId).dialog(a.dialogConfig)}),a.dialogId=b.generateUuid();var c=this;c.openDialog=function(){$("#"+a.dialogId).dialog("open"),a.isClosed=!1,a.dialogOpened()},c.closeDialog=function(){$("#"+a.dialogId).dialog("close"),a.isClosed=!0,a.dialogClosed()},c.isClosed=function(){return a.isClosed},a.$emit(a.controllerEmitEventName,c)}],link:function(b){b.$on("$destroy",function(){$("#"+b.dialogId).dialog("destroy").remove()});var c=b.$watch("dialogConfig",function(d){null!=d&&(b.dialogReady=!0,$("#"+b.dialogId).bind("dialogclose",function(){b.isClosed=!0,a(function(){b.$apply()}),b.dialogClosed()}),b.isClosed=!d.autoOpen,c())})},transclude:!0}}]),a.directive("geoLayersDialog",["GeoUtils",function(a){return{restrict:"E",templateUrl:"src/main/js/ui/components/deprecated/layers-dialog.html",scope:{layersData:"=",dialogConfig:"=",mapController:"="},controller:["$scope",function(b){$(window).bind("resize",function(){b.dialogConfig.autoOpen=!b.isClosed,$("#"+b.dialogId).dialog(b.dialogConfig)}),b.dialogId=a.generateUuid(),b.isClosed=!b.dialogConfig.autoOpen;var c=this;c.openDialog=function(){$("#"+b.dialogId).dialog("open"),b.isClosed=!1},c.closeDialog=function(){$("#"+b.dialogId).dialog("close"),b.isClosed=!0},c.isClosed=function(){return b.isClosed},b.$emit("layersDialogReady",c)}],link:function(a,b,c){a.filterBaseLayers=function(b){var c=a.mapController.isBaseLayer(b.id);return!c},a.$on("$destroy",function(){$("#"+a.dialogId).dialog("destroy").remove()}),a.$watch(c.uiRefresh,function(){$("#"+a.dialogId).bind("dialogclose",function(){a.isClosed=!a.isClosed})})},transclude:!0}}]),a.directive("geoSearchWfs",["$q","$interpolate","$log",function(a,b,c){return{restrict:"EA",templateUrl:"src/main/js/ui/components/deprecated/search-wfs.html",scope:{resultTemplateUrl:"@",mapController:"=",searchEndPoints:"=",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",primaryWfsProperty:"@",searchIconUrl:"@",placeHolder:"@",activateKey:"@"},controller:["$scope",function(a){a.waitingForResponse=!1}],link:function(b,d,e){function f(a){return a.replace("'","").replace('"',"").replace("%","").replace("*","")}d.bind("keydown",function(a){a.keyCode==b.activateKey&&(b.searchButtonClicked(),b.$apply())});var g,h=[];if(b.limitResults=10,b.$watch("searchEndPoints",function(a){if(a){if(null==b.mapController)return;h=[];for(var c=0;c<b.searchEndPoints.length;c++){var d=b.mapController.createWfsClient(b.searchEndPoints[c].url,b.searchEndPoints[c].featureType,b.searchEndPoints[c].featurePrefix,b.searchEndPoints[c].version,b.searchEndPoints[c].geometryName,b.searchEndPoints[c].datumProjection,b.searchEndPoints[c].isLonLatOrderValid),e=b.mapController.addWfsClient(d);e.endPointId=b.searchEndPoints[c].id,h.push(e),g=b.searchEndPoints[c].featureAttributes}}}),null==e.searchEndPoints&&null!=b.mapController){var i=b.mapController.createWfsClient(b.url,b.featureType,b.featurePrefix,b.version,b.geometryName,b.datumProjection);h.push(b.mapController.addWfsClient(i))}var j=function(d){d=f(d),b.searchResults=[];var e=a.defer(),i=0,j=[];b.waitingForResponse=!0;for(var k=0;k<h.length;k++){var l=h[k];b.mapController.searchWfs(h[k].clientId,d,g).then(function(a){if(null==a)return c.error("Search server is unavailable."),void e.resolve([]);i++;for(var d=0;d<a.features.length;d++)a.features[d].endPointId=l.endPointId,j.push(a.features[d]);i===h.length&&(e.resolve(j),b.waitingForResponse=!1)})}return e.promise};b.getSearchResults=function(a){return null!=a&&a.length>=3?j(a).then(function(a){return b.onResults({data:a}),a.slice(0,10)}):[]},b.onSelected=function(a){b.onResultsSelected({item:a})},b.searchButtonClicked=function(){return"object"==typeof b.query&&null!=b.query.properties&&(b.query=b.query.properties[b.primaryWfsProperty]),null!=b.query?j(b.query).then(function(a){return b.onPerformSearch({data:a}),a}):void 0}},transclude:!0}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.geo-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoNamesPlaceSearch",["$http","$q","$timeout",function(a,b,c){return{restrict:"E",templateUrl:"src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html",scope:{mapController:"=",searchIconUrl:"@",geoNamesApiKey:"@",zoomLevel:"@",countryCode:"@",resultTemplateUrl:"@",onResults:"&",onResultsSelected:"&",onPerformSearch:"&",activateKey:"@"},controller:["$scope",function(){}],link:function(d,e){e.find('input[type="text"]')[0];e.bind("keydown",function(a){if(a.keyCode==d.activateKey){if(d.typeAheadSelected)return;d.searchButtonClicked(),d.$apply()}});var f=function(c,e){"object"==typeof c&&(c=c.properties.name),d.searchResults=[];var f=b.defer();d.waitingForResponse=!0;var g="http://api.geonames.org/searchJSON?q="+encodeURIComponent(c).replace("%20","+")+"&maxRows="+e+"&country="+d.countryCode.toUpperCase()+"&username="+d.geoNamesApiKey;return a.get(g).success(function(a){d.waitingForResponse=!1;for(var b=[],c=0;c<a.geonames.length;c++){var e=a.geonames[c];b.push(d.convertGeoNameToGeoJson(e))}f.resolve(b)}),f.promise};d.getSearchResults=function(a){return null!=a&&a.length>=3?f(a,10).then(function(a){return d.searchInProgress?[]:(d.onResults({data:a}),a)}):[]},d.onSelected=function(a){d.typeAheadSelected=!0,c(function(){d.typeAheadSelected=!1},50),d.onResultsSelected({item:a})},d.searchButtonClicked=function(){return d.searchInProgress=!0,null!=d.query?f(d.query,50).then(function(a){return d.searchInProgress=!1,d.onPerformSearch({data:a}),a}):void 0},d.convertGeoNameToGeoJson=function(a){var b={type:"Feature",geometry:{type:"Point",coordinates:[parseFloat(a.lng),parseFloat(a.lat)]},crs:{type:"name",properties:{name:"EPSG:4326"}}};b.properties={};for(var c in a)a.hasOwnProperty(c)&&(b.properties[c]=a[c]);return b}}}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.google-place-name-search",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("googlePlaceNameSearch",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/google-place-name-search/google-place-name-search.html",scope:{mapController:"=",searchIconUrl:"@",zoomLevel:"@",countryCode:"@"},controller:["$scope",function(){}],link:function(a,b){var c=b.find('input[type="text"]')[0],d=new google.maps.places.Autocomplete(c,{componentRestrictions:{country:a.countryCode}});google.maps.event.addListener(d,"place_changed",function(){var b=d.getPlace();b.geometry&&(a.mapController.zoomTo(a.zoomLevel),a.mapController.setCenter(b.geometry.location.k,b.geometry.location.A,"EPSG:4326"))})}}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.layer-control",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoLayerControl",["GeoUtils",function(a){return{restrict:"E",templateUrl:"src/main/js/ui/components/layer-control/layer-control.html",scope:{layerData:"=",mapController:"=",onVisible:"&",onHidden:"&",onOpacityChange:"&",layerDisabled:"=",onStartLoading:"&",onFinishedLoading:"&"},controller:["$scope",function(b){b.elementId=a.generateUuid()}],compile:function(){return{post:function(a){var b=function(){a.onStartLoading({layerId:a.layerData.id})},c=function(){a.onFinishedLoading({layerId:a.layerData.id})};a.$watch("layerData",function(d){if(null!=d){if(a.layerData.visibility=a.layerData.visibility===!0||"true"===a.layerData.visibility,null==a.mapController)throw new Error("mapController is not available");null!=a.layerData.id&&(a.mapController.registerLayerEvent(a.layerData.id,"loadstart",b),a.mapController.registerLayerEvent(a.layerData.id,"loadend",c))}})},pre:function(a){a.changeOpacity=function(b,c){a.onOpacityChange({layerId:b,opacity:c})},a.layerClicked=function(){a.layerData.visibility=!a.layerData.visibility,a.mapController.setLayerVisibility(a.layerData.id,a.layerData.visibility),a.layerData.visibility?a.onVisible({layerId:a.layerData.id}):a.onHidden({layerId:a.layerData.id})}}}},transclude:!0}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.layer-interaction-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoLayerInteractionToggle",[function(){return{restrict:"E",replace:"true",templateUrl:"src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html",transclude:!0,scope:{toggleIconSource:"@",controllerEmitEventName:"@",toggleOnCallback:"&",toggleOffCallback:"&",onLayerClickCallback:"&",mapController:"=",layerInteractionId:"="},controller:["$scope",function(a){var b=this;b.activate=function(){a.activate()},b.deactivate=function(){a.deactivate()},b.isToggleActive=function(){return a.isToggleOn},a.$emit(a.controllerEmitEventName,b)}],link:function(a,b){a.isToggleOn=!1,a.activate=function(){a.mapController.registerMapClick(c),b.removeClass("gaUiToggleOff"),b.addClass("gaUiToggleOn"),a.isToggleOn=!0,a.toggleOnCallback()},a.deactivate=function(){a.mapController.unRegisterMapClick(c),b.removeClass("gaUiToggleOn"),b.addClass("gaUiToggleOff"),a.isToggleOn=!1,a.toggleOffCallback()},a.toggleClicked=function(){a.isToggleOn=!a.isToggleOn,a.isToggleOn?a.activate():a.deactivate()};var c=function(b){var c=a.mapController.getPointFromEvent(b);a.onLayerClickCallback({point:c,interactionId:a.layerInteractionId})}}}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.layers-drop-down",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoLayersDropDown",[function(){return{restrict:"E",templateUrl:"src/main/js/ui/components/layers-drop-down/layers-drop-down.html",replace:!1,scope:{layersData:"=",selectedModel:"=",controllerEmitEventName:"@",onSelectedLayerChanged:"&",onLayersInitialised:"&",layerGroupId:"@",includeNone:"@"},controller:["$scope",function(a){var b=this;
a.selectLayer=function(){a.onSelectedLayerChanged({layerId:a.selectedModel,groupId:a.layerGroupId})},b.selectLayer=a.selectLayer,a.$emit(a.controllerEmitEventName,b)}],link:function(a){a.$watch("layersData",function(b){b&&!a.selectedModel&&(a.includeNone&&"$none$"!==a.layersData[0].id&&a.layersData.unshift({id:"$none$",name:"None"}),a.selectedModel=b[0].id,a.onLayersInitialised({layerId:a.selectedModel,groupId:a.layerGroupId}))})},transclude:!0}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.measure-toggle",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoMeasureToggle",[function(){return{restrict:"EA",templateUrl:"src/main/js/ui/components/measure-toggle/measure-toggle.html",scope:{resolveStyle:"&",toggleOnCallback:"&",toggleOffCallback:"&",onFinish:"&",onUpdate:"&",mapControlId:"@",controllerEmitEventName:"@",mapController:"="},controller:["$scope",function(a){var b=this;b.activate=function(){a.activate()},b.deactivate=function(){a.deactivate()},b.isToggleActive=function(){return a.mapController.isControlActive(a.mapControlId)},a.$emit(a.controllerEmitEventName,b)}],link:function(a,b){a.handleMeasurements=function(b){var c=a.mapController.getMeasureFromEvent(b);a.onFinish({event:c})},a.handlePartialMeasure=function(b){var c=a.mapController.getMeasureFromEvent(b);a.onUpdate({event:c})},a.activate=function(){a.mapController.activateControl(a.mapControlId),a.mapController.registerControlEvent(a.mapControlId,"measure",a.handleMeasurements),a.mapController.registerControlEvent(a.mapControlId,"measurepartial",a.handlePartialMeasure),b.removeClass("gaUiToggleOff"),b.addClass("gaUiToggleOn"),a.toggleOnCallback()},a.deactivate=function(){a.mapController.deactivateControl(a.mapControlId),a.mapController.unRegisterControlEvent(a.mapControlId,"measure",a.handleMeasurements),a.mapController.unRegisterControlEvent(a.mapControlId,"measurepartial",a.handlePartialMeasure),b.removeClass("gaUiToggleOn"),b.addClass("gaUiToggleOff"),a.toggleOffCallback()},a.handleToggle=function(){a.mapController.isControlActive(a.mapControlId,"measureline")?a.deactivate():a.activate()},a.$on("$destroy",function(){a.mapController.unRegisterControlEvent(a.mapControlId,"measure",a.handleMeasurements),a.mapController.unRegisterControlEvent(a.mapControlId,"measurepartial",a.handleMeasurements)})},transclude:!0,replace:"true"}}])}(),function(){"use strict";var a=angular.module("gawebtoolkit.ui.components.opacity-slider",["gawebtoolkit.ui.directives","ui.utils","gawebtoolkit.utils"]);a.directive("geoLayerOpacitySlider",["$timeout",function(a){return{restrict:"E",templateUrl:"src/main/js/ui/components/opacity-slider/opacity-slider.html",replace:!0,scope:{layerId:"@",layerOpacity:"=",mapController:"=",layerDisabled:"=",titleText:"@",onOpacityChange:"&"},controller:["$scope",function(b){b.changeOpacitySlide=function(c,d){b.layerOpacity=d.value,a(function(){b.$apply(),b.onOpacityChange({layerId:b.layerId,opacity:b.layerOpacity})})},b.getSliderOptions=function(){return{min:0,max:1,range:!1,step:.01,slide:b.changeOpacitySlide,value:b.layerOpacity,disabled:b.layerDisabled}}}],link:function(b,c){b.$watch("layerOpacity",function(a,d){a&&d!==a&&($(c).slider(b.getSliderOptions()),b.layerId&&b.mapController.setOpacity(b.layerId,a))}),a(function(){c.find(".ui-slider-handle").attr("title",b.titleText)})},transclude:!0}}])}();var angular=angular||{},console=console||{},$=$||{},google=google||{};angular.module("gawebtoolkit.ui",["gawebtoolkit.ui.directives","gawebtoolkit.ui.templates","gawebtoolkit.ui.components","ui.utils","gawebtoolkit.utils"]);var app=angular.module("gawebtoolkit.ui.directives",["gawebtoolkit.utils"]);app.directive("geoZoomToExtentButton",[function(){"use strict";return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{extentPoints:"=",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){var b=a.mapController.createBounds(a.extentPoints);a.beforeZoom({points:b}),a.mapController.zoomToExtent(b)}},transclude:!0}}]),app.directive("geoZoomToCenterPositionAnchor",[function(){"use strict";return{restrict:"E",template:'<a ng-click="zoomTo()"><div ng-transclude></div></a>',scope:{geoJsonCoord:"=",projection:"@",mapController:"=",zoomLevel:"@"},link:function(a){a.zoomTo=function(){a.mapController.setCenter(a.geoJsonCoord[1],a.geoJsonCoord[0],a.projection),a.mapController.zoomTo(a.zoomLevel)}},transclude:!0}}]),app.directive("geoZoomToLayerButton",[function(){"use strict";return{restrict:"E",template:'<button type="button" ng-click="zoom()"><div ng-transclude></div></button>',scope:{layerId:"@",mapController:"=",beforeZoom:"&"},link:function(a){a.zoomTo=function(){a.mapController.zoomToLayer(a.layerId)}},transclude:!0}}]),app.directive("geoToggle",[function(){"use strict";var a='<button type="button" ng-click="toggle()"><div ng-transclude></div></button>';return{restrict:"E",replace:"true",template:a,transclude:!0,scope:{gaToggleClicked:"&"},link:function(a){a.toggle=function(){a.gaToggleClicked()}}}}]),app.directive("fixIeSelect",function(){"use strict";return{restrict:"A",controller:["$scope","$element","$timeout",function(a,b,c){a.$watch("options",function(){{var a=$("<option>");b.css("width")}b.css("width"),b.addClass("repaint").removeClass("repaint"),a.appendTo(b).remove(),c(function(){b.css("width","auto")}),a=null})}]}});
//# sourceMappingURL=../../../dist/geo-web-toolkit-min.js.map

angular.module('gawebtoolkit.ui.templates', []).run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('src/main/js/ui/components/base-layer-selector/base-layer-selector.html',
    "<select title=\"Base layer selector\" fix-ie-select ng-options=\"layer.id as layer.name for layer in layersData\"\r" +
    "\n" +
    "        ng-model=\"selectedBaseLayerId\"></select>\r" +
    "\n"
  );


  $templateCache.put('src/main/js/ui/components/deprecated/dialog-toggle.html',
    "<button type=\"button\" ng-click=\"toggleDialog()\"><div ng-transclude></div></button>"
  );


  $templateCache.put('src/main/js/ui/components/deprecated/layers-dialog.html',
    "<div ui-jq=\"dialog\" ui-options=\"dialogConfig\" id=\"{{dialogId}}\">\r" +
    "\n" +
    "    <div ng-repeat=\"layer in layersData\">\r" +
    "\n" +
    "        <geo-layer-control map-controller=\"mapController\" layer-data=\"layer\"></geo-layer-control>\r" +
    "\n" +
    "    </div>\r" +
    "\n" +
    "</div>\r" +
    "\n"
  );


  $templateCache.put('src/main/js/ui/components/deprecated/search-wfs.html',
    "<input type=\"text\" class=\"search-box\" ng-model=\"query\"\r" +
    "\n" +
    "       ng-class=\"{typeAheadLoading:waitingForResponse}\" placeholder=\"{{placeHolder}}\"/>\r" +
    "\n" +
    "<input type=\"image\" class=\"button search-button\" ng-click=\"searchButtonClicked()\"\r" +
    "\n" +
    "       accesskey=\"4\" alt=\"Search using your entered search criteria\"\r" +
    "\n" +
    "       title=\"Search using your entered search criteria\"\r" +
    "\n" +
    "       src=\"{{searchIconUrl}}\">"
  );


  $templateCache.put('src/main/js/ui/components/deprecated/static-dialog.html',
    "<div ui-jq=\"dialog\" ui-options=\"dialogConfig\" id=\"{{dialogId}}\">\r" +
    "\n" +
    "    <div ng-transclude></div>\r" +
    "\n" +
    "</div>"
  );


  $templateCache.put('src/main/js/ui/components/geo-names-place-search/geo-names-place-search.html',
    "<input type=\"text\" class=\"search-box\" placeholder=\"Place name search\" ng-model=\"query\"\r" +
    "\n" +
    "       ng-class=\"{typeAheadLoading:waitingForResponse}\"\r" +
    "\n" +
    "       typeahead=\"result as result.properties.name for result in getSearchResults($viewValue)\"\r" +
    "\n" +
    "       typeahead-template-url=\"{{resultTemplateUrl}}\"\r" +
    "\n" +
    "       typeahead-on-select=\"onSelected($item, $model, $label)\"\r" +
    "\n" +
    "       typeahead-wait-ms=\"200\" typeahead-editable=\"true\"/>\r" +
    "\n" +
    "<input type=\"image\" class=\"button search-button\" accesskey=\"4\"\r" +
    "\n" +
    "       ng-click=\"searchButtonClicked()\"\r" +
    "\n" +
    "       alt=\"Search using your entered search criteria\" title=\"Search using your entered search criteria\"\r" +
    "\n" +
    "       src=\"{{searchIconUrl}}\"/>"
  );


  $templateCache.put('src/main/js/ui/components/google-place-name-search/google-place-name-search.html',
    "<input type=\"text\" class=\"search-box\" placeholder=\"{{placeHolder}}\"/>\r" +
    "\n" +
    "<input type=\"image\" class=\"button search-button\" accesskey=\"4\"\r" +
    "\n" +
    "       alt=\"Search using your entered search criteria\" title=\"Search using your entered search criteria\"\r" +
    "\n" +
    "       src=\"{{searchIconUrl}}\"/>"
  );


  $templateCache.put('src/main/js/ui/components/layer-control/layer-control.html',
    "<label for=\"{{elementId}}\" class=\"checkbox gaLayerControlLabel\">\r" +
    "\n" +
    "    <input id=\"{{elementId}}\" type=\"checkbox\" ng-model=\"layerData.visibility\" ng-click=\"layerClicked()\"\r" +
    "\n" +
    "           ng-disabled=\"layerDisabled\"/>{{layerData.name}}\r" +
    "\n" +
    "</label>\r" +
    "\n" +
    "<div class=\"gaLayerControlTransclude\" ng-transclude></div>\r" +
    "\n" +
    "<div ng-show=\"layerData.visibility\" class=\"gaLayerControlSliderContainer\">\r" +
    "\n" +
    "    <geo-layer-opacity-slider\r" +
    "\n" +
    "            map-controller=\"mapController\"\r" +
    "\n" +
    "            layer-opacity=\"layerData.opacity\"\r" +
    "\n" +
    "            layer-id=\"{{layerData.id}}\"\r" +
    "\n" +
    "            layer-disabled=\"layerDisabled\"\r" +
    "\n" +
    "            on-opacity-change=\"changeOpacity(layerId,opacity)\"\r" +
    "\n" +
    "            title-text=\"Opacity control for layer - {{layerData.name}}\">\r" +
    "\n" +
    "    </geo-layer-opacity-slider>\r" +
    "\n" +
    "</div>\r" +
    "\n"
  );


  $templateCache.put('src/main/js/ui/components/layer-interaction-toggle/layer-interaction-toggle.html',
    "<button ng-click=\"toggleClicked()\" class=\"gaUiToggleOff\" type=\"button\">\r" +
    "\n" +
    "    <div ng-transclude></div>\r" +
    "\n" +
    "</button>"
  );


  $templateCache.put('src/main/js/ui/components/layers-drop-down/layers-drop-down.html',
    "<div>\r" +
    "\n" +
    "    <select fix-ie-select ng-model=\"selectedModel\" ng-change=\"selectLayer()\"\r" +
    "\n" +
    "            ng-options=\"dropDownLayer.id as dropDownLayer.name for dropDownLayer in layersData\">\r" +
    "\n" +
    "    </select>\r" +
    "\n" +
    "</div>"
  );


  $templateCache.put('src/main/js/ui/components/measure-toggle/measure-toggle.html',
    "<button type=\"button\" ng-click=\"handleToggle()\" class=\"gaUiToggleOff\">\r" +
    "\n" +
    "    <span ng-transclude></span>\r" +
    "\n" +
    "</button>"
  );


  $templateCache.put('src/main/js/ui/components/opacity-slider/opacity-slider.html',
    "<div ui-jq=\"slider\" ui-options=\"getSliderOptions()\"></div>"
  );

}]);
